name: Deploy Strapi ECS BlueGreen

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  ECR_REPO: parth-strapi-ecr
  ECR_ACCOUNT: 607700977843
  ECS_CLUSTER: parth-strapi-cluster
  TASK_FAMILY: parth-strapi-task
  CODEDEPLOY_APP: parth-strapi-codedeploy-app
  DEPLOYMENT_GROUP: parth-strapi-dg

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & Push Docker image
      run: |
        IMAGE_TAG=parth-strapi-$(date +%s)
        ECR_URI=${{ env.ECR_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}
        docker build -t $ECR_URI:$IMAGE_TAG ./strapi-app
        docker push $ECR_URI:$IMAGE_TAG
        echo "image=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6

    - name: Terraform Init & Apply
      working-directory: terraform
      run: |
        terraform init
        terraform apply -auto-approve -var="ecr_image_url=${{ env.image }}"

    - name: Register new Task Definition
      id: register_task
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --family ${{ env.TASK_FAMILY }} \
          --cli-input-json file://terraform/task-def.json \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Generate AppSpec base64
      run: |
        APPSPEC_JSON=$(cat <<EOF
        {
          "version": 1,
          "Resources": [
            {
              "TargetService": {
                "Type": "AWS::ECS::Service",
                "Properties": {
                  "TaskDefinition": "${TASK_DEF_ARN}",
                  "LoadBalancerInfo": {
                    "ContainerName": "strapi",
                    "ContainerPort": 1337
                  }
                }
              }
            }
          ]
        }
        EOF
        )
        echo "$APPSPEC_JSON" | base64 > appspec.b64
        echo "Base64 appspec created."

    - name: Create CodeDeploy Deployment
      run: |
        DEPLOYMENT_ID=$(aws deploy create-deployment \
          --application-name ${{ env.CODEDEPLOY_APP }} \
          --deployment-group-name ${{ env.DEPLOYMENT_GROUP }} \
          --revision '{"appSpecContent":{"content":"'"$(cat appspec.b64)"'"}}' \
          --query 'deploymentId' --output text)
        echo "Deployment ID: $DEPLOYMENT_ID"
