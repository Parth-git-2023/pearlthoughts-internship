{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/utils/urls.ts", "../../../../../packages/core/admin/admin/src/services/admin.ts"],
  "sourcesContent": ["import trimEnd from 'lodash/trimEnd';\r\n\r\nconst prefixFileUrlWithBackendUrl = (fileURL?: string): string | undefined => {\r\n  return !!fileURL && fileURL.startsWith('/') ? `${window.strapi.backendURL}${fileURL}` : fileURL;\r\n};\r\n\r\n/**\r\n * @description Creates an absolute URL, if there is no URL or it\r\n * is relative, we use the `window.location.origin` as a fallback.\r\n * IF it's an absolute URL, we return it as is.\r\n */\r\nconst createAbsoluteUrl = (url?: string): string => {\r\n  if (!url) {\r\n    return window.location.origin;\r\n  }\r\n  if (url.startsWith('/')) {\r\n    /**\r\n     * This will also manage protocol relative URLs which is fine because\r\n     * as we can see from the test, we still get the expected result.\r\n     */\r\n    return trimEnd(new URL(url, window.location.origin).toString(), '/');\r\n  } else {\r\n    return url;\r\n  }\r\n};\r\n\r\nexport { createAbsoluteUrl, prefixFileUrlWithBackendUrl };\r\n", "import {\r\n  type TelemetryProperties,\r\n  type Init,\r\n  type Information,\r\n  type GetProjectSettings,\r\n  type UpdateProjectSettings,\r\n  type Plugins,\r\n  type GetLicenseLimitInformation,\r\n  GetGuidedTourMeta,\r\n} from '../../../shared/contracts/admin';\r\nimport { prefixFileUrlWithBackendUrl } from '../utils/urls';\r\n\r\nimport { adminApi } from './api';\r\n\r\ninterface ConfigurationLogo {\r\n  custom?: {\r\n    name?: string;\r\n    url?: string;\r\n  };\r\n  default: string;\r\n}\r\n\r\nconst admin = adminApi\r\n  .enhanceEndpoints({\r\n    addTagTypes: ['ProjectSettings', 'LicenseLimits', 'LicenseTrialTimeLeft', 'GuidedTourMeta'],\r\n  })\r\n  .injectEndpoints({\r\n    endpoints: (builder) => ({\r\n      init: builder.query<Init.Response['data'], void>({\r\n        query: () => ({\r\n          url: '/admin/init',\r\n          method: 'GET',\r\n        }),\r\n        transformResponse(res: Init.Response) {\r\n          return res.data;\r\n        },\r\n        providesTags: ['ProjectSettings'],\r\n      }),\r\n      information: builder.query<Information.Response['data'], void>({\r\n        query: () => ({\r\n          url: '/admin/information',\r\n          method: 'GET',\r\n        }),\r\n        transformResponse(res: Information.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      telemetryProperties: builder.query<TelemetryProperties.Response['data'], void>({\r\n        query: () => ({\r\n          url: '/admin/telemetry-properties',\r\n          method: 'GET',\r\n          config: {\r\n            validateStatus: (status: number) => status < 500,\r\n          },\r\n        }),\r\n        transformResponse(res: TelemetryProperties.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      projectSettings: builder.query<\r\n        { authLogo?: ConfigurationLogo['custom']; menuLogo?: ConfigurationLogo['custom'] },\r\n        void\r\n      >({\r\n        query: () => ({\r\n          url: '/admin/project-settings',\r\n          method: 'GET',\r\n        }),\r\n        providesTags: ['ProjectSettings'],\r\n        transformResponse(data: GetProjectSettings.Response) {\r\n          return {\r\n            authLogo: data.authLogo\r\n              ? {\r\n                  name: data.authLogo.name,\r\n                  url: prefixFileUrlWithBackendUrl(data.authLogo.url),\r\n                }\r\n              : undefined,\r\n            menuLogo: data.menuLogo\r\n              ? {\r\n                  name: data.menuLogo.name,\r\n                  url: prefixFileUrlWithBackendUrl(data.menuLogo.url),\r\n                }\r\n              : undefined,\r\n          };\r\n        },\r\n      }),\r\n      updateProjectSettings: builder.mutation<UpdateProjectSettings.Response, FormData>({\r\n        query: (data) => ({\r\n          url: '/admin/project-settings',\r\n          method: 'POST',\r\n          data,\r\n          config: {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          },\r\n        }),\r\n        invalidatesTags: ['ProjectSettings'],\r\n      }),\r\n      getPlugins: builder.query<Plugins.Response, void>({\r\n        query: () => ({\r\n          url: '/admin/plugins',\r\n          method: 'GET',\r\n        }),\r\n      }),\r\n      getLicenseLimits: builder.query<GetLicenseLimitInformation.Response, void>({\r\n        query: () => ({\r\n          url: '/admin/license-limit-information',\r\n          method: 'GET',\r\n        }),\r\n        providesTags: ['LicenseLimits'],\r\n      }),\r\n      getLicenseTrialTimeLeft: builder.query<{ trialEndsAt: string }, void>({\r\n        query: () => ({\r\n          url: '/admin/license-trial-time-left',\r\n          method: 'GET',\r\n        }),\r\n        providesTags: ['LicenseTrialTimeLeft'],\r\n      }),\r\n      getGuidedTourMeta: builder.query<GetGuidedTourMeta.Response, void>({\r\n        query: () => ({\r\n          url: '/admin/guided-tour-meta',\r\n          method: 'GET',\r\n        }),\r\n        providesTags: ['GuidedTourMeta'],\r\n      }),\r\n    }),\r\n    overrideExisting: false,\r\n  });\r\n\r\nconst {\r\n  useInitQuery,\r\n  useTelemetryPropertiesQuery,\r\n  useInformationQuery,\r\n  useProjectSettingsQuery,\r\n  useUpdateProjectSettingsMutation,\r\n  useGetPluginsQuery,\r\n  useGetLicenseLimitsQuery,\r\n  useGetLicenseTrialTimeLeftQuery,\r\n  useGetGuidedTourMetaQuery,\r\n} = admin;\r\n\r\nexport {\r\n  useInitQuery,\r\n  useTelemetryPropertiesQuery,\r\n  useInformationQuery,\r\n  useProjectSettingsQuery,\r\n  useUpdateProjectSettingsMutation,\r\n  useGetPluginsQuery,\r\n  useGetLicenseLimitsQuery,\r\n  useGetLicenseTrialTimeLeftQuery,\r\n  useGetGuidedTourMetaQuery,\r\n};\r\n\r\nexport type { ConfigurationLogo };\r\n"],
  "mappings": "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",
  "names": ["trimEnd"]
}
