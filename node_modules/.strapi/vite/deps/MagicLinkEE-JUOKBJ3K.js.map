{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/pages/SettingsPage/pages/Users/components/MagicLinkEE.tsx"],
  "sourcesContent": ["import { useIntl } from 'react-intl';\r\n\r\nimport { getBasename } from '../../../../../../../../admin/src/core/utils/basename';\r\nimport { MagicLinkWrapper } from '../../../../../../../../admin/src/pages/Settings/pages/Users/components/MagicLinkWrapper';\r\n\r\nimport type { MagicLinkCEProps } from '../../../../../../../../admin/src/pages/Settings/pages/Users/components/MagicLinkCE';\r\n\r\n// FIXME replace with parts compo when ready\r\nexport const MagicLinkEE = ({ registrationToken }: MagicLinkCEProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  if (registrationToken) {\r\n    return (\r\n      <MagicLinkWrapper\r\n        target={`${\r\n          window.location.origin\r\n        }${getBasename()}/auth/register?registrationToken=${registrationToken}`}\r\n      >\r\n        {formatMessage({\r\n          id: 'app.components.Users.MagicLink.connect',\r\n          defaultMessage: 'Copy and share this link to give access to this user',\r\n        })}\r\n      </MagicLinkWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MagicLinkWrapper target={`${window.location.origin}${getBasename()}/auth/login`}>\r\n      {formatMessage({\r\n        id: 'app.components.Users.MagicLink.connect.sso',\r\n        defaultMessage:\r\n          'Send this link to the user, the first login can be made via a SSO provider.',\r\n      })}\r\n    </MagicLinkWrapper>\r\n  );\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaM;AALC,IAAM,cAAc,CAAC,EAAE,kBAAkB,MAAwB;AACtE,QAAM,EAAE,cAAc,IAAI,QAAQ;AAElC,MAAI,mBAAmB;AACrB,eACE;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,GACN,OAAO,SAAS,MAClB,GAAG,YAAY,CAAC,oCAAoC,iBAAiB;AAAA,QAEpE,wBAAc;AAAA,UACb,IAAI;AAAA,UACJ,gBAAgB;AAAA,QAClB,CAAC;AAAA;AAAA,IACH;AAAA,EAEJ;AAEA,aACE,wBAAC,oBAAiB,QAAQ,GAAG,OAAO,SAAS,MAAM,GAAG,YAAY,CAAC,eAChE,wBAAc;AAAA,IACb,IAAI;AAAA,IACJ,gBACE;AAAA,EACJ,CAAC,GACH;AAEJ;",
  "names": []
}
