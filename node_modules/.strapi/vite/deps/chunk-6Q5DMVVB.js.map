{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/hooks/useClipboard.ts", "../../../../../packages/core/admin/admin/src/components/ContentBox.tsx"],
  "sourcesContent": ["import { useCallback } from 'react';\r\n\r\nconst useClipboard = () => {\r\n  const copy = useCallback(async (value: string | number) => {\r\n    try {\r\n      // only strings and numbers casted to strings can be copied to clipboard\r\n      if (typeof value !== 'string' && typeof value !== 'number') {\r\n        throw new Error(\r\n          `Cannot copy typeof ${typeof value} to clipboard, must be a string or number`\r\n        );\r\n      }\r\n      // empty strings are also considered invalid\r\n      else if (value === '') {\r\n        throw new Error(`Cannot copy empty string to clipboard.`);\r\n      }\r\n\r\n      const stringifiedValue = value.toString();\r\n\r\n      await navigator.clipboard.writeText(stringifiedValue);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      /**\r\n       * Realistically this isn't useful in production as there's nothing the user can do.\r\n       */\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('Copy failed', error);\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  return { copy };\r\n};\r\n\r\nexport { useClipboard };\r\n", "import {\r\n  Flex,\r\n  FlexComponent,\r\n  FlexProps,\r\n  Typography,\r\n  TypographyComponent,\r\n} from '@strapi/design-system';\r\nimport { styled } from 'styled-components';\r\n\r\ninterface ContentBoxProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n  icon?: FlexProps['children'];\r\n  iconBackground?: FlexProps['background'];\r\n  endAction?: FlexProps['children'];\r\n  titleEllipsis?: boolean;\r\n}\r\n\r\nconst ContentBox = ({\r\n  title,\r\n  subtitle,\r\n  icon,\r\n  iconBackground,\r\n  endAction,\r\n  titleEllipsis = false,\r\n}: ContentBoxProps) => {\r\n  if (title && title.length > 70 && titleEllipsis) {\r\n    title = `${title.substring(0, 70)}...`;\r\n  }\r\n\r\n  return (\r\n    <Flex shadow=\"tableShadow\" hasRadius padding={6} background=\"neutral0\">\r\n      <IconWrapper background={iconBackground} hasRadius padding={3}>\r\n        {icon}\r\n      </IconWrapper>\r\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={endAction ? 0 : 1}>\r\n        <Flex>\r\n          <TypographyWordBreak fontWeight=\"semiBold\" variant=\"pi\">\r\n            {title}\r\n          </TypographyWordBreak>\r\n          {endAction}\r\n        </Flex>\r\n        <Typography textColor=\"neutral600\">{subtitle}</Typography>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst IconWrapper = styled<FlexComponent>(Flex)`\r\n  margin-right: ${({ theme }) => theme.spaces[6]};\r\n\r\n  svg {\r\n    width: 3.2rem;\r\n    height: 3.2rem;\r\n  }\r\n`;\r\n\r\nconst TypographyWordBreak = styled<TypographyComponent>(Typography)`\r\n  color: ${({ theme }) => theme.colors.neutral800};\r\n  word-break: break-all;\r\n`;\r\n\r\nexport { ContentBox };\r\nexport type { ContentBoxProps };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,mBAA4B;AAE5B,IAAM,eAAe,MAAM;AACzB,QAAM,WAAO,0BAAY,OAAO,UAA2B;AACzD,QAAI;AAEF,UAAI,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AAC1D,cAAM,IAAI;AAAA,UACR,sBAAsB,OAAO,KAAK;AAAA,QACpC;AAAA,MACF,WAES,UAAU,IAAI;AACrB,cAAM,IAAI,MAAM,wCAAwC;AAAA,MAC1D;AAEA,YAAM,mBAAmB,MAAM,SAAS;AAExC,YAAM,UAAU,UAAU,UAAU,gBAAgB;AAEpD,aAAO;AAAA,IACT,SAAS,OAAO;AAId,UAAI,MAAwC;AAC1C,gBAAQ,KAAK,eAAe,KAAK;AAAA,MACnC;AAEA,aAAO;AAAA,IACT;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO,EAAE,KAAK;AAChB;;;ACFM;AAdN,IAAM,aAAa,CAAC;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB;AAClB,MAAuB;AACrB,MAAI,SAAS,MAAM,SAAS,MAAM,eAAe;AAC/C,YAAQ,GAAG,MAAM,UAAU,GAAG,EAAE,CAAC;AAAA,EACnC;AAEA,aACE,yBAAC,QAAK,QAAO,eAAc,WAAS,MAAC,SAAS,GAAG,YAAW,YAC1D;AAAA,gCAAC,eAAY,YAAY,gBAAgB,WAAS,MAAC,SAAS,GACzD,gBACH;AAAA,QACA,yBAAC,QAAK,WAAU,UAAS,YAAW,WAAU,KAAK,YAAY,IAAI,GACjE;AAAA,mCAAC,QACC;AAAA,oCAAC,uBAAoB,YAAW,YAAW,SAAQ,MAChD,iBACH;AAAA,QACC;AAAA,SACH;AAAA,UACA,wBAAC,cAAW,WAAU,cAAc,oBAAS;AAAA,OAC/C;AAAA,KACF;AAEJ;AAEA,IAAM,cAAc,GAAsB,IAAI;AAAA,kBAC5B,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhD,IAAM,sBAAsB,GAA4B,UAAU;AAAA,WACvD,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU;AAAA;AAAA;",
  "names": []
}
