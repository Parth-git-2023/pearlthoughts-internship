{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/services/apiTokens.ts"],
  "sourcesContent": ["import * as ApiToken from '../../../shared/contracts/api-token';\r\n\r\nimport { adminApi } from './api';\r\n\r\nconst apiTokensService = adminApi\r\n  .enhanceEndpoints({\r\n    addTagTypes: ['ApiToken', 'GuidedTourMeta'],\r\n  })\r\n  .injectEndpoints({\r\n    endpoints: (builder) => ({\r\n      getAPITokens: builder.query<ApiToken.List.Response['data'], void>({\r\n        query: () => '/admin/api-tokens',\r\n        transformResponse: (response: ApiToken.List.Response) => response.data,\r\n        providesTags: (res, _err) => [\r\n          ...(res?.map(({ id }) => ({ type: 'ApiToken' as const, id })) ?? []),\r\n          { type: 'ApiToken' as const, id: 'LIST' },\r\n        ],\r\n      }),\r\n      getAPIToken: builder.query<ApiToken.Get.Response['data'], ApiToken.Get.Params['id']>({\r\n        query: (id) => `/admin/api-tokens/${id}`,\r\n        transformResponse: (response: ApiToken.Get.Response) => response.data,\r\n        providesTags: (res, _err, id) => [{ type: 'ApiToken' as const, id }],\r\n      }),\r\n      createAPIToken: builder.mutation<\r\n        ApiToken.Create.Response['data'],\r\n        ApiToken.Create.Request['body']\r\n      >({\r\n        query: (body) => ({\r\n          url: '/admin/api-tokens',\r\n          method: 'POST',\r\n          data: body,\r\n        }),\r\n        transformResponse: (response: ApiToken.Create.Response) => response.data,\r\n        invalidatesTags: [{ type: 'ApiToken' as const, id: 'LIST' }, 'GuidedTourMeta'],\r\n      }),\r\n      deleteAPIToken: builder.mutation<\r\n        ApiToken.Revoke.Response['data'],\r\n        ApiToken.Revoke.Params['id']\r\n      >({\r\n        query: (id) => ({\r\n          url: `/admin/api-tokens/${id}`,\r\n          method: 'DELETE',\r\n        }),\r\n        transformResponse: (response: ApiToken.Revoke.Response) => response.data,\r\n        invalidatesTags: (_res, _err, id) => [{ type: 'ApiToken' as const, id }],\r\n      }),\r\n      updateAPIToken: builder.mutation<\r\n        ApiToken.Update.Response['data'],\r\n        ApiToken.Update.Params & ApiToken.Update.Request['body']\r\n      >({\r\n        query: ({ id, ...body }) => ({\r\n          url: `/admin/api-tokens/${id}`,\r\n          method: 'PUT',\r\n          data: body,\r\n        }),\r\n        transformResponse: (response: ApiToken.Update.Response) => response.data,\r\n        invalidatesTags: (_res, _err, { id }) => [{ type: 'ApiToken' as const, id }],\r\n      }),\r\n    }),\r\n  });\r\n\r\nconst {\r\n  useGetAPITokensQuery,\r\n  useGetAPITokenQuery,\r\n  useCreateAPITokenMutation,\r\n  useDeleteAPITokenMutation,\r\n  useUpdateAPITokenMutation,\r\n} = apiTokensService;\r\n\r\nexport {\r\n  useGetAPITokensQuery,\r\n  useGetAPITokenQuery,\r\n  useCreateAPITokenMutation,\r\n  useDeleteAPITokenMutation,\r\n  useUpdateAPITokenMutation,\r\n};\r\n"],
  "mappings": ";;;;;AAIA,IAAM,mBAAmB,SACtB,iBAAiB;AAAA,EAChB,aAAa,CAAC,YAAY,gBAAgB;AAC5C,CAAC,EACA,gBAAgB;AAAA,EACf,WAAW,CAAC,aAAa;AAAA,IACvB,cAAc,QAAQ,MAA4C;AAAA,MAChE,OAAO,MAAM;AAAA,MACb,mBAAmB,CAAC,aAAqC,SAAS;AAAA,MAClE,cAAc,CAAC,KAAK,SAAS;AAAA,QAC3B,IAAI,2BAAK,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,MAAM,YAAqB,GAAG,QAAO,CAAC;AAAA,QAClE,EAAE,MAAM,YAAqB,IAAI,OAAO;AAAA,MAC1C;AAAA,IACF,CAAC;AAAA,IACD,aAAa,QAAQ,MAAgE;AAAA,MACnF,OAAO,CAAC,OAAO,qBAAqB,EAAE;AAAA,MACtC,mBAAmB,CAAC,aAAoC,SAAS;AAAA,MACjE,cAAc,CAAC,KAAK,MAAM,OAAO,CAAC,EAAE,MAAM,YAAqB,GAAG,CAAC;AAAA,IACrE,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,UAAU;AAAA,QAChB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,EAAE,MAAM,YAAqB,IAAI,OAAO,GAAG,gBAAgB;AAAA,IAC/E,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,QAAQ;AAAA,QACd,KAAK,qBAAqB,EAAE;AAAA,QAC5B,QAAQ;AAAA,MACV;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,MAAM,MAAM,OAAO,CAAC,EAAE,MAAM,YAAqB,GAAG,CAAC;AAAA,IACzE,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,EAAE,IAAI,GAAG,KAAK,OAAO;AAAA,QAC3B,KAAK,qBAAqB,EAAE;AAAA,QAC5B,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,MAAM,MAAM,EAAE,GAAG,MAAM,CAAC,EAAE,MAAM,YAAqB,GAAG,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH;AACF,CAAC;AAEH,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;",
  "names": []
}
