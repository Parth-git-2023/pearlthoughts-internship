import {
  StageColumn
} from "./chunk-B7WCMKDA.js";
import "./chunk-JREDZZTP.js";
import {
  useGetRecentlyAssignedDocumentsQuery
} from "./chunk-HIJT5MYP.js";
import "./chunk-N6PWHVO4.js";
import "./chunk-TN6RTBGG.js";
import "./chunk-ALQKKCCU.js";
import "./chunk-XKCYZSU4.js";
import "./chunk-I22WRIB5.js";
import "./chunk-XX6LV7KW.js";
import "./chunk-ZQVLIZPZ.js";
import "./chunk-J7J5CC52.js";
import {
  DocumentStatus,
  RelativeTime
} from "./chunk-ZFF5TETH.js";
import "./chunk-PUTGXHOE.js";
import "./chunk-NLQDD6GV.js";
import "./chunk-3DFTBBEY.js";
import "./chunk-XONCH55P.js";
import "./chunk-VGLD7XCK.js";
import "./chunk-2ZQUEACL.js";
import "./chunk-FYXG3DTK.js";
import {
  Widget
} from "./chunk-AUQFPK2Y.js";
import "./chunk-XEUV47ZT.js";
import "./chunk-4J4JH4DL.js";
import "./chunk-HXZ2GHFZ.js";
import "./chunk-G3UG26ZE.js";
import "./chunk-6Q5DMVVB.js";
import "./chunk-D5N4CUND.js";
import "./chunk-Y6F2Z2AQ.js";
import "./chunk-HSX2BZF6.js";
import "./chunk-L5ESVDCC.js";
import "./chunk-XXRLJZ2Z.js";
import "./chunk-7WFYXSNR.js";
import "./chunk-5TWNRMNB.js";
import "./chunk-ZRXSF5PI.js";
import "./chunk-2M3OHFCF.js";
import "./chunk-3QOMPMDL.js";
import "./chunk-L6MVB4FQ.js";
import "./chunk-OQ5X2AZ3.js";
import "./chunk-7XSIHJSQ.js";
import "./chunk-PJGZMO5F.js";
import "./chunk-JUJLGPZB.js";
import "./chunk-6GQ5QKHI.js";
import "./chunk-6MHIA2XQ.js";
import "./chunk-JTVP57KZ.js";
import "./chunk-BR5DWYPY.js";
import "./chunk-X5YFDRMS.js";
import "./chunk-LVVND4TK.js";
import "./chunk-O6JJIRK6.js";
import {
  useTracking
} from "./chunk-DHQERSO6.js";
import "./chunk-GLPT7RON.js";
import "./chunk-54PZNGL6.js";
import "./chunk-OUTHPJ5W.js";
import "./chunk-YQN4TQZU.js";
import "./chunk-ITUTZMO4.js";
import "./chunk-S4GSJQUH.js";
import "./chunk-3CYOA7RQ.js";
import "./chunk-3Y3HZKRY.js";
import "./chunk-PR5W4YOM.js";
import "./chunk-75I5DWRQ.js";
import {
  Link,
  useNavigate
} from "./chunk-QOSJGLB6.js";
import "./chunk-O4TQZ7PI.js";
import "./chunk-6VYH4IES.js";
import "./chunk-ICS3EKH5.js";
import "./chunk-6VU4ULW6.js";
import "./chunk-WA6BWN3W.js";
import "./chunk-UCDGERJK.js";
import "./chunk-I7675365.js";
import "./chunk-EHBUXG3W.js";
import "./chunk-5KTEVKJL.js";
import "./chunk-CEKG4MVB.js";
import "./chunk-CLDKBGB3.js";
import "./chunk-RYHDJ43U.js";
import "./chunk-GARU6WOT.js";
import "./chunk-2T3F2FEA.js";
import "./chunk-FBKW3ZX5.js";
import "./chunk-6XMPWYL4.js";
import "./chunk-4PYOUU3W.js";
import "./chunk-JNCTODJD.js";
import "./chunk-2VOUQL7N.js";
import "./chunk-SMSMUSQ2.js";
import "./chunk-PBKEIS74.js";
import "./chunk-XNLL4XTY.js";
import "./chunk-VJHHRLHY.js";
import "./chunk-HWWDZF4D.js";
import "./chunk-Z7WXACEM.js";
import "./chunk-PZKJYQOP.js";
import "./chunk-KTCYCI5X.js";
import "./chunk-4S6CO3NF.js";
import "./chunk-WZMMABOO.js";
import "./chunk-KU6R7J3L.js";
import "./chunk-ALOZZQWE.js";
import "./chunk-3XH2Q2B6.js";
import "./chunk-SM5ZDAVK.js";
import "./chunk-AAOWBC4P.js";
import "./chunk-AVUVASSG.js";
import "./chunk-DEZRKVMG.js";
import "./chunk-LDTLLP4K.js";
import "./chunk-CFOYKXNH.js";
import "./chunk-DWNGFC4T.js";
import "./chunk-SKI2TI5D.js";
import "./chunk-PQYVQDZP.js";
import "./chunk-ZGAXZ2TY.js";
import "./chunk-6EUDYBNR.js";
import "./chunk-3KMG3VFU.js";
import "./chunk-UTVXCYRG.js";
import {
  Box,
  IconButton,
  Table,
  Tbody,
  Td,
  Tr,
  Typography
} from "./chunk-3AUSDG4O.js";
import {
  ForwardRef$1z
} from "./chunk-F5I3ZVMF.js";
import {
  dt
} from "./chunk-FJZ2NJT6.js";
import "./chunk-VH7UJDNP.js";
import "./chunk-HG4QJCZT.js";
import "./chunk-I7DIJEXN.js";
import {
  useIntl
} from "./chunk-2BDXRWHF.js";
import "./chunk-SBRVGDJ6.js";
import "./chunk-YUZK7WZ2.js";
import "./chunk-NSR7OH4Q.js";
import "./chunk-ZCDXR5JO.js";
import "./chunk-47RN6QNY.js";
import "./chunk-IMHIZKPC.js";
import "./chunk-URNLJJFR.js";
import "./chunk-JHXWLAQ5.js";
import "./chunk-PWXBRFBA.js";
import "./chunk-MZAWSZWW.js";
import "./chunk-QIQU42WJ.js";
import "./chunk-XVBZSUZI.js";
import "./chunk-2NWCSGSS.js";
import {
  require_jsx_runtime
} from "./chunk-GAPF2DTI.js";
import "./chunk-2ZN62OJX.js";
import "./chunk-IV5CMKTD.js";
import "./chunk-ENGB2K3X.js";
import "./chunk-ISIKDMAB.js";
import "./chunk-X5DDYWPV.js";
import "./chunk-TUHVKLNT.js";
import "./chunk-3POB64WN.js";
import "./chunk-63YMLYWU.js";
import "./chunk-YIY4KI6G.js";
import "./chunk-7CLWPW6Q.js";
import "./chunk-IVGYXB4P.js";
import "./chunk-H3WCXLKE.js";
import "./chunk-NDGNZ36Q.js";
import "./chunk-MNGCFISN.js";
import {
  __toESM
} from "./chunk-X6GFWOGJ.js";

// ../packages/core/review-workflows/admin/src/components/Widgets.tsx
var import_jsx_runtime = __toESM(require_jsx_runtime());
var CellTypography = dt(Typography).attrs({ maxWidth: "14.4rem", display: "block" })`
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
`;
var RecentDocumentsTable = ({ documents }) => {
  const { formatMessage } = useIntl();
  const { trackUsage } = useTracking();
  const navigate = useNavigate();
  const getEditViewLink = (document) => {
    const isSingleType = document.kind === "singleType";
    const kindPath = isSingleType ? "single-types" : "collection-types";
    const queryParams = document.locale ? `?plugins[i18n][locale]=${document.locale}` : "";
    return `/content-manager/${kindPath}/${document.contentTypeUid}${isSingleType ? "" : "/" + document.documentId}${queryParams}`;
  };
  const handleRowClick = (document) => () => {
    trackUsage("willEditEntryFromHome");
    const link = getEditViewLink(document);
    navigate(link);
  };
  return (0, import_jsx_runtime.jsx)(Table, { colCount: 6, rowCount: (documents == null ? void 0 : documents.length) ?? 0, children: (0, import_jsx_runtime.jsx)(Tbody, { children: documents == null ? void 0 : documents.map((document) => (0, import_jsx_runtime.jsxs)(Tr, { onClick: handleRowClick(document), cursor: "pointer", children: [
    (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(CellTypography, { title: document.title, variant: "omega", textColor: "neutral800", children: document.title }) }),
    (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(CellTypography, { variant: "omega", textColor: "neutral600", children: document.kind === "singleType" ? formatMessage({
      id: "content-manager.widget.last-edited.single-type",
      defaultMessage: "Single-Type"
    }) : formatMessage({
      id: document.contentTypeDisplayName,
      defaultMessage: document.contentTypeDisplayName
    }) }) }),
    (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(Box, { display: "inline-block", children: document.status ? (0, import_jsx_runtime.jsx)(DocumentStatus, { status: document.status }) : (0, import_jsx_runtime.jsx)(Typography, { textColor: "neutral600", "aria-hidden": true, children: "-" }) }) }),
    (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(Typography, { textColor: "neutral600", children: (0, import_jsx_runtime.jsx)(RelativeTime, { timestamp: new Date(document.updatedAt) }) }) }),
    (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(StageColumn, { strapi_stage: document.strapi_stage }) }),
    (0, import_jsx_runtime.jsx)(Td, { onClick: (e) => e.stopPropagation(), children: (0, import_jsx_runtime.jsx)(Box, { display: "inline-block", children: (0, import_jsx_runtime.jsx)(
      IconButton,
      {
        tag: Link,
        to: getEditViewLink(document),
        onClick: () => trackUsage("willEditEntryFromHome"),
        label: formatMessage({
          id: "content-manager.actions.edit.label",
          defaultMessage: "Edit"
        }),
        variant: "ghost",
        children: (0, import_jsx_runtime.jsx)(ForwardRef$1z, {})
      }
    ) }) })
  ] }, document.documentId)) }) });
};
var AssignedWidget = () => {
  const { formatMessage } = useIntl();
  const { data, isLoading, error } = useGetRecentlyAssignedDocumentsQuery();
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !data) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, { children: formatMessage({
      id: "review-workflows.widget.assigned.no-data",
      defaultMessage: "No entries"
    }) });
  }
  return (0, import_jsx_runtime.jsx)(RecentDocumentsTable, { documents: data });
};
export {
  AssignedWidget
};
//# sourceMappingURL=Widgets-SMC6LC3X.js.map
