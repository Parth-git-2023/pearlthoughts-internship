import {
  PrivateRoute
} from "./chunk-IZRZFDIA.js";
import {
  LayoutContent,
  Logo,
  UnauthenticatedLayout
} from "./chunk-2M3OHFCF.js";
import "./chunk-3QOMPMDL.js";
import "./chunk-PJGZMO5F.js";
import "./chunk-DHQERSO6.js";
import "./chunk-GLPT7RON.js";
import "./chunk-54PZNGL6.js";
import "./chunk-OUTHPJ5W.js";
import {
  useAuth
} from "./chunk-YQN4TQZU.js";
import "./chunk-ITUTZMO4.js";
import {
  useNotification
} from "./chunk-S4GSJQUH.js";
import "./chunk-3CYOA7RQ.js";
import "./chunk-3Y3HZKRY.js";
import "./chunk-PR5W4YOM.js";
import {
  useLocation,
  useNavigate
} from "./chunk-QOSJGLB6.js";
import "./chunk-2VOUQL7N.js";
import "./chunk-XNLL4XTY.js";
import "./chunk-VJHHRLHY.js";
import "./chunk-HWWDZF4D.js";
import "./chunk-Z7WXACEM.js";
import "./chunk-PZKJYQOP.js";
import "./chunk-KTCYCI5X.js";
import "./chunk-4S6CO3NF.js";
import "./chunk-WZMMABOO.js";
import "./chunk-KU6R7J3L.js";
import "./chunk-ALOZZQWE.js";
import "./chunk-3XH2Q2B6.js";
import "./chunk-SM5ZDAVK.js";
import "./chunk-AAOWBC4P.js";
import "./chunk-AVUVASSG.js";
import "./chunk-DEZRKVMG.js";
import "./chunk-LDTLLP4K.js";
import "./chunk-CFOYKXNH.js";
import "./chunk-DWNGFC4T.js";
import "./chunk-PQYVQDZP.js";
import "./chunk-ZGAXZ2TY.js";
import "./chunk-6EUDYBNR.js";
import "./chunk-3KMG3VFU.js";
import "./chunk-UTVXCYRG.js";
import {
  Box,
  Button,
  Field,
  Flex,
  Main,
  SingleSelect,
  SingleSelectOption,
  TextButton,
  TextInput,
  Typography
} from "./chunk-3AUSDG4O.js";
import "./chunk-F5I3ZVMF.js";
import "./chunk-FJZ2NJT6.js";
import "./chunk-VH7UJDNP.js";
import "./chunk-HG4QJCZT.js";
import "./chunk-I7DIJEXN.js";
import {
  useIntl
} from "./chunk-2BDXRWHF.js";
import "./chunk-SBRVGDJ6.js";
import "./chunk-YUZK7WZ2.js";
import "./chunk-NSR7OH4Q.js";
import "./chunk-ZCDXR5JO.js";
import "./chunk-47RN6QNY.js";
import "./chunk-IMHIZKPC.js";
import "./chunk-URNLJJFR.js";
import "./chunk-JHXWLAQ5.js";
import "./chunk-PWXBRFBA.js";
import "./chunk-MZAWSZWW.js";
import "./chunk-QIQU42WJ.js";
import "./chunk-XVBZSUZI.js";
import "./chunk-2NWCSGSS.js";
import {
  require_jsx_runtime
} from "./chunk-GAPF2DTI.js";
import {
  require_react
} from "./chunk-2ZN62OJX.js";
import {
  require_lib
} from "./chunk-IV5CMKTD.js";
import "./chunk-ENGB2K3X.js";
import "./chunk-ISIKDMAB.js";
import "./chunk-X5DDYWPV.js";
import "./chunk-TUHVKLNT.js";
import "./chunk-3POB64WN.js";
import "./chunk-63YMLYWU.js";
import "./chunk-YIY4KI6G.js";
import "./chunk-7CLWPW6Q.js";
import "./chunk-IVGYXB4P.js";
import "./chunk-H3WCXLKE.js";
import "./chunk-NDGNZ36Q.js";
import "./chunk-MNGCFISN.js";
import {
  __toESM
} from "./chunk-X6GFWOGJ.js";

// ../packages/core/admin/admin/src/pages/UseCasePage.tsx
var React = __toESM(require_react());
var import_qs = __toESM(require_lib());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var options = [
  {
    intlLabel: {
      id: "Usecase.front-end",
      defaultMessage: "Front-end developer"
    },
    value: "front_end_developer"
  },
  {
    intlLabel: {
      id: "Usecase.back-end",
      defaultMessage: "Back-end developer"
    },
    value: "back_end_developer"
  },
  {
    intlLabel: {
      id: "Usecase.full-stack",
      defaultMessage: "Full-stack developer"
    },
    value: "full_stack_developer"
  },
  {
    intlLabel: {
      id: "global.content-manager",
      defaultMessage: "Content Manager"
    },
    value: "content_manager"
  },
  {
    intlLabel: {
      id: "Usecase.content-creator",
      defaultMessage: "Content Creator"
    },
    value: "content_creator"
  },
  {
    intlLabel: {
      id: "Usecase.other",
      defaultMessage: "Other"
    },
    value: "other"
  }
];
var UseCasePage = () => {
  const { toggleNotification } = useNotification();
  const location = useLocation();
  const navigate = useNavigate();
  const { formatMessage } = useIntl();
  const [role, setRole] = React.useState(null);
  const [otherRole, setOtherRole] = React.useState("");
  const { firstname, email } = useAuth("UseCasePage", (state) => state.user) ?? {};
  const { hasAdmin } = (0, import_qs.parse)(location.search, { ignoreQueryPrefix: true });
  const isOther = role === "other";
  const handleSubmit = async (event, skipPersona) => {
    event.preventDefault();
    try {
      await fetch("https://analytics.strapi.io/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          email,
          username: firstname,
          firstAdmin: Boolean(!hasAdmin),
          persona: {
            role: skipPersona ? void 0 : role,
            otherRole: skipPersona ? void 0 : otherRole
          }
        })
      });
      toggleNotification({
        type: "success",
        message: formatMessage({
          id: "Usecase.notification.success.project-created",
          defaultMessage: "Project has been successfully created"
        })
      });
      navigate("/");
    } catch (err) {
    }
  };
  return (0, import_jsx_runtime.jsx)(UnauthenticatedLayout, { children: (0, import_jsx_runtime.jsxs)(Main, { labelledBy: "usecase-title", children: [
    (0, import_jsx_runtime.jsx)(LayoutContent, { children: (0, import_jsx_runtime.jsxs)("form", { onSubmit: (e) => handleSubmit(e, false), children: [
      (0, import_jsx_runtime.jsxs)(Flex, { direction: "column", paddingBottom: 7, children: [
        (0, import_jsx_runtime.jsx)(Logo, {}),
        (0, import_jsx_runtime.jsx)(Box, { paddingTop: 6, paddingBottom: 1, width: `25rem`, children: (0, import_jsx_runtime.jsx)(Typography, { textAlign: "center", variant: "alpha", tag: "h1", id: "usecase-title", children: formatMessage({
          id: "Usecase.title",
          defaultMessage: "Tell us a bit more about yourself"
        }) }) })
      ] }),
      (0, import_jsx_runtime.jsxs)(Flex, { direction: "column", alignItems: "stretch", gap: 6, children: [
        (0, import_jsx_runtime.jsxs)(Field.Root, { name: "usecase", children: [
          (0, import_jsx_runtime.jsx)(Field.Label, { children: formatMessage({
            id: "Usecase.input.work-type",
            defaultMessage: "What type of work do you do?"
          }) }),
          (0, import_jsx_runtime.jsx)(SingleSelect, { onChange: (value) => setRole(value), value: role, children: options.map(({ intlLabel, value }) => (0, import_jsx_runtime.jsx)(SingleSelectOption, { value, children: formatMessage(intlLabel) }, value)) })
        ] }),
        isOther && (0, import_jsx_runtime.jsxs)(Field.Root, { name: "other", children: [
          (0, import_jsx_runtime.jsx)(Field.Label, { children: formatMessage({ id: "Usecase.other", defaultMessage: "Other" }) }),
          (0, import_jsx_runtime.jsx)(TextInput, { value: otherRole, onChange: (e) => setOtherRole(e.target.value) })
        ] }),
        (0, import_jsx_runtime.jsx)(Button, { type: "submit", size: "L", fullWidth: true, disabled: !role, children: formatMessage({ id: "global.finish", defaultMessage: "Finish" }) })
      ] })
    ] }) }),
    (0, import_jsx_runtime.jsx)(Flex, { justifyContent: "center", children: (0, import_jsx_runtime.jsx)(Box, { paddingTop: 4, children: (0, import_jsx_runtime.jsx)(
      TextButton,
      {
        onClick: (event) => handleSubmit(event, true),
        children: formatMessage({
          id: "Usecase.button.skip",
          defaultMessage: "Skip this question"
        })
      }
    ) }) })
  ] }) });
};
var PrivateUseCasePage = () => {
  return (0, import_jsx_runtime.jsx)(PrivateRoute, { children: (0, import_jsx_runtime.jsx)(UseCasePage, {}) });
};
export {
  PrivateUseCasePage,
  UseCasePage,
  options
};
//# sourceMappingURL=UseCasePage-QXMG4FS2.js.map
