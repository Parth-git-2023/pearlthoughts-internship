{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/pages/SettingsPage/pages/Webhooks/components/EventsTable.tsx"],
  "sourcesContent": ["import { Events } from '../../../../../../../../admin/src/pages/Settings/pages/Webhooks/components/Events';\r\n\r\nconst eeTables = {\r\n  'review-workflows': {\r\n    'review-workflows': ['review-workflows.updateEntryStage'],\r\n  },\r\n  releases: {\r\n    releases: ['releases.publish'],\r\n  },\r\n};\r\n\r\nconst getHeaders = (table: keyof typeof eeTables) => {\r\n  switch (table) {\r\n    case 'review-workflows':\r\n      return () => [{ id: 'review-workflows.updateEntryStage', defaultMessage: 'Stage Change' }];\r\n    case 'releases':\r\n      return () => [{ id: 'releases.publish', defaultMessage: 'Publish' }];\r\n  }\r\n};\r\n\r\nconst EventsTableEE = () => {\r\n  return (\r\n    <Events.Root>\r\n      <Events.Headers />\r\n      <Events.Body />\r\n      {(Object.keys(eeTables) as Array<keyof typeof eeTables>).map((table) => (\r\n        <>\r\n          <Events.Headers getHeaders={getHeaders(table)} />\r\n          <Events.Body providedEvents={eeTables[table]} />\r\n        </>\r\n      ))}\r\n    </Events.Root>\r\n  );\r\n};\r\n\r\nexport { EventsTableEE };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBM;AArBN,IAAM,WAAW;AAAA,EACf,oBAAoB;AAAA,IAClB,oBAAoB,CAAC,mCAAmC;AAAA,EAC1D;AAAA,EACA,UAAU;AAAA,IACR,UAAU,CAAC,kBAAkB;AAAA,EAC/B;AACF;AAEA,IAAM,aAAa,CAAC,UAAiC;AACnD,UAAQ,OAAO;AAAA,IACb,KAAK;AACH,aAAO,MAAM,CAAC,EAAE,IAAI,qCAAqC,gBAAgB,eAAe,CAAC;AAAA,IAC3F,KAAK;AACH,aAAO,MAAM,CAAC,EAAE,IAAI,oBAAoB,gBAAgB,UAAU,CAAC;AAAA,EACvE;AACF;AAEA,IAAM,gBAAgB,MAAM;AAC1B,aACE,yBAAC,OAAO,MAAP,EACC;AAAA,gCAAC,OAAO,SAAP,EAAe;AAAA,QAChB,wBAAC,OAAO,MAAP,EAAY;AAAA,IACX,OAAO,KAAK,QAAQ,EAAmC,IAAI,CAAC,cAC5D,wDACE;AAAA,kCAAC,OAAO,SAAP,EAAe,YAAY,WAAW,KAAK,GAAG;AAAA,UAC/C,wBAAC,OAAO,MAAP,EAAY,gBAAgB,SAAS,KAAK,GAAG;AAAA,OAChD,CACD;AAAA,KACH;AAEJ;",
  "names": []
}
