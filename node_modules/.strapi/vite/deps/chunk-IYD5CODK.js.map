{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/pages/Settings/pages/Users/utils/validation.ts"],
  "sourcesContent": ["import * as yup from 'yup';\r\n\r\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\r\n\r\n/**\r\n * @description This needs wrapping in `yup.object().shape()` before use.\r\n */\r\nconst COMMON_USER_SCHEMA = {\r\n  firstname: yup.string().trim().required({\r\n    id: translatedErrors.required.id,\r\n    defaultMessage: 'This field is required',\r\n  }),\r\n  lastname: yup.string().nullable(),\r\n  email: yup.string().email(translatedErrors.email).lowercase().required({\r\n    id: translatedErrors.required.id,\r\n    defaultMessage: 'This field is required',\r\n  }),\r\n  username: yup\r\n    .string()\r\n    .transform((value) => (value === '' ? undefined : value))\r\n    .nullable(),\r\n  password: yup\r\n    .string()\r\n    .transform((value) => (value === '' || value === null ? undefined : value))\r\n    .nullable()\r\n    .min(8, {\r\n      ...translatedErrors.minLength,\r\n      values: { min: 8 },\r\n    })\r\n    .test(\r\n      'max-bytes',\r\n      {\r\n        id: 'components.Input.error.contain.maxBytes',\r\n        defaultMessage: 'Password must be less than 73 bytes',\r\n      },\r\n      function (value) {\r\n        if (!value) return true;\r\n        return new TextEncoder().encode(value).length <= 72;\r\n      }\r\n    )\r\n    .matches(/[a-z]/, {\r\n      id: 'components.Input.error.contain.lowercase',\r\n      defaultMessage: 'Password must contain at least one lowercase character',\r\n    })\r\n    .matches(/[A-Z]/, {\r\n      id: 'components.Input.error.contain.uppercase',\r\n      defaultMessage: 'Password must contain at least one uppercase character',\r\n    })\r\n    .matches(/\\d/, {\r\n      id: 'components.Input.error.contain.number',\r\n      defaultMessage: 'Password must contain at least one number',\r\n    }),\r\n  confirmPassword: yup\r\n    .string()\r\n    .transform((value) => (value === '' ? null : value))\r\n    .nullable()\r\n    .min(8, {\r\n      ...translatedErrors.minLength,\r\n      values: { min: 8 },\r\n    })\r\n    .oneOf([yup.ref('password'), null], {\r\n      id: 'components.Input.error.password.noMatch',\r\n      defaultMessage: 'Passwords must match',\r\n    })\r\n    .when('password', (password, passSchema) => {\r\n      return password\r\n        ? passSchema\r\n            .required({\r\n              id: translatedErrors.required.id,\r\n              defaultMessage: 'This field is required',\r\n            })\r\n            .nullable()\r\n        : passSchema;\r\n    }),\r\n};\r\n\r\nexport { COMMON_USER_SCHEMA };\r\n"],
  "mappings": ";;;;;;;;;AAOA,IAAM,qBAAqB;AAAA,EACzB,WAAeA,QAAO,EAAE,KAAK,EAAE,SAAS;AAAA,IACtC,IAAI,YAAiB,SAAS;AAAA,IAC9B,gBAAgB;AAAA,EAClB,CAAC;AAAA,EACD,UAAcA,QAAO,EAAE,SAAS;AAAA,EAChC,OAAWA,QAAO,EAAE,MAAM,YAAiB,KAAK,EAAE,UAAU,EAAE,SAAS;AAAA,IACrE,IAAI,YAAiB,SAAS;AAAA,IAC9B,gBAAgB;AAAA,EAClB,CAAC;AAAA,EACD,UACGA,QAAO,EACP,UAAU,CAAC,UAAW,UAAU,KAAK,SAAY,KAAM,EACvD,SAAS;AAAA,EACZ,UACGA,QAAO,EACP,UAAU,CAAC,UAAW,UAAU,MAAM,UAAU,OAAO,SAAY,KAAM,EACzE,SAAS,EACT,IAAI,GAAG;AAAA,IACN,GAAG,YAAiB;AAAA,IACpB,QAAQ,EAAE,KAAK,EAAE;AAAA,EACnB,CAAC,EACA;AAAA,IACC;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,gBAAgB;AAAA,IAClB;AAAA,IACA,SAAU,OAAO;AACf,UAAI,CAAC,MAAO,QAAO;AACnB,aAAO,IAAI,YAAY,EAAE,OAAO,KAAK,EAAE,UAAU;AAAA,IACnD;AAAA,EACF,EACC,QAAQ,SAAS;AAAA,IAChB,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB,CAAC,EACA,QAAQ,SAAS;AAAA,IAChB,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB,CAAC,EACA,QAAQ,MAAM;AAAA,IACb,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB,CAAC;AAAA,EACH,iBACGA,QAAO,EACP,UAAU,CAAC,UAAW,UAAU,KAAK,OAAO,KAAM,EAClD,SAAS,EACT,IAAI,GAAG;AAAA,IACN,GAAG,YAAiB;AAAA,IACpB,QAAQ,EAAE,KAAK,EAAE;AAAA,EACnB,CAAC,EACA,MAAM,CAAK,OAAI,UAAU,GAAG,IAAI,GAAG;AAAA,IAClC,IAAI;AAAA,IACJ,gBAAgB;AAAA,EAClB,CAAC,EACA,KAAK,YAAY,CAAC,UAAU,eAAe;AAC1C,WAAO,WACH,WACG,SAAS;AAAA,MACR,IAAI,YAAiB,SAAS;AAAA,MAC9B,gBAAgB;AAAA,IAClB,CAAC,EACA,SAAS,IACZ;AAAA,EACN,CAAC;AACL;",
  "names": ["create"]
}
