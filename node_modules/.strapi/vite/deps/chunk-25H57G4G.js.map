{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/hooks/useLicenseLimitNotification.ts"],
  "sourcesContent": ["/**\r\n *\r\n * useLicenseLimitNotification\r\n *\r\n */\r\nimport * as React from 'react';\r\n\r\nimport isNil from 'lodash/isNil';\r\nimport { useIntl } from 'react-intl';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { NotificationConfig, useNotification } from '../../../../admin/src/features/Notifications';\r\n\r\nimport { useLicenseLimits } from './useLicenseLimits';\r\n\r\nconst STORAGE_KEY_PREFIX = 'strapi-notification-seat-limit';\r\n\r\nconst BILLING_SELF_HOSTED_URL = 'https://strapi.io/billing/request-seats';\r\nconst MANAGE_SEATS_URL = 'https://strapi.io/billing/manage-seats';\r\n\r\nexport const useLicenseLimitNotification = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { license, isError, isLoading } = useLicenseLimits();\r\n  const { toggleNotification } = useNotification();\r\n  const { pathname } = useLocation();\r\n\r\n  const { enforcementUserCount, permittedSeats, licenseLimitStatus, type } = license ?? {};\r\n\r\n  React.useEffect(() => {\r\n    if (isError || isLoading) {\r\n      return;\r\n    }\r\n\r\n    const shouldDisplayNotification =\r\n      !isNil(permittedSeats) &&\r\n      !window.sessionStorage.getItem(`${STORAGE_KEY_PREFIX}-${pathname}`) &&\r\n      licenseLimitStatus === 'OVER_LIMIT';\r\n\r\n    let notificationType: NotificationConfig['type'];\r\n\r\n    if (licenseLimitStatus === 'OVER_LIMIT') {\r\n      notificationType = 'danger';\r\n    }\r\n\r\n    if (shouldDisplayNotification) {\r\n      toggleNotification({\r\n        type: notificationType,\r\n        message: formatMessage(\r\n          {\r\n            id: 'notification.ee.warning.over-.message',\r\n            defaultMessage:\r\n              \"Add seats to {licenseLimitStatus, select, OVER_LIMIT {invite} other {re-enable}} Users. If you already did it but it's not reflected in Strapi yet, make sure to restart your app.\",\r\n          },\r\n          { licenseLimitStatus }\r\n        ),\r\n        title: formatMessage(\r\n          {\r\n            id: 'notification.ee.warning.at-seat-limit.title',\r\n            defaultMessage:\r\n              '{licenseLimitStatus, select, OVER_LIMIT {Over} other {At}} seat limit ({enforcementUserCount}/{permittedSeats})',\r\n          },\r\n          {\r\n            licenseLimitStatus,\r\n            enforcementUserCount,\r\n            permittedSeats,\r\n          }\r\n        ),\r\n        link: {\r\n          url: type === 'gold' ? BILLING_SELF_HOSTED_URL : MANAGE_SEATS_URL,\r\n          label: formatMessage({\r\n            id: 'notification.ee.warning.seat-limit.link',\r\n            defaultMessage: type === 'gold' ? 'Contact sales' : 'Manage seats',\r\n          }),\r\n        },\r\n        blockTransition: true,\r\n        onClose() {\r\n          window.sessionStorage.setItem(`${STORAGE_KEY_PREFIX}-${pathname}`, 'true');\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    toggleNotification,\r\n    license,\r\n    pathname,\r\n    formatMessage,\r\n    isLoading,\r\n    permittedSeats,\r\n    licenseLimitStatus,\r\n    enforcementUserCount,\r\n    isError,\r\n    type,\r\n  ]);\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAKA,YAAuB;AAEvB,mBAAkB;AAQlB,IAAM,qBAAqB;AAE3B,IAAM,0BAA0B;AAChC,IAAM,mBAAmB;AAElB,IAAM,8BAA8B,MAAM;AAC/C,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,SAAS,SAAS,UAAU,IAAI,iBAAiB;AACzD,QAAM,EAAE,mBAAmB,IAAI,gBAAgB;AAC/C,QAAM,EAAE,SAAS,IAAI,YAAY;AAEjC,QAAM,EAAE,sBAAsB,gBAAgB,oBAAoB,KAAK,IAAI,WAAW,CAAC;AAEvF,EAAM,gBAAU,MAAM;AACpB,QAAI,WAAW,WAAW;AACxB;AAAA,IACF;AAEA,UAAM,4BACJ,KAAC,aAAAA,SAAM,cAAc,KACrB,CAAC,OAAO,eAAe,QAAQ,GAAG,kBAAkB,IAAI,QAAQ,EAAE,KAClE,uBAAuB;AAEzB,QAAI;AAEJ,QAAI,uBAAuB,cAAc;AACvC,yBAAmB;AAAA,IACrB;AAEA,QAAI,2BAA2B;AAC7B,yBAAmB;AAAA,QACjB,MAAM;AAAA,QACN,SAAS;AAAA,UACP;AAAA,YACE,IAAI;AAAA,YACJ,gBACE;AAAA,UACJ;AAAA,UACA,EAAE,mBAAmB;AAAA,QACvB;AAAA,QACA,OAAO;AAAA,UACL;AAAA,YACE,IAAI;AAAA,YACJ,gBACE;AAAA,UACJ;AAAA,UACA;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ,KAAK,SAAS,SAAS,0BAA0B;AAAA,UACjD,OAAO,cAAc;AAAA,YACnB,IAAI;AAAA,YACJ,gBAAgB,SAAS,SAAS,kBAAkB;AAAA,UACtD,CAAC;AAAA,QACH;AAAA,QACA,iBAAiB;AAAA,QACjB,UAAU;AACR,iBAAO,eAAe,QAAQ,GAAG,kBAAkB,IAAI,QAAQ,IAAI,MAAM;AAAA,QAC3E;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,GAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;",
  "names": ["isNil"]
}
