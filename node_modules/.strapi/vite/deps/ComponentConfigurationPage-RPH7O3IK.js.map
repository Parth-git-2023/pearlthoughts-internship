{
  "version": 3,
  "sources": ["../../../../../packages/core/content-manager/admin/src/pages/ComponentConfigurationPage.tsx", "../../../../../packages/core/content-manager/admin/src/services/components.ts"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport { Page, useNotification, useAPIErrorHandler } from '@strapi/admin/strapi-admin';\r\nimport { useIntl } from 'react-intl';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { TEMP_FIELD_NAME } from '../components/ConfigurationForm/Fields';\r\nimport { ConfigurationForm, ConfigurationFormProps } from '../components/ConfigurationForm/Form';\r\nimport { ComponentsDictionary, extractContentTypeComponents } from '../hooks/useContentTypeSchema';\r\nimport {\r\n  DEFAULT_SETTINGS,\r\n  EditLayout,\r\n  convertEditLayoutToFieldLayouts,\r\n} from '../hooks/useDocumentLayout';\r\nimport { useTypedSelector } from '../modules/hooks';\r\nimport {\r\n  useGetComponentConfigurationQuery,\r\n  useUpdateComponentConfigurationMutation,\r\n} from '../services/components';\r\nimport { useGetInitialDataQuery } from '../services/init';\r\nimport { setIn } from '../utils/objects';\r\n\r\nimport type { Component, FindComponentConfiguration } from '../../../shared/contracts/components';\r\nimport type { Metadatas } from '../../../shared/contracts/content-types';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ComponentConfigurationPage\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst ComponentConfigurationPage = () => {\r\n  /**\r\n   * useDocumentLayout only works for documents, not components,\r\n   * it feels weird to make that hook work for both when this is SUCH\r\n   * a unique use case and we only do it here, so in short, we essentially\r\n   * just extracted the logic to make an edit view layout and reproduced it here.\r\n   */\r\n  const { slug: model } = useParams<{ slug: string }>();\r\n  const { toggleNotification } = useNotification();\r\n  const { formatMessage } = useIntl();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n\r\n  const {\r\n    components,\r\n    fieldSizes,\r\n    schema,\r\n    error: errorSchema,\r\n    isLoading: isLoadingSchema,\r\n    isFetching: isFetchingSchema,\r\n  } = useGetInitialDataQuery(undefined, {\r\n    selectFromResult: (res) => {\r\n      const schema = res.data?.components.find((ct) => ct.uid === model);\r\n\r\n      const componentsByKey = res.data?.components.reduce<ComponentsDictionary>(\r\n        (acc, component) => {\r\n          acc[component.uid] = component;\r\n\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n\r\n      const components = extractContentTypeComponents(schema?.attributes, componentsByKey);\r\n\r\n      const fieldSizes = Object.entries(res.data?.fieldSizes ?? {}).reduce<\r\n        ConfigurationFormProps['fieldSizes']\r\n      >((acc, [attributeName, { default: size }]) => {\r\n        acc[attributeName] = size;\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        isFetching: res.isFetching,\r\n        isLoading: res.isLoading,\r\n        error: res.error,\r\n        components,\r\n        schema,\r\n        fieldSizes,\r\n      };\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (errorSchema) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(errorSchema),\r\n      });\r\n    }\r\n  }, [errorSchema, formatAPIError, toggleNotification]);\r\n\r\n  const {\r\n    data,\r\n    isLoading: isLoadingConfig,\r\n    isFetching: isFetchingConfig,\r\n    error,\r\n  } = useGetComponentConfigurationQuery(model ?? '');\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [error, formatAPIError, toggleNotification]);\r\n\r\n  /**\r\n   * you **must** check if we're loading or fetching in case the component gets new props\r\n   * but nothing was unmounted, it then becomes a fetch, not a load.\r\n   */\r\n  const isLoading = isLoadingConfig || isLoadingSchema || isFetchingConfig || isFetchingSchema;\r\n\r\n  const editLayout = React.useMemo(\r\n    () =>\r\n      data && !isLoading\r\n        ? formatEditLayout(data, { schema, components })\r\n        : ({\r\n            layout: [],\r\n            components: {},\r\n            metadatas: {},\r\n            options: {},\r\n            settings: DEFAULT_SETTINGS,\r\n          } as EditLayout),\r\n    [data, isLoading, schema, components]\r\n  );\r\n\r\n  const [updateConfiguration] = useUpdateComponentConfigurationMutation();\r\n  const handleSubmit: ConfigurationFormProps['onSubmit'] = async (formData) => {\r\n    try {\r\n      /**\r\n       * We reconstruct the metadatas object by taking the existing list metadatas\r\n       * and re-merging that by attribute name with the current list metadatas, whilst overwriting\r\n       * the data from the form we've built.\r\n       */\r\n      const meta = Object.entries(data?.component.metadatas ?? {}).reduce<Metadatas>(\r\n        (acc, [name, { edit, list }]) => {\r\n          const {\r\n            __temp_key__,\r\n            size: _size,\r\n            name: _name,\r\n            ...editedMetadata\r\n          } = formData.layout.flatMap((row) => row.children).find((field) => field.name === name) ??\r\n          {};\r\n\r\n          acc[name] = {\r\n            edit: {\r\n              ...edit,\r\n              ...editedMetadata,\r\n            },\r\n            list,\r\n          };\r\n\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n\r\n      const res = await updateConfiguration({\r\n        layouts: {\r\n          edit: formData.layout.map((row) =>\r\n            row.children.reduce<Array<{ name: string; size: number }>>((acc, { name, size }) => {\r\n              if (name !== TEMP_FIELD_NAME) {\r\n                return [...acc, { name, size }];\r\n              }\r\n\r\n              return acc;\r\n            }, [])\r\n          ),\r\n          list: data?.component.layouts.list,\r\n        },\r\n        settings: setIn(formData.settings, 'displayName', undefined),\r\n        metadatas: meta,\r\n        uid: model,\r\n      });\r\n\r\n      if ('data' in res) {\r\n        toggleNotification({\r\n          type: 'success',\r\n          message: formatMessage({ id: 'notification.success.saved', defaultMessage: 'Saved' }),\r\n        });\r\n      } else {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatAPIError(res.error),\r\n        });\r\n      }\r\n    } catch {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  if (error || errorSchema || !schema) {\r\n    return <Page.Error />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Page.Title>{`Configure ${editLayout.settings.displayName} Edit View`}</Page.Title>\r\n      <ConfigurationForm\r\n        onSubmit={handleSubmit}\r\n        attributes={schema.attributes}\r\n        fieldSizes={fieldSizes}\r\n        layout={editLayout}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Header\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst formatEditLayout = (\r\n  data: FindComponentConfiguration.Response['data'],\r\n  { schema, components }: { schema?: Component; components: ComponentsDictionary }\r\n) => {\r\n  const editAttributes = convertEditLayoutToFieldLayouts(\r\n    data.component.layouts.edit,\r\n    schema?.attributes,\r\n    data.component.metadatas,\r\n    { configurations: data.components, schemas: components }\r\n  );\r\n\r\n  const componentEditAttributes = Object.entries(data.components).reduce<EditLayout['components']>(\r\n    (acc, [uid, configuration]) => {\r\n      acc[uid] = {\r\n        layout: convertEditLayoutToFieldLayouts(\r\n          configuration.layouts.edit,\r\n          components[uid].attributes,\r\n          configuration.metadatas\r\n        ),\r\n        settings: {\r\n          ...configuration.settings,\r\n          icon: components[uid].info.icon,\r\n          displayName: components[uid].info.displayName,\r\n        },\r\n      };\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n\r\n  const editMetadatas = Object.entries(data.component.metadatas).reduce<EditLayout['metadatas']>(\r\n    (acc, [attribute, metadata]) => {\r\n      return {\r\n        ...acc,\r\n        [attribute]: metadata.edit,\r\n      };\r\n    },\r\n    {}\r\n  );\r\n\r\n  return {\r\n    layout: [editAttributes],\r\n    components: componentEditAttributes,\r\n    metadatas: editMetadatas,\r\n    options: {\r\n      ...schema?.options,\r\n      ...schema?.pluginOptions,\r\n    },\r\n    settings: {\r\n      ...data.component.settings,\r\n      displayName: schema?.info.displayName,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Header\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst ProtectedComponentConfigurationPage = () => {\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.contentManager?.componentsConfigurations\r\n  );\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions}>\r\n      <ComponentConfigurationPage />\r\n    </Page.Protect>\r\n  );\r\n};\r\n\r\nexport { ComponentConfigurationPage, ProtectedComponentConfigurationPage };\r\n", "import { contentManagerApi } from './api';\r\n\r\nimport type {\r\n  FindComponentConfiguration,\r\n  UpdateComponentConfiguration,\r\n} from '../../../shared/contracts/components';\r\n\r\nconst componentsApi = contentManagerApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getComponentConfiguration: builder.query<\r\n      FindComponentConfiguration.Response['data'],\r\n      FindComponentConfiguration.Params['uid']\r\n    >({\r\n      query: (uid) => `/content-manager/components/${uid}/configuration`,\r\n      transformResponse: (response: FindComponentConfiguration.Response) => response.data,\r\n      providesTags: (_result, _error, uid) => [{ type: 'ComponentConfiguration', id: uid }],\r\n    }),\r\n    updateComponentConfiguration: builder.mutation({\r\n      query: ({ uid, ...body }) => ({\r\n        url: `/content-manager/components/${uid}/configuration`,\r\n        method: 'PUT',\r\n        data: body,\r\n      }),\r\n      transformResponse: (response: UpdateComponentConfiguration.Response) => response.data,\r\n      invalidatesTags: (_result, _error, { uid }) => [\r\n        { type: 'ComponentConfiguration', id: uid },\r\n        // otherwise layouts already fetched will have stale component configuration data.\r\n        { type: 'ContentTypeSettings', id: 'LIST' },\r\n      ],\r\n    }),\r\n  }),\r\n});\r\n\r\nconst { useGetComponentConfigurationQuery, useUpdateComponentConfigurationMutation } =\r\n  componentsApi;\r\n\r\nexport { useGetComponentConfigurationQuery, useUpdateComponentConfigurationMutation };\r\n"],
  "mappings": "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",
  "names": ["schema", "components", "fieldSizes"]
}
