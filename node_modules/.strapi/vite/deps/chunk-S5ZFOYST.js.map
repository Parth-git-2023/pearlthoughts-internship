{
  "version": 3,
  "sources": ["../../../../../node_modules/lodash/map.js", "../../../../../node_modules/lodash/tail.js", "../../../../../node_modules/lodash/_baseIndexOfWith.js", "../../../../../node_modules/lodash/_basePullAll.js", "../../../../../node_modules/lodash/pullAll.js", "../../../../../node_modules/lodash/pull.js", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/EditViewPage.tsx", "../../../../../packages/core/admin/admin/src/services/contentApi.ts", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/apiTokenPermissions.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/FormApiTokenContainer.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/BoundRoute.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/ActionBoundRoutes.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/CollapsableContentType.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/ContentTypesSection.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/components/Permissions.tsx", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/constants.ts", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/reducer.ts", "../../../../../packages/core/admin/admin/src/pages/Settings/pages/ApiTokens/EditView/utils/transformPermissionsData.ts"],
  "sourcesContent": ["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n", "var baseSlice = require('./_baseSlice');\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 1, length) : [];\n}\n\nmodule.exports = tail;\n", "/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n", "var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n", "var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n", "var baseRest = require('./_baseRest'),\n    pullAll = require('./pullAll');\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nmodule.exports = pull;\n", "import * as React from 'react';\r\n\r\nimport { Flex } from '@strapi/design-system';\r\nimport { Formik, Form, FormikHelpers } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\nimport { useLocation, useMatch, useNavigate } from 'react-router-dom';\r\n\r\nimport { useGuidedTour } from '../../../../../components/GuidedTour/Provider';\r\nimport { Layouts } from '../../../../../components/Layouts/Layout';\r\nimport { Page } from '../../../../../components/PageHelpers';\r\nimport { useTypedSelector } from '../../../../../core/store/hooks';\r\nimport { useNotification } from '../../../../../features/Notifications';\r\nimport { useTracking } from '../../../../../features/Tracking';\r\nimport { useAPIErrorHandler } from '../../../../../hooks/useAPIErrorHandler';\r\nimport { useRBAC } from '../../../../../hooks/useRBAC';\r\nimport {\r\n  useCreateAPITokenMutation,\r\n  useGetAPITokenQuery,\r\n  useUpdateAPITokenMutation,\r\n} from '../../../../../services/apiTokens';\r\nimport { useGetPermissionsQuery, useGetRoutesQuery } from '../../../../../services/contentApi';\r\nimport { isBaseQueryError } from '../../../../../utils/baseQuery';\r\nimport { API_TOKEN_TYPE } from '../../../components/Tokens/constants';\r\nimport { FormHead } from '../../../components/Tokens/FormHead';\r\nimport { TokenBox, UnstableApiTokenBox } from '../../../components/Tokens/TokenBox';\r\n\r\nimport {\r\n  ApiTokenPermissionsContextValue,\r\n  ApiTokenPermissionsProvider,\r\n} from './apiTokenPermissions';\r\nimport { FormApiTokenContainer } from './components/FormApiTokenContainer';\r\nimport { Permissions } from './components/Permissions';\r\nimport { schema } from './constants';\r\nimport { initialState, reducer } from './reducer';\r\n\r\nimport type { Get, ApiToken } from '../../../../../../../shared/contracts/api-token';\r\n\r\n/**\r\n * TODO: this could definitely be refactored to avoid using redux and instead just use the\r\n * server response as the source of the truth for the data.\r\n */\r\nexport const EditView = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const { state: locationState } = useLocation();\r\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\r\n  const [apiToken, setApiToken] = React.useState<ApiToken | null>(\r\n    locationState?.apiToken?.accessKey\r\n      ? {\r\n          ...locationState.apiToken,\r\n        }\r\n      : null\r\n  );\r\n  const [showToken, setShowToken] = React.useState(Boolean(locationState?.apiToken?.accessKey));\r\n  const hideTimerRef = React.useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const { trackUsage } = useTracking();\r\n  const setCurrentStep = useGuidedTour('EditView', (state) => state.setCurrentStep);\r\n  const {\r\n    allowedActions: { canCreate, canUpdate, canRegenerate },\r\n  } = useRBAC(permissions.settings?.['api-tokens']);\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const match = useMatch('/settings/api-tokens/:id');\r\n  const id = match?.params?.id;\r\n  const isCreating = id === 'create';\r\n  const {\r\n    _unstableFormatAPIError: formatAPIError,\r\n    _unstableFormatValidationErrors: formatValidtionErrors,\r\n  } = useAPIErrorHandler();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const contentAPIPermissionsQuery = useGetPermissionsQuery();\r\n  const contentAPIRoutesQuery = useGetRoutesQuery();\r\n  /**\r\n   * Separate effects otherwise we could end\r\n   * up duplicating the same notification.\r\n   */\r\n  React.useEffect(() => {\r\n    if (contentAPIPermissionsQuery.error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(contentAPIPermissionsQuery.error),\r\n      });\r\n    }\r\n  }, [contentAPIPermissionsQuery.error, formatAPIError, toggleNotification]);\r\n\r\n  React.useEffect(() => {\r\n    if (contentAPIRoutesQuery.error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(contentAPIRoutesQuery.error),\r\n      });\r\n    }\r\n  }, [contentAPIRoutesQuery.error, formatAPIError, toggleNotification]);\r\n\r\n  React.useEffect(() => {\r\n    if (contentAPIPermissionsQuery.data) {\r\n      dispatch({\r\n        type: 'UPDATE_PERMISSIONS_LAYOUT',\r\n        value: contentAPIPermissionsQuery.data,\r\n      });\r\n    }\r\n  }, [contentAPIPermissionsQuery.data]);\r\n\r\n  React.useEffect(() => {\r\n    if (contentAPIRoutesQuery.data) {\r\n      dispatch({\r\n        type: 'UPDATE_ROUTES',\r\n        value: contentAPIRoutesQuery.data,\r\n      });\r\n    }\r\n  }, [contentAPIRoutesQuery.data]);\r\n\r\n  React.useEffect(() => {\r\n    if (apiToken) {\r\n      if (apiToken.type === 'read-only') {\r\n        dispatch({\r\n          type: 'ON_CHANGE_READ_ONLY',\r\n        });\r\n      }\r\n      if (apiToken.type === 'full-access') {\r\n        dispatch({\r\n          type: 'SELECT_ALL_ACTIONS',\r\n        });\r\n      }\r\n      if (apiToken.type === 'custom') {\r\n        dispatch({\r\n          type: 'UPDATE_PERMISSIONS',\r\n          value: apiToken?.permissions,\r\n        });\r\n      }\r\n    }\r\n  }, [apiToken]);\r\n\r\n  React.useEffect(() => {\r\n    trackUsage(isCreating ? 'didAddTokenFromList' : 'didEditTokenFromList', {\r\n      tokenType: API_TOKEN_TYPE,\r\n    });\r\n  }, [isCreating, trackUsage]);\r\n\r\n  const { data, error, isLoading } = useGetAPITokenQuery(id!, {\r\n    skip: !id || isCreating || !!apiToken,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [error, formatAPIError, toggleNotification]);\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      setApiToken(data);\r\n\r\n      if (data.type === 'read-only') {\r\n        dispatch({\r\n          type: 'ON_CHANGE_READ_ONLY',\r\n        });\r\n      }\r\n      if (data.type === 'full-access') {\r\n        dispatch({\r\n          type: 'SELECT_ALL_ACTIONS',\r\n        });\r\n      }\r\n      if (data.type === 'custom') {\r\n        dispatch({\r\n          type: 'UPDATE_PERMISSIONS',\r\n          value: data?.permissions,\r\n        });\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    // Only set up timer when token is shown\r\n    if (showToken) {\r\n      hideTimerRef.current = setTimeout(() => {\r\n        setShowToken(false);\r\n      }, 30000); // 30 seconds\r\n\r\n      // Cleanup on unmount or when showToken changes\r\n      return () => {\r\n        if (hideTimerRef.current) {\r\n          clearTimeout(hideTimerRef.current);\r\n          hideTimerRef.current = null;\r\n        }\r\n      };\r\n    }\r\n  }, [showToken]);\r\n\r\n  const [createToken] = useCreateAPITokenMutation();\r\n  const [updateToken] = useUpdateAPITokenMutation();\r\n\r\n  interface FormValues extends Pick<Get.Response['data'], 'name' | 'description'> {\r\n    lifespan: Get.Response['data']['lifespan'] | undefined;\r\n    type: Get.Response['data']['type'] | undefined;\r\n  }\r\n\r\n  const handleSubmit = async (body: FormValues, formik: FormikHelpers<FormValues>) => {\r\n    trackUsage(isCreating ? 'willCreateToken' : 'willEditToken', {\r\n      tokenType: API_TOKEN_TYPE,\r\n    });\r\n\r\n    try {\r\n      if (isCreating) {\r\n        const res = await createToken({\r\n          ...body,\r\n          // lifespan must be \"null\" for unlimited (0 would mean instantly expired and isn't accepted)\r\n          lifespan:\r\n            body?.lifespan && body.lifespan !== '0' ? parseInt(body.lifespan.toString(), 10) : null,\r\n          permissions: body.type === 'custom' ? state.selectedActions : null,\r\n        });\r\n\r\n        if ('error' in res) {\r\n          if (isBaseQueryError(res.error) && res.error.name === 'ValidationError') {\r\n            formik.setErrors(formatValidtionErrors(res.error));\r\n          } else {\r\n            toggleNotification({\r\n              type: 'danger',\r\n              message: formatAPIError(res.error),\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        toggleNotification({\r\n          type: 'success',\r\n          message: formatMessage({\r\n            id: 'notification.success.apitokencreated',\r\n            defaultMessage: 'API Token successfully created',\r\n          }),\r\n        });\r\n\r\n        trackUsage('didCreateToken', {\r\n          type: res.data.type,\r\n          tokenType: API_TOKEN_TYPE,\r\n        });\r\n\r\n        navigate(`../api-tokens/${res.data.id.toString()}`, {\r\n          state: { apiToken: res.data },\r\n          replace: true,\r\n        });\r\n        setCurrentStep('apiTokens.success');\r\n      } else {\r\n        const res = await updateToken({\r\n          id: id!,\r\n          name: body.name,\r\n          description: body.description,\r\n          type: body.type,\r\n          permissions: body.type === 'custom' ? state.selectedActions : null,\r\n        });\r\n\r\n        if ('error' in res) {\r\n          if (isBaseQueryError(res.error) && res.error.name === 'ValidationError') {\r\n            formik.setErrors(formatValidtionErrors(res.error));\r\n          } else {\r\n            toggleNotification({\r\n              type: 'danger',\r\n              message: formatAPIError(res.error),\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        toggleNotification({\r\n          type: 'success',\r\n          message: formatMessage({\r\n            id: 'notification.success.apitokenedited',\r\n            defaultMessage: 'API Token successfully edited',\r\n          }),\r\n        });\r\n\r\n        trackUsage('didEditToken', {\r\n          type: res.data.type,\r\n          tokenType: API_TOKEN_TYPE,\r\n        });\r\n      }\r\n    } catch {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatMessage({\r\n          id: 'notification.error',\r\n          defaultMessage: 'Something went wrong',\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  const [hasChangedPermissions, setHasChangedPermissions] = React.useState(false);\r\n\r\n  const handleChangeCheckbox = ({\r\n    target: { value },\r\n  }: Parameters<ApiTokenPermissionsContextValue['value']['onChange']>[0]) => {\r\n    setHasChangedPermissions(true);\r\n    dispatch({\r\n      type: 'ON_CHANGE',\r\n      value,\r\n    });\r\n  };\r\n\r\n  const handleChangeSelectAllCheckbox = ({\r\n    target: { value },\r\n  }: Parameters<ApiTokenPermissionsContextValue['value']['onChangeSelectAll']>[0]) => {\r\n    setHasChangedPermissions(true);\r\n    dispatch({\r\n      type: 'SELECT_ALL_IN_PERMISSION',\r\n      value,\r\n    });\r\n  };\r\n\r\n  const setSelectedAction = ({\r\n    target: { value },\r\n  }: Parameters<ApiTokenPermissionsContextValue['value']['setSelectedAction']>[0]) => {\r\n    dispatch({\r\n      type: 'SET_SELECTED_ACTION',\r\n      value,\r\n    });\r\n  };\r\n\r\n  const toggleToken = () => {\r\n    setShowToken((prev) => !prev);\r\n    if (hideTimerRef.current) {\r\n      clearTimeout(hideTimerRef.current);\r\n      hideTimerRef.current = null;\r\n    }\r\n  };\r\n\r\n  const providerValue = {\r\n    ...state,\r\n    onChange: handleChangeCheckbox,\r\n    onChangeSelectAll: handleChangeSelectAllCheckbox,\r\n    setSelectedAction,\r\n  };\r\n\r\n  const canEditInputs = (canUpdate && !isCreating) || (canCreate && isCreating);\r\n  const canShowToken = !!apiToken?.accessKey;\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  return (\r\n    <ApiTokenPermissionsProvider value={providerValue}>\r\n      <Page.Main>\r\n        <Page.Title>\r\n          {formatMessage(\r\n            { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\r\n            { name: 'API Tokens' }\r\n          )}\r\n        </Page.Title>\r\n        <Formik\r\n          validationSchema={schema}\r\n          validateOnChange={false}\r\n          initialValues={{\r\n            name: apiToken?.name || '',\r\n            description: apiToken?.description || '',\r\n            type: apiToken?.type,\r\n            lifespan: apiToken?.lifespan,\r\n          }}\r\n          enableReinitialize\r\n          onSubmit={(body, actions) => handleSubmit(body, actions)}\r\n        >\r\n          {({ errors, handleChange, isSubmitting, values, setFieldValue }) => {\r\n            if (hasChangedPermissions && values?.type !== 'custom') {\r\n              setFieldValue('type', 'custom');\r\n            }\r\n\r\n            return (\r\n              <Form>\r\n                <FormHead\r\n                  title={{\r\n                    id: 'Settings.apiTokens.createPage.title',\r\n                    defaultMessage: 'Create API Token',\r\n                  }}\r\n                  token={apiToken}\r\n                  setToken={setApiToken}\r\n                  toggleToken={toggleToken}\r\n                  showToken={showToken}\r\n                  canEditInputs={canEditInputs}\r\n                  canRegenerate={canRegenerate}\r\n                  canShowToken={canShowToken}\r\n                  isSubmitting={isSubmitting}\r\n                  regenerateUrl=\"/admin/api-tokens/\"\r\n                />\r\n\r\n                <Layouts.Content>\r\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\r\n                    {apiToken?.accessKey && showToken && (\r\n                      <>\r\n                        {window.strapi.future.isEnabled('unstableGuidedTour') ? (\r\n                          <UnstableApiTokenBox\r\n                            token={apiToken.accessKey}\r\n                            tokenType={API_TOKEN_TYPE}\r\n                          />\r\n                        ) : (\r\n                          <TokenBox token={apiToken.accessKey} tokenType={API_TOKEN_TYPE} />\r\n                        )}\r\n                      </>\r\n                    )}\r\n\r\n                    <FormApiTokenContainer\r\n                      errors={errors}\r\n                      onChange={handleChange}\r\n                      canEditInputs={canEditInputs}\r\n                      isCreating={isCreating}\r\n                      values={values}\r\n                      apiToken={apiToken}\r\n                      onDispatch={dispatch}\r\n                      setHasChangedPermissions={setHasChangedPermissions}\r\n                    />\r\n                    <Permissions\r\n                      disabled={\r\n                        !canEditInputs ||\r\n                        values?.type === 'read-only' ||\r\n                        values?.type === 'full-access'\r\n                      }\r\n                    />\r\n                  </Flex>\r\n                </Layouts.Content>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Page.Main>\r\n    </ApiTokenPermissionsProvider>\r\n  );\r\n};\r\n\r\nexport const ProtectedEditView = () => {\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.settings?.['api-tokens'].read\r\n  );\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions}>\r\n      <EditView />\r\n    </Page.Protect>\r\n  );\r\n};\r\n", "import { adminApi } from './api';\r\n\r\nimport type { List as ListContentApiPermissions } from '../../../shared/contracts/content-api/permissions';\r\nimport type { List as ListContentApiRoutes } from '../../../shared/contracts/content-api/routes';\r\n\r\nconst contentApiService = adminApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getPermissions: builder.query<ListContentApiPermissions.Response['data'], void>({\r\n      query: () => '/admin/content-api/permissions',\r\n      transformResponse: (response: ListContentApiPermissions.Response) => response.data,\r\n    }),\r\n    getRoutes: builder.query<ListContentApiRoutes.Response['data'], void>({\r\n      query: () => '/admin/content-api/routes',\r\n      transformResponse: (response: ListContentApiRoutes.Response) => response.data,\r\n    }),\r\n  }),\r\n  overrideExisting: false,\r\n});\r\n\r\nconst { useGetPermissionsQuery, useGetRoutesQuery } = contentApiService;\r\n\r\nexport { useGetPermissionsQuery, useGetRoutesQuery };\r\n", "/* eslint-disable check-file/filename-naming-convention */\r\n\r\nimport * as React from 'react';\r\n\r\nimport { createContext } from '@radix-ui/react-context';\r\n\r\nimport { List as ListContentApiPermissions } from '../../../../../../../shared/contracts/content-api/permissions';\r\nimport { List as ListContentApiRoutes } from '../../../../../../../shared/contracts/content-api/routes';\r\n\r\nexport interface PseudoEvent {\r\n  target: { value: string };\r\n}\r\n\r\ninterface ApiTokenPermissionsContextValue {\r\n  value: {\r\n    selectedAction: string | null;\r\n    routes: ListContentApiRoutes.Response['data'];\r\n    selectedActions: string[];\r\n    data: {\r\n      allActionsIds: string[];\r\n      permissions: ListContentApiPermissions.Response['data'][];\r\n    };\r\n    onChange: ({ target: { value } }: PseudoEvent) => void;\r\n    onChangeSelectAll: ({\r\n      target: { value },\r\n    }: {\r\n      target: { value: { action: string; actionId: string }[] };\r\n    }) => void;\r\n    setSelectedAction: ({ target: { value } }: PseudoEvent) => void;\r\n  };\r\n}\r\n\r\ninterface ApiTokenPermissionsContextProviderProps extends ApiTokenPermissionsContextValue {\r\n  children: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\nconst [ApiTokenPermissionsContextProvider, useApiTokenPermissionsContext] =\r\n  createContext<ApiTokenPermissionsContextValue>('ApiTokenPermissionsContext');\r\n\r\nconst ApiTokenPermissionsProvider = ({\r\n  children,\r\n  ...rest\r\n}: ApiTokenPermissionsContextProviderProps) => {\r\n  return (\r\n    <ApiTokenPermissionsContextProvider {...rest}>{children}</ApiTokenPermissionsContextProvider>\r\n  );\r\n};\r\n\r\nconst useApiTokenPermissions = () => useApiTokenPermissionsContext('useApiTokenPermissions');\r\n\r\nexport { ApiTokenPermissionsProvider, useApiTokenPermissions };\r\nexport type { ApiTokenPermissionsContextValue, ApiTokenPermissionsContextProviderProps };\r\n", "import * as React from 'react';\r\n\r\nimport { Box, Flex, Grid, Typography } from '@strapi/design-system';\r\nimport { FormikErrors } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { LifeSpanInput } from '../../../../components/Tokens/LifeSpanInput';\r\nimport { TokenDescription } from '../../../../components/Tokens/TokenDescription';\r\nimport { TokenName } from '../../../../components/Tokens/TokenName';\r\nimport { TokenTypeSelect } from '../../../../components/Tokens/TokenTypeSelect';\r\n\r\nimport type { ApiToken } from '../../../../../../../../shared/contracts/api-token';\r\n\r\ninterface FormApiTokenContainerProps {\r\n  errors?: FormikErrors<Pick<ApiToken, 'name' | 'description' | 'lifespan' | 'type'>>;\r\n  onChange: ({ target: { name, value } }: { target: { name: string; value: string } }) => void;\r\n  canEditInputs: boolean;\r\n  values?: Partial<Pick<ApiToken, 'name' | 'description' | 'lifespan' | 'type'>>;\r\n  isCreating: boolean;\r\n  apiToken?: null | Partial<ApiToken>;\r\n  onDispatch: React.Dispatch<any>;\r\n  setHasChangedPermissions: (hasChanged: boolean) => void;\r\n}\r\n\r\nexport const FormApiTokenContainer = ({\r\n  errors = {},\r\n  onChange,\r\n  canEditInputs,\r\n  isCreating,\r\n  values = {},\r\n  apiToken = {},\r\n  onDispatch,\r\n  setHasChangedPermissions,\r\n}: FormApiTokenContainerProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  const handleChangeSelectApiTokenType = ({ target: { value } }: { target: { value: string } }) => {\r\n    setHasChangedPermissions(false);\r\n\r\n    if (value === 'full-access') {\r\n      onDispatch({\r\n        type: 'SELECT_ALL_ACTIONS',\r\n      });\r\n    }\r\n    if (value === 'read-only') {\r\n      onDispatch({\r\n        type: 'ON_CHANGE_READ_ONLY',\r\n      });\r\n    }\r\n  };\r\n\r\n  const typeOptions = [\r\n    {\r\n      value: 'read-only',\r\n      label: {\r\n        id: 'Settings.tokens.types.read-only',\r\n        defaultMessage: 'Read-only',\r\n      },\r\n    },\r\n    {\r\n      value: 'full-access',\r\n      label: {\r\n        id: 'Settings.tokens.types.full-access',\r\n        defaultMessage: 'Full access',\r\n      },\r\n    },\r\n    {\r\n      value: 'custom',\r\n      label: {\r\n        id: 'Settings.tokens.types.custom',\r\n        defaultMessage: 'Custom',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      background=\"neutral0\"\r\n      hasRadius\r\n      shadow=\"filterShadow\"\r\n      paddingTop={6}\r\n      paddingBottom={6}\r\n      paddingLeft={7}\r\n      paddingRight={7}\r\n    >\r\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={4}>\r\n        <Typography variant=\"delta\" tag=\"h2\">\r\n          {formatMessage({\r\n            id: 'global.details',\r\n            defaultMessage: 'Details',\r\n          })}\r\n        </Typography>\r\n        <Grid.Root gap={5}>\r\n          <Grid.Item key=\"name\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\r\n            <TokenName\r\n              error={errors['name']}\r\n              value={values['name']}\r\n              canEditInputs={canEditInputs}\r\n              onChange={onChange}\r\n            />\r\n          </Grid.Item>\r\n          <Grid.Item key=\"description\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\r\n            <TokenDescription\r\n              error={errors['description']}\r\n              value={values['description']}\r\n              canEditInputs={canEditInputs}\r\n              onChange={onChange}\r\n            />\r\n          </Grid.Item>\r\n          <Grid.Item key=\"lifespan\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\r\n            <LifeSpanInput\r\n              isCreating={isCreating}\r\n              error={errors['lifespan']}\r\n              value={values['lifespan']}\r\n              onChange={onChange}\r\n              token={apiToken}\r\n            />\r\n          </Grid.Item>\r\n\r\n          <Grid.Item key=\"type\" col={6} xs={12} direction=\"column\" alignItems=\"stretch\">\r\n            <TokenTypeSelect\r\n              value={values['type']}\r\n              error={errors['type']}\r\n              label={{\r\n                id: 'Settings.tokens.form.type',\r\n                defaultMessage: 'Token type',\r\n              }}\r\n              onChange={(value) => {\r\n                // @ts-expect-error – DS Select supports numbers & strings, will be removed in V2\r\n                handleChangeSelectApiTokenType({ target: { value } });\r\n\r\n                // @ts-expect-error – DS Select supports numbers & strings, will be removed in V2\r\n                onChange({ target: { name: 'type', value } });\r\n              }}\r\n              options={typeOptions}\r\n              canEditInputs={canEditInputs}\r\n            />\r\n          </Grid.Item>\r\n        </Grid.Root>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n", "import { Box, BoxComponent, Flex, Typography } from '@strapi/design-system';\r\nimport map from 'lodash/map';\r\nimport tail from 'lodash/tail';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled, DefaultTheme } from 'styled-components';\r\n\r\ntype HttpVerb = 'POST' | 'GET' | 'PUT' | 'DELETE';\r\n\r\ntype MethodColor = {\r\n  text: keyof DefaultTheme['colors'];\r\n  border: keyof DefaultTheme['colors'];\r\n  background: keyof DefaultTheme['colors'];\r\n};\r\n\r\nconst getMethodColor = (verb: HttpVerb): MethodColor => {\r\n  switch (verb) {\r\n    case 'POST': {\r\n      return {\r\n        text: 'success600',\r\n        border: 'success200',\r\n        background: 'success100',\r\n      };\r\n    }\r\n    case 'GET': {\r\n      return {\r\n        text: 'secondary600',\r\n        border: 'secondary200',\r\n        background: 'secondary100',\r\n      };\r\n    }\r\n    case 'PUT': {\r\n      return {\r\n        text: 'warning600',\r\n        border: 'warning200',\r\n        background: 'warning100',\r\n      };\r\n    }\r\n    case 'DELETE': {\r\n      return {\r\n        text: 'danger600',\r\n        border: 'danger200',\r\n        background: 'danger100',\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        text: 'neutral600',\r\n        border: 'neutral200',\r\n        background: 'neutral100',\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst MethodBox = styled<BoxComponent>(Box)`\r\n  margin: -1px;\r\n  border-radius: ${({ theme }) => theme.spaces[1]} 0 0 ${({ theme }) => theme.spaces[1]};\r\n`;\r\n\r\ninterface BoundRouteProps {\r\n  route: {\r\n    handler: string;\r\n    method: HttpVerb;\r\n    path: string;\r\n  };\r\n}\r\n\r\nexport const BoundRoute = ({\r\n  route = {\r\n    handler: 'Nocontroller.error',\r\n    method: 'GET',\r\n    path: '/there-is-no-path',\r\n  },\r\n}: BoundRouteProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  const { method, handler: title, path } = route;\r\n  const formattedRoute = path ? tail(path.split('/')) : [];\r\n  const [controller = '', action = ''] = title ? title.split('.') : [];\r\n  const colors = getMethodColor(route.method);\r\n\r\n  return (\r\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n      <Typography variant=\"delta\" tag=\"h3\">\r\n        {formatMessage({\r\n          id: 'Settings.apiTokens.createPage.BoundRoute.title',\r\n          defaultMessage: 'Bound route to',\r\n        })}\r\n        &nbsp;\r\n        <span>{controller}</span>\r\n        <Typography variant=\"delta\" textColor=\"primary600\">\r\n          .{action}\r\n        </Typography>\r\n      </Typography>\r\n      <Flex hasRadius background=\"neutral0\" borderColor=\"neutral200\" gap={0}>\r\n        <MethodBox background={colors.background} borderColor={colors.border} padding={2}>\r\n          <Typography fontWeight=\"bold\" textColor={colors.text}>\r\n            {method}\r\n          </Typography>\r\n        </MethodBox>\r\n        <Box paddingLeft={2} paddingRight={2}>\r\n          {map(formattedRoute, (value) => (\r\n            <Typography key={value} textColor={value.includes(':') ? 'neutral600' : 'neutral900'}>\r\n              /{value}\r\n            </Typography>\r\n          ))}\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n", "import { Grid, Flex, Typography } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { useApiTokenPermissions } from '../apiTokenPermissions';\r\n\r\nimport { BoundRoute } from './BoundRoute';\r\n\r\nexport const ActionBoundRoutes = () => {\r\n  const {\r\n    value: { selectedAction, routes },\r\n  } = useApiTokenPermissions();\r\n  const { formatMessage } = useIntl();\r\n  const actionSection = selectedAction?.split('.')[0];\r\n\r\n  return (\r\n    <Grid.Item\r\n      col={5}\r\n      background=\"neutral150\"\r\n      paddingTop={6}\r\n      paddingBottom={6}\r\n      paddingLeft={7}\r\n      paddingRight={7}\r\n      style={{ minHeight: '100%' }}\r\n      direction=\"column\"\r\n      alignItems=\"stretch\"\r\n    >\r\n      {selectedAction ? (\r\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n          {actionSection &&\r\n            actionSection in routes &&\r\n            routes[actionSection].map((route) => {\r\n              return route.config.auth?.scope?.includes(selectedAction) ||\r\n                route.handler === selectedAction ? (\r\n                <BoundRoute key={route.handler} route={route} />\r\n              ) : null;\r\n            })}\r\n        </Flex>\r\n      ) : (\r\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n          <Typography variant=\"delta\" tag=\"h3\">\r\n            {formatMessage({\r\n              id: 'Settings.apiTokens.createPage.permissions.header.title',\r\n              defaultMessage: 'Advanced settings',\r\n            })}\r\n          </Typography>\r\n          <Typography tag=\"p\" textColor=\"neutral600\">\r\n            {formatMessage({\r\n              id: 'Settings.apiTokens.createPage.permissions.header.hint',\r\n              defaultMessage:\r\n                \"Select the application's actions or the plugin's actions and click on the cog icon to display the bound route\",\r\n            })}\r\n          </Typography>\r\n        </Flex>\r\n      )}\r\n    </Grid.Item>\r\n  );\r\n};\r\n", "import * as React from 'react';\r\n\r\nimport {\r\n  Accordion,\r\n  Box,\r\n  BoxComponent,\r\n  Checkbox,\r\n  Flex,\r\n  Grid,\r\n  Typography,\r\n} from '@strapi/design-system';\r\nimport { Cog } from '@strapi/icons';\r\nimport capitalize from 'lodash/capitalize';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled, css } from 'styled-components';\r\n\r\nimport { ContentApiPermission } from '../../../../../../../../shared/contracts/content-api/permissions';\r\nimport { useApiTokenPermissions } from '../apiTokenPermissions';\r\n\r\nconst activeCheckboxWrapperStyles = css`\r\n  background: ${(props) => props.theme.colors.primary100};\r\n\r\n  #cog {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst CheckboxWrapper = styled<BoxComponent>(Box)<{ $isActive: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  #cog {\r\n    opacity: 0;\r\n    path {\r\n      fill: ${(props) => props.theme.colors.primary600};\r\n    }\r\n  }\r\n\r\n  /* Show active style both on hover and when the action is selected */\r\n  ${(props) => props.$isActive && activeCheckboxWrapperStyles}\r\n  &:hover {\r\n    ${activeCheckboxWrapperStyles}\r\n  }\r\n`;\r\n\r\nconst Border = styled.div`\r\n  flex: 1;\r\n  align-self: center;\r\n  border-top: 1px solid ${({ theme }) => theme.colors.neutral150};\r\n`;\r\n\r\ninterface CollapsableContentTypeProps {\r\n  controllers?: ContentApiPermission['controllers'];\r\n  label: ContentApiPermission['label'];\r\n  orderNumber?: number;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const CollapsableContentType = ({\r\n  controllers = [],\r\n  label,\r\n  orderNumber = 0,\r\n  disabled = false,\r\n}: CollapsableContentTypeProps) => {\r\n  const {\r\n    value: { onChangeSelectAll, onChange, selectedActions, setSelectedAction, selectedAction },\r\n  } = useApiTokenPermissions();\r\n  const { formatMessage } = useIntl();\r\n\r\n  const isActionSelected = (actionId: string) => actionId === selectedAction;\r\n\r\n  return (\r\n    <Accordion.Item value={`${label}-${orderNumber}`}>\r\n      <Accordion.Header variant={orderNumber % 2 ? 'primary' : 'secondary'}>\r\n        <Accordion.Trigger>{capitalize(label)}</Accordion.Trigger>\r\n      </Accordion.Header>\r\n      <Accordion.Content>\r\n        {controllers?.map((controller) => {\r\n          const allActionsSelected = controller.actions.every((action) =>\r\n            selectedActions.includes(action.actionId)\r\n          );\r\n\r\n          const someActionsSelected = controller.actions.some((action) =>\r\n            selectedActions.includes(action.actionId)\r\n          );\r\n\r\n          return (\r\n            <Box key={`${label}.${controller?.controller}`}>\r\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" padding={4}>\r\n                <Box paddingRight={4}>\r\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                    {controller?.controller}\r\n                  </Typography>\r\n                </Box>\r\n                <Border />\r\n                <Box paddingLeft={4}>\r\n                  <Checkbox\r\n                    checked={\r\n                      !allActionsSelected && someActionsSelected\r\n                        ? 'indeterminate'\r\n                        : allActionsSelected\r\n                    }\r\n                    onCheckedChange={() => {\r\n                      onChangeSelectAll({ target: { value: [...controller.actions] } });\r\n                    }}\r\n                    disabled={disabled}\r\n                  >\r\n                    {formatMessage({ id: 'app.utils.select-all', defaultMessage: 'Select all' })}\r\n                  </Checkbox>\r\n                </Box>\r\n              </Flex>\r\n              <Grid.Root gap={4} padding={4}>\r\n                {controller?.actions &&\r\n                  controller?.actions.map((action) => {\r\n                    return (\r\n                      <Grid.Item\r\n                        col={6}\r\n                        key={action.actionId}\r\n                        direction=\"column\"\r\n                        alignItems=\"stretch\"\r\n                      >\r\n                        <CheckboxWrapper\r\n                          $isActive={isActionSelected(action.actionId)}\r\n                          padding={2}\r\n                          hasRadius\r\n                        >\r\n                          <Checkbox\r\n                            checked={selectedActions.includes(action.actionId)}\r\n                            name={action.actionId}\r\n                            onCheckedChange={() => {\r\n                              onChange({ target: { value: action.actionId } });\r\n                            }}\r\n                            disabled={disabled}\r\n                          >\r\n                            <span style={{ overflowWrap: 'anywhere' }}>{action.action}</span>\r\n                          </Checkbox>\r\n                          <button\r\n                            type=\"button\"\r\n                            data-testid=\"action-cog\"\r\n                            onClick={() =>\r\n                              setSelectedAction({ target: { value: action.actionId } })\r\n                            }\r\n                            style={{ display: 'inline-flex', alignItems: 'center' }}\r\n                          >\r\n                            <Cog id=\"cog\" />\r\n                          </button>\r\n                        </CheckboxWrapper>\r\n                      </Grid.Item>\r\n                    );\r\n                  })}\r\n              </Grid.Root>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Accordion.Content>\r\n    </Accordion.Item>\r\n  );\r\n};\r\n", "import { Accordion, Box } from '@strapi/design-system';\r\n\r\nimport { ContentApiPermission } from '../../../../../../../../shared/contracts/content-api/permissions';\r\n\r\nimport { CollapsableContentType } from './CollapsableContentType';\r\n\r\ninterface ContentTypesSectionProps {\r\n  section: ContentApiPermission[] | null;\r\n}\r\n\r\nexport const ContentTypesSection = ({ section = null, ...props }: ContentTypesSectionProps) => {\r\n  return (\r\n    <Box>\r\n      <Accordion.Root size=\"M\">\r\n        {section &&\r\n          section.map((api, index) => (\r\n            <CollapsableContentType\r\n              key={api.apiId}\r\n              label={api.label}\r\n              controllers={api.controllers}\r\n              orderNumber={index}\r\n              {...props}\r\n            />\r\n          ))}\r\n      </Accordion.Root>\r\n    </Box>\r\n  );\r\n};\r\n", "import { Flex, Grid, Typography } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { useApiTokenPermissions } from '../apiTokenPermissions';\r\n\r\nimport { ActionBoundRoutes } from './ActionBoundRoutes';\r\nimport { ContentTypesSection } from './ContentTypesSection';\r\n\r\nexport const Permissions = ({ ...props }) => {\r\n  const {\r\n    value: { data },\r\n  } = useApiTokenPermissions();\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Grid.Root gap={0} shadow=\"filterShadow\" hasRadius background=\"neutral0\">\r\n      <Grid.Item\r\n        col={7}\r\n        paddingTop={6}\r\n        paddingBottom={6}\r\n        paddingLeft={7}\r\n        paddingRight={7}\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        gap={6}\r\n      >\r\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n          <Typography variant=\"delta\" tag=\"h2\">\r\n            {formatMessage({\r\n              id: 'Settings.apiTokens.createPage.permissions.title',\r\n              defaultMessage: 'Permissions',\r\n            })}\r\n          </Typography>\r\n          <Typography tag=\"p\" textColor=\"neutral600\">\r\n            {formatMessage({\r\n              id: 'Settings.apiTokens.createPage.permissions.description',\r\n              defaultMessage: 'Only actions bound by a route are listed below.',\r\n            })}\r\n          </Typography>\r\n        </Flex>\r\n        {data?.permissions && <ContentTypesSection section={data?.permissions} {...props} />}\r\n      </Grid.Item>\r\n      <ActionBoundRoutes />\r\n    </Grid.Root>\r\n  );\r\n};\r\n", "import * as yup from 'yup';\r\n\r\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\r\n\r\nexport const schema = yup.object().shape({\r\n  name: yup.string().max(100).required(translatedErrors.required.id),\r\n  type: yup\r\n    .string()\r\n    .oneOf(['read-only', 'full-access', 'custom'])\r\n    .required(translatedErrors.required.id),\r\n  description: yup.string().nullable(),\r\n  lifespan: yup.number().integer().min(0).nullable().defined(translatedErrors.required.id),\r\n});\r\n", "/* eslint-disable consistent-return */\r\nimport { produce } from 'immer';\r\nimport pull from 'lodash/pull';\r\n\r\nimport { ContentApiPermission } from '../../../../../../../shared/contracts/content-api/permissions';\r\n\r\nimport { ApiTokenPermissionsContextValue } from './apiTokenPermissions';\r\nimport { transformPermissionsData } from './utils/transformPermissionsData';\r\n\r\ntype InitialState = Pick<\r\n  ApiTokenPermissionsContextValue['value'],\r\n  'data' | 'routes' | 'selectedAction' | 'selectedActions'\r\n>;\r\n\r\ninterface ActionOnChange {\r\n  type: 'ON_CHANGE';\r\n  value: string;\r\n}\r\n\r\ninterface ActionSelectAllInPermission {\r\n  type: 'SELECT_ALL_IN_PERMISSION';\r\n  value: { action: string; actionId: string }[];\r\n}\r\n\r\ninterface ActionSelectAllActions {\r\n  type: 'SELECT_ALL_ACTIONS';\r\n}\r\n\r\ninterface ActionOnChangeReadOnly {\r\n  type: 'ON_CHANGE_READ_ONLY';\r\n}\r\n\r\ninterface ActionUpdatePermissionsLayout {\r\n  type: 'UPDATE_PERMISSIONS_LAYOUT';\r\n  value: ContentApiPermission;\r\n}\r\n\r\ninterface ActionUpdateRoutes {\r\n  type: 'UPDATE_ROUTES';\r\n  value: ApiTokenPermissionsContextValue['value']['routes'] | undefined;\r\n}\r\n\r\ninterface ActionUpdatePermissions {\r\n  type: 'UPDATE_PERMISSIONS';\r\n  value: any[];\r\n}\r\n\r\ninterface ActionSetSelectedAction {\r\n  type: 'SET_SELECTED_ACTION';\r\n  value: string;\r\n}\r\n\r\ntype Action =\r\n  | ActionOnChange\r\n  | ActionSelectAllInPermission\r\n  | ActionSelectAllActions\r\n  | ActionOnChangeReadOnly\r\n  | ActionUpdatePermissionsLayout\r\n  | ActionUpdateRoutes\r\n  | ActionUpdatePermissions\r\n  | ActionSetSelectedAction;\r\n\r\nexport const initialState: InitialState = {\r\n  data: {\r\n    allActionsIds: [],\r\n    permissions: [],\r\n  },\r\n  routes: {},\r\n  selectedAction: '',\r\n  selectedActions: [],\r\n};\r\n\r\nexport const reducer = (state: InitialState, action: Action) =>\r\n  produce(state, (draftState) => {\r\n    switch (action.type) {\r\n      case 'ON_CHANGE': {\r\n        if (draftState.selectedActions.includes(action.value)) {\r\n          pull(draftState.selectedActions, action.value);\r\n        } else {\r\n          draftState.selectedActions.push(action.value);\r\n        }\r\n        break;\r\n      }\r\n      case 'SELECT_ALL_IN_PERMISSION': {\r\n        const areAllSelected = action.value.every((item) =>\r\n          draftState.selectedActions.includes(item.actionId)\r\n        );\r\n\r\n        if (areAllSelected) {\r\n          action.value.forEach((item) => {\r\n            pull(draftState.selectedActions, item.actionId);\r\n          });\r\n        } else {\r\n          action.value.forEach((item) => {\r\n            draftState.selectedActions.push(item.actionId);\r\n          });\r\n        }\r\n        break;\r\n      }\r\n\r\n      case 'SELECT_ALL_ACTIONS': {\r\n        draftState.selectedActions = [...draftState.data.allActionsIds];\r\n\r\n        break;\r\n      }\r\n      case 'ON_CHANGE_READ_ONLY': {\r\n        const onlyReadOnlyActions = draftState.data.allActionsIds.filter(\r\n          (actionId) => actionId.includes('find') || actionId.includes('findOne')\r\n        );\r\n        draftState.selectedActions = [...onlyReadOnlyActions];\r\n        break;\r\n      }\r\n      case 'UPDATE_PERMISSIONS_LAYOUT': {\r\n        draftState.data = transformPermissionsData(action.value);\r\n        break;\r\n      }\r\n      case 'UPDATE_ROUTES': {\r\n        draftState.routes = { ...action.value };\r\n        break;\r\n      }\r\n      case 'UPDATE_PERMISSIONS': {\r\n        draftState.selectedActions = [...action.value];\r\n        break;\r\n      }\r\n      case 'SET_SELECTED_ACTION': {\r\n        draftState.selectedAction = action.value;\r\n        break;\r\n      }\r\n      default:\r\n        return draftState;\r\n    }\r\n  });\r\n", "import { ContentApiPermission } from '../../../../../../../../shared/contracts/content-api/permissions';\r\n\r\ninterface Layout {\r\n  allActionsIds: string[];\r\n  permissions: {\r\n    apiId: string;\r\n    label: string;\r\n    controllers: { controller: string; actions: { action: string; actionId: string }[] }[];\r\n  }[];\r\n}\r\n\r\nexport const transformPermissionsData = (data: ContentApiPermission) => {\r\n  const layout: Layout = {\r\n    allActionsIds: [],\r\n    permissions: [],\r\n  };\r\n\r\n  layout.permissions = Object.entries(data).map(([apiId, permission]) => ({\r\n    apiId,\r\n    label: apiId.split('::')[1],\r\n    controllers: Object.keys(permission.controllers)\r\n      .map((controller) => ({\r\n        controller,\r\n        actions:\r\n          controller in permission.controllers\r\n            ? permission.controllers[controller]\r\n                .map((action: ContentApiPermission['controllers']) => {\r\n                  const actionId = `${apiId}.${controller}.${action}`;\r\n\r\n                  if (apiId.includes('api::')) {\r\n                    layout.allActionsIds.push(actionId);\r\n                  }\r\n\r\n                  return {\r\n                    action,\r\n                    actionId,\r\n                  };\r\n                })\r\n                .flat()\r\n            : [],\r\n      }))\r\n      .flat(),\r\n  }));\r\n\r\n  return layout;\r\n};\r\n"],
  "mappings": "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",
  "names": ["map", "tail", "pull", "import_jsx_runtime", "import_jsx_runtime", "tail", "map", "import_jsx_runtime", "import_jsx_runtime", "capitalize", "import_jsx_runtime", "import_jsx_runtime", "create", "pull", "import_jsx_runtime", "state"]
}
