{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/constants.ts"],
  "sourcesContent": ["import type { SettingsMenu } from '../../../admin/src/constants';\r\nimport type { PermissionMap } from '../../../admin/src/types/permissions';\r\nimport type { RouteObject } from 'react-router-dom';\r\n\r\nexport const ADMIN_PERMISSIONS_EE = {\r\n  settings: {\r\n    auditLogs: {\r\n      main: [{ action: 'admin::audit-logs.read', subject: null }],\r\n      read: [{ action: 'admin::audit-logs.read', subject: null }],\r\n      update: [{ action: 'admin::audit-logs.update', subject: null }],\r\n    },\r\n    'review-workflows': {\r\n      main: [{ action: 'admin::review-workflows.read', subject: null }],\r\n      read: [{ action: 'admin::review-workflows.read', subject: null }],\r\n      create: [{ action: 'admin::review-workflows.create', subject: null }],\r\n      delete: [{ action: 'admin::review-workflows.delete', subject: null }],\r\n      update: [{ action: 'admin::review-workflows.update', subject: null }],\r\n    },\r\n    sso: {\r\n      main: [{ action: 'admin::provider-login.read', subject: null }],\r\n      read: [{ action: 'admin::provider-login.read', subject: null }],\r\n      update: [{ action: 'admin::provider-login.update', subject: null }],\r\n    },\r\n    releases: {\r\n      read: [\r\n        {\r\n          action: 'plugin::content-releases.settings.read',\r\n          subject: null,\r\n        },\r\n      ],\r\n      update: [\r\n        {\r\n          action: 'plugin::content-releases.settings.update',\r\n          subject: null,\r\n        },\r\n      ],\r\n    },\r\n  },\r\n} satisfies {\r\n  settings: Pick<PermissionMap['settings'], 'auditLogs' | 'review-workflows' | 'sso' | 'releases'>;\r\n};\r\n\r\n/**\r\n * Base EE routes, these are relative to the `root` of the app.\r\n * We use a function to get them so we're not looking at window\r\n * during build time.\r\n */\r\nexport const getEERoutes = (): RouteObject[] =>\r\n  window.strapi.isEE\r\n    ? [\r\n        {\r\n          path: 'auth/login/:authResponse',\r\n          lazy: async () => {\r\n            const { AuthResponse } = await import('./pages/AuthResponse');\r\n\r\n            return {\r\n              Component: AuthResponse,\r\n            };\r\n          },\r\n        },\r\n      ]\r\n    : [];\r\n\r\n// TODO: the constants.js file is imported before the React application is setup and\r\n// therefore `window.strapi` might not exist at import-time. We should probably define\r\n// which constant is available at which stage of the application lifecycle.\r\nexport const SETTINGS_LINKS_EE = (): SettingsMenu => ({\r\n  global: [\r\n    ...(window.strapi.features.isEnabled(window.strapi.features.SSO)\r\n      ? [\r\n          {\r\n            intlLabel: { id: 'Settings.sso.title', defaultMessage: 'Single Sign-On' },\r\n            to: '/settings/single-sign-on',\r\n            id: 'sso',\r\n          },\r\n        ]\r\n      : []),\r\n  ],\r\n\r\n  admin: [\r\n    ...(window.strapi.features.isEnabled(window.strapi.features.AUDIT_LOGS)\r\n      ? [\r\n          {\r\n            intlLabel: { id: 'global.auditLogs', defaultMessage: 'Audit Logs' },\r\n            to: '/settings/audit-logs?pageSize=50&page=1&sort=date:DESC',\r\n            id: 'auditLogs',\r\n          },\r\n        ]\r\n      : []),\r\n  ],\r\n});\r\n"],
  "mappings": ";AAIO,IAAM,uBAAuB;AAAA,EAClC,UAAU;AAAA,IACR,WAAW;AAAA,MACT,MAAM,CAAC,EAAE,QAAQ,0BAA0B,SAAS,KAAK,CAAC;AAAA,MAC1D,MAAM,CAAC,EAAE,QAAQ,0BAA0B,SAAS,KAAK,CAAC;AAAA,MAC1D,QAAQ,CAAC,EAAE,QAAQ,4BAA4B,SAAS,KAAK,CAAC;AAAA,IAChE;AAAA,IACA,oBAAoB;AAAA,MAClB,MAAM,CAAC,EAAE,QAAQ,gCAAgC,SAAS,KAAK,CAAC;AAAA,MAChE,MAAM,CAAC,EAAE,QAAQ,gCAAgC,SAAS,KAAK,CAAC;AAAA,MAChE,QAAQ,CAAC,EAAE,QAAQ,kCAAkC,SAAS,KAAK,CAAC;AAAA,MACpE,QAAQ,CAAC,EAAE,QAAQ,kCAAkC,SAAS,KAAK,CAAC;AAAA,MACpE,QAAQ,CAAC,EAAE,QAAQ,kCAAkC,SAAS,KAAK,CAAC;AAAA,IACtE;AAAA,IACA,KAAK;AAAA,MACH,MAAM,CAAC,EAAE,QAAQ,8BAA8B,SAAS,KAAK,CAAC;AAAA,MAC9D,MAAM,CAAC,EAAE,QAAQ,8BAA8B,SAAS,KAAK,CAAC;AAAA,MAC9D,QAAQ,CAAC,EAAE,QAAQ,gCAAgC,SAAS,KAAK,CAAC;AAAA,IACpE;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,QACJ;AAAA,UACE,QAAQ;AAAA,UACR,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN;AAAA,UACE,QAAQ;AAAA,UACR,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AASO,IAAM,cAAc,MACzB,OAAO,OAAO,OACV;AAAA,EACE;AAAA,IACE,MAAM;AAAA,IACN,MAAM,YAAY;AAChB,YAAM,EAAE,aAAa,IAAI,MAAM,OAAO,4BAAsB;AAE5D,aAAO;AAAA,QACL,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AACF,IACA,CAAC;AAKA,IAAM,oBAAoB,OAAqB;AAAA,EACpD,QAAQ;AAAA,IACN,GAAI,OAAO,OAAO,SAAS,UAAU,OAAO,OAAO,SAAS,GAAG,IAC3D;AAAA,MACE;AAAA,QACE,WAAW,EAAE,IAAI,sBAAsB,gBAAgB,iBAAiB;AAAA,QACxE,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAAA,IACF,IACA,CAAC;AAAA,EACP;AAAA,EAEA,OAAO;AAAA,IACL,GAAI,OAAO,OAAO,SAAS,UAAU,OAAO,OAAO,SAAS,UAAU,IAClE;AAAA,MACE;AAAA,QACE,WAAW,EAAE,IAAI,oBAAoB,gBAAgB,aAAa;AAAA,QAClE,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAAA,IACF,IACA,CAAC;AAAA,EACP;AACF;",
  "names": []
}
