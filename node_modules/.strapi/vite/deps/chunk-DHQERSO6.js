import {
  useInitQuery,
  useTelemetryPropertiesQuery
} from "./chunk-GLPT7RON.js";
import {
  useAuth
} from "./chunk-YQN4TQZU.js";
import {
  createContext
} from "./chunk-PR5W4YOM.js";
import {
  axios_default
} from "./chunk-2VOUQL7N.js";
import {
  require_jsx_runtime
} from "./chunk-GAPF2DTI.js";
import {
  require_react
} from "./chunk-2ZN62OJX.js";
import {
  __toESM
} from "./chunk-X6GFWOGJ.js";

// ../packages/core/admin/admin/src/features/AppInfo.tsx
var [AppInfoProvider, useAppInfo] = createContext("AppInfo", {});

// ../packages/core/admin/admin/src/features/Tracking.tsx
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var TrackingContext = React.createContext({
  uuid: false
});
var TrackingProvider = ({ children }) => {
  const token = useAuth("App", (state) => state.token);
  const { data: initData } = useInitQuery();
  const { uuid } = initData ?? {};
  const { data } = useTelemetryPropertiesQuery(void 0, {
    skip: !(initData == null ? void 0 : initData.uuid) || !token
  });
  const value = React.useMemo(
    () => ({
      uuid,
      telemetryProperties: data
    }),
    [uuid, data]
  );
  return (0, import_jsx_runtime.jsx)(TrackingContext.Provider, { value, children });
};
var useTracking = () => {
  const { uuid, telemetryProperties } = React.useContext(TrackingContext);
  const userId = useAppInfo("useTracking", (state) => state.userId);
  const trackUsage = React.useCallback(
    async (event, properties) => {
      try {
        if (uuid && !window.strapi.telemetryDisabled) {
          const res = await axios_default.post(
            "https://analytics.strapi.io/api/v2/track",
            {
              event,
              userId,
              eventProperties: { ...properties },
              userProperties: {},
              groupProperties: {
                ...telemetryProperties,
                projectId: uuid,
                projectType: window.strapi.projectType
              }
            },
            {
              headers: {
                "Content-Type": "application/json",
                "X-Strapi-Event": event
              }
            }
          );
          return res;
        }
      } catch (err) {
      }
      return null;
    },
    [telemetryProperties, userId, uuid]
  );
  return { trackUsage };
};

export {
  AppInfoProvider,
  useAppInfo,
  TrackingProvider,
  useTracking
};
//# sourceMappingURL=chunk-DHQERSO6.js.map
