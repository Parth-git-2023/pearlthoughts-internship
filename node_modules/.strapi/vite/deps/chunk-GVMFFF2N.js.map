{
  "version": 3,
  "sources": ["../../../../../packages/core/upload/admin/src/hooks/useConfig.ts"],
  "sourcesContent": ["import { useTracking, useNotification, useFetchClient } from '@strapi/admin/strapi-admin';\r\nimport { useIntl } from 'react-intl';\r\nimport { useMutation, useQuery, UseMutationResult, UseQueryResult } from 'react-query';\r\n\r\nimport { GetConfiguration, UpdateConfiguration } from '../../../shared/contracts/configuration';\r\nimport { pluginId } from '../pluginId';\r\n\r\nconst endpoint = `/${pluginId}/configuration`;\r\nconst queryKey = [pluginId, 'configuration'];\r\n\r\nexport const useConfig = () => {\r\n  const { trackUsage } = useTracking();\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const { get, put } = useFetchClient();\r\n\r\n  const config: UseQueryResult<\r\n    GetConfiguration.Response['data']['data'] | GetConfiguration.Response['error']\r\n  > = useQuery(\r\n    queryKey,\r\n    async () => {\r\n      const res: GetConfiguration.Response = await get(endpoint);\r\n\r\n      return res.data.data;\r\n    },\r\n    {\r\n      onError() {\r\n        return toggleNotification({\r\n          type: 'danger',\r\n          message: formatMessage({ id: 'notification.error' }),\r\n        });\r\n      },\r\n      /**\r\n       * We're cementing that we always expect an object to be returned.\r\n       */\r\n      select: (data) => data || {},\r\n    }\r\n  );\r\n\r\n  const putMutation: UseMutationResult<\r\n    void,\r\n    UpdateConfiguration.Response['error'],\r\n    UpdateConfiguration.Request['body']\r\n  > = useMutation(\r\n    async (body) => {\r\n      await put<UpdateConfiguration.Response>(endpoint, body);\r\n    },\r\n    {\r\n      onSuccess() {\r\n        trackUsage('didEditMediaLibraryConfig');\r\n        config.refetch();\r\n      },\r\n      onError() {\r\n        return toggleNotification({\r\n          type: 'danger',\r\n          message: formatMessage({ id: 'notification.error' }),\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  return {\r\n    config,\r\n    mutateConfig: putMutation,\r\n  };\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,WAAW,IAAI,QAAQ;AAC7B,IAAM,WAAW,CAAC,UAAU,eAAe;AAEpC,IAAM,YAAY,MAAM;AAC7B,QAAM,EAAE,WAAW,IAAI,YAAY;AACnC,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,mBAAmB,IAAI,gBAAgB;AAC/C,QAAM,EAAE,KAAK,IAAI,IAAI,eAAe;AAEpC,QAAM,SAEF;AAAA,IACF;AAAA,IACA,YAAY;AACV,YAAM,MAAiC,MAAM,IAAI,QAAQ;AAEzD,aAAO,IAAI,KAAK;AAAA,IAClB;AAAA,IACA;AAAA,MACE,UAAU;AACR,eAAO,mBAAmB;AAAA,UACxB,MAAM;AAAA,UACN,SAAS,cAAc,EAAE,IAAI,qBAAqB,CAAC;AAAA,QACrD,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,CAAC,SAAS,QAAQ,CAAC;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,cAIF;AAAA,IACF,OAAO,SAAS;AACd,YAAM,IAAkC,UAAU,IAAI;AAAA,IACxD;AAAA,IACA;AAAA,MACE,YAAY;AACV,mBAAW,2BAA2B;AACtC,eAAO,QAAQ;AAAA,MACjB;AAAA,MACA,UAAU;AACR,eAAO,mBAAmB;AAAA,UACxB,MAAM;AAAA,UACN,SAAS,cAAc,EAAE,IAAI,qBAAqB,CAAC;AAAA,QACrD,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA,cAAc;AAAA,EAChB;AACF;",
  "names": []
}
