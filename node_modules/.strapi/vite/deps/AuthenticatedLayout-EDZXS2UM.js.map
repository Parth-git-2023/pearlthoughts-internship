{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/layouts/AuthenticatedLayout.tsx", "../../../../../packages/core/admin/package.json", "../../../../../packages/core/admin/admin/src/components/GuidedTour/Modal.tsx", "../../../../../packages/core/admin/admin/src/components/MainNav/MainNav.tsx", "../../../../../packages/core/admin/admin/src/components/MainNav/NavBrand.tsx", "../../../../../packages/core/admin/admin/src/components/MainNav/NavLink.tsx", "../../../../../packages/core/admin/admin/src/components/MainNav/NavUser.tsx", "../../../../../packages/core/admin/admin/src/components/MainNav/TrialCountdown.tsx", "../../../../../packages/core/admin/admin/src/components/LeftMenu.tsx", "../../../../../packages/core/admin/admin/src/components/PluginsInitializer.tsx", "../../../../../packages/core/admin/admin/src/components/UpsellBanner.tsx", "../../../../../packages/core/admin/admin/src/hooks/useMenu.ts"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport packageInfo from '@strapi/admin/package.json';\r\nimport { Box, Flex, SkipToContent } from '@strapi/design-system';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { useIntl } from 'react-intl';\r\nimport { Outlet } from 'react-router-dom';\r\nimport lt from 'semver/functions/lt';\r\nimport valid from 'semver/functions/valid';\r\n\r\nimport { GuidedTourModal } from '../components/GuidedTour/Modal';\r\nimport { useGuidedTour } from '../components/GuidedTour/Provider';\r\nimport { LeftMenu } from '../components/LeftMenu';\r\nimport { NpsSurvey } from '../components/NpsSurvey';\r\nimport { Page } from '../components/PageHelpers';\r\nimport { PluginsInitializer } from '../components/PluginsInitializer';\r\nimport { PrivateRoute } from '../components/PrivateRoute';\r\nimport { UpsellBanner } from '../components/UpsellBanner';\r\nimport { AppInfoProvider } from '../features/AppInfo';\r\nimport { useAuth } from '../features/Auth';\r\nimport { useConfiguration } from '../features/Configuration';\r\nimport { useStrapiApp } from '../features/StrapiApp';\r\nimport { useTracking } from '../features/Tracking';\r\nimport { useMenu } from '../hooks/useMenu';\r\nimport { useInformationQuery } from '../services/admin';\r\nimport { hashAdminUserEmail } from '../utils/users';\r\n\r\nconst { version: strapiVersion } = packageInfo;\r\n\r\nconst AdminLayout = () => {\r\n  const setGuidedTourVisibility = useGuidedTour(\r\n    'AdminLayout',\r\n    (state) => state.setGuidedTourVisibility\r\n  );\r\n  const { formatMessage } = useIntl();\r\n  const userInfo = useAuth('AuthenticatedApp', (state) => state.user);\r\n  const [userId, setUserId] = React.useState<string>();\r\n  const { showReleaseNotification } = useConfiguration('AuthenticatedApp');\r\n\r\n  const { data: appInfo, isLoading: isLoadingAppInfo } = useInformationQuery();\r\n  const [tagName, setTagName] = React.useState<string>(strapiVersion);\r\n\r\n  React.useEffect(() => {\r\n    if (showReleaseNotification) {\r\n      fetch('https://api.github.com/repos/strapi/strapi/releases/latest')\r\n        .then(async (res) => {\r\n          if (!res.ok) {\r\n            return;\r\n          }\r\n\r\n          const response = (await res.json()) as { tag_name: string | null | undefined };\r\n\r\n          if (!response.tag_name) {\r\n            throw new Error();\r\n          }\r\n\r\n          setTagName(response.tag_name);\r\n        })\r\n        .catch(() => {\r\n          /**\r\n           * silence is golden & we'll use the strapiVersion as a fallback\r\n           */\r\n        });\r\n    }\r\n  }, [showReleaseNotification]);\r\n\r\n  const userRoles = useAuth('AuthenticatedApp', (state) => state.user?.roles);\r\n\r\n  React.useEffect(() => {\r\n    if (userRoles) {\r\n      const isUserSuperAdmin = userRoles.find(({ code }) => code === 'strapi-super-admin');\r\n\r\n      if (isUserSuperAdmin && appInfo?.autoReload) {\r\n        setGuidedTourVisibility(true);\r\n      }\r\n    }\r\n  }, [userRoles, appInfo?.autoReload, setGuidedTourVisibility]);\r\n\r\n  React.useEffect(() => {\r\n    hashAdminUserEmail(userInfo).then((id) => {\r\n      if (id) {\r\n        setUserId(id);\r\n      }\r\n    });\r\n  }, [userInfo]);\r\n\r\n  const { trackUsage } = useTracking();\r\n\r\n  const {\r\n    isLoading: isLoadingMenu,\r\n    generalSectionLinks,\r\n    pluginsSectionLinks,\r\n  } = useMenu(checkLatestStrapiVersion(strapiVersion, tagName));\r\n\r\n  const getAllWidgets = useStrapiApp('TrackingProvider', (state) => state.widgets.getAll);\r\n  const projectId = appInfo?.projectId;\r\n  React.useEffect(() => {\r\n    if (projectId) {\r\n      trackUsage('didAccessAuthenticatedAdministration', {\r\n        registeredWidgets: getAllWidgets().map((widget) => widget.uid),\r\n        projectId,\r\n      });\r\n    }\r\n  }, [projectId, getAllWidgets, trackUsage]);\r\n\r\n  // We don't need to wait for the release query to be fetched before rendering the plugins\r\n  // however, we need the appInfos and the permissions\r\n  if (isLoadingMenu || isLoadingAppInfo) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  return (\r\n    <AppInfoProvider\r\n      {...appInfo}\r\n      userId={userId}\r\n      latestStrapiReleaseTag={tagName}\r\n      shouldUpdateStrapi={checkLatestStrapiVersion(strapiVersion, tagName)}\r\n    >\r\n      <NpsSurvey />\r\n      <PluginsInitializer>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <Box background=\"neutral100\">\r\n            <SkipToContent>\r\n              {formatMessage({ id: 'skipToContent', defaultMessage: 'Skip to content' })}\r\n            </SkipToContent>\r\n            <Flex alignItems=\"flex-start\">\r\n              <LeftMenu\r\n                generalSectionLinks={generalSectionLinks}\r\n                pluginsSectionLinks={pluginsSectionLinks}\r\n              />\r\n              <Box flex={1}>\r\n                <UpsellBanner />\r\n                <Outlet />\r\n                <GuidedTourModal />\r\n              </Box>\r\n            </Flex>\r\n          </Box>\r\n        </DndProvider>\r\n      </PluginsInitializer>\r\n    </AppInfoProvider>\r\n  );\r\n};\r\n\r\nconst PrivateAdminLayout = () => {\r\n  return (\r\n    <PrivateRoute>\r\n      <AdminLayout />\r\n    </PrivateRoute>\r\n  );\r\n};\r\n\r\nconst checkLatestStrapiVersion = (\r\n  currentPackageVersion: string,\r\n  latestPublishedVersion: string = ''\r\n): boolean => {\r\n  if (!valid(currentPackageVersion) || !valid(latestPublishedVersion)) {\r\n    return false;\r\n  }\r\n\r\n  return lt(currentPackageVersion, latestPublishedVersion);\r\n};\r\n\r\nexport { AdminLayout, PrivateAdminLayout };\r\n", "{\r\n  \"name\": \"@strapi/admin\",\r\n  \"version\": \"5.18.0\",\r\n  \"description\": \"Strapi Admin\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/strapi/strapi.git\"\r\n  },\r\n  \"license\": \"SEE LICENSE IN LICENSE\",\r\n  \"author\": {\r\n    \"name\": \"Strapi Solutions SAS\",\r\n    \"email\": \"hi@strapi.io\",\r\n    \"url\": \"https://strapi.io\"\r\n  },\r\n  \"maintainers\": [\r\n    {\r\n      \"name\": \"Strapi Solutions SAS\",\r\n      \"email\": \"hi@strapi.io\",\r\n      \"url\": \"https://strapi.io\"\r\n    }\r\n  ],\r\n  \"exports\": {\r\n    \"./strapi-admin\": {\r\n      \"types\": \"./dist/admin/src/index.d.ts\",\r\n      \"source\": \"./admin/src/index.ts\",\r\n      \"import\": \"./dist/admin/index.mjs\",\r\n      \"require\": \"./dist/admin/index.js\",\r\n      \"default\": \"./dist/admin/index.js\"\r\n    },\r\n    \"./strapi-admin/ee\": {\r\n      \"types\": \"./dist/admin/src/ee.d.ts\",\r\n      \"source\": \"./admin/src/ee.ts\",\r\n      \"import\": \"./dist/admin/ee.mjs\",\r\n      \"require\": \"./dist/admin/ee.js\",\r\n      \"default\": \"./dist/admin/ee.js\"\r\n    },\r\n    \"./strapi-admin/test\": {\r\n      \"types\": \"./dist/admin/tests/index.d.ts\",\r\n      \"source\": \"./admin/tests/index.ts\",\r\n      \"import\": \"./dist/admin/test.mjs\",\r\n      \"require\": \"./dist/admin/test.js\",\r\n      \"default\": \"./dist/admin/test.js\"\r\n    },\r\n    \"./_internal\": {\r\n      \"types\": \"./dist/_internal/index.d.ts\",\r\n      \"source\": \"./_internal/index.ts\",\r\n      \"import\": \"./dist/_internal.mjs\",\r\n      \"require\": \"./dist/_internal.js\",\r\n      \"default\": \"./dist/_internal.js\"\r\n    },\r\n    \"./strapi-server\": {\r\n      \"types\": \"./dist/server/src/index.d.ts\",\r\n      \"source\": \"./server/src/index.js\",\r\n      \"import\": \"./dist/server/index.mjs\",\r\n      \"require\": \"./dist/server/index.js\",\r\n      \"default\": \"./dist/server/index.js\"\r\n    },\r\n    \"./package.json\": \"./package.json\"\r\n  },\r\n  \"files\": [\r\n    \"dist/\"\r\n  ],\r\n  \"scripts\": {\r\n    \"build\": \"run -T npm-run-all clean --parallel build:code build:types\",\r\n    \"build:code\": \"run -T rollup -c\",\r\n    \"build:types\": \"run -T run-p build:types:server build:types:admin build:types:internals\",\r\n    \"build:types:internals\": \"run -T tsc -p tsconfig.build.json --emitDeclarationOnly\",\r\n    \"build:types:server\": \"run -T tsc -p server/tsconfig.build.json --emitDeclarationOnly\",\r\n    \"build:types:admin\": \"run -T tsc -p admin/tsconfig.build.json --emitDeclarationOnly\",\r\n    \"clean\": \"run -T rimraf ./dist\",\r\n    \"lint\": \"run -T eslint .\",\r\n    \"test:front\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js\",\r\n    \"test:front:watch\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js --watchAll\",\r\n    \"test:ts\": \"run -T tsc -p tsconfig.json\",\r\n    \"test:ts:back\": \"run -T tsc --noEmit -p server/tsconfig.json\",\r\n    \"test:ts:front\": \"run -T tsc -p admin/tsconfig.json && run -T tsc -p ee/admin/tsconfig.json\",\r\n    \"test:unit\": \"run -T jest\",\r\n    \"test:unit:watch\": \"run -T jest --watch\",\r\n    \"watch\": \"run -T rollup -c -w\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@casl/ability\": \"6.5.0\",\r\n    \"@internationalized/date\": \"3.5.4\",\r\n    \"@radix-ui/react-context\": \"1.0.1\",\r\n    \"@radix-ui/react-toolbar\": \"1.0.4\",\r\n    \"@reduxjs/toolkit\": \"1.9.7\",\r\n    \"@strapi/design-system\": \"2.0.0-rc.29\",\r\n    \"@strapi/icons\": \"2.0.0-rc.29\",\r\n    \"@strapi/permissions\": \"5.18.0\",\r\n    \"@strapi/types\": \"5.18.0\",\r\n    \"@strapi/typescript-utils\": \"5.18.0\",\r\n    \"@strapi/utils\": \"5.18.0\",\r\n    \"@testing-library/dom\": \"10.1.0\",\r\n    \"@testing-library/react\": \"15.0.7\",\r\n    \"@testing-library/user-event\": \"14.5.2\",\r\n    \"axios\": \"1.8.4\",\r\n    \"bcryptjs\": \"2.4.3\",\r\n    \"boxen\": \"5.1.2\",\r\n    \"chalk\": \"^4.1.2\",\r\n    \"codemirror5\": \"npm:codemirror@^5.65.11\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"date-fns\": \"2.30.0\",\r\n    \"execa\": \"5.1.1\",\r\n    \"fast-deep-equal\": \"3.1.3\",\r\n    \"formik\": \"2.4.5\",\r\n    \"fractional-indexing\": \"3.2.0\",\r\n    \"fs-extra\": \"11.2.0\",\r\n    \"highlight.js\": \"^10.4.1\",\r\n    \"immer\": \"9.0.21\",\r\n    \"inquirer\": \"8.2.5\",\r\n    \"invariant\": \"^2.2.4\",\r\n    \"is-localhost-ip\": \"2.0.0\",\r\n    \"json-logic-js\": \"2.0.5\",\r\n    \"jsonwebtoken\": \"9.0.0\",\r\n    \"koa\": \"2.16.1\",\r\n    \"koa-compose\": \"4.1.0\",\r\n    \"koa-passport\": \"6.0.0\",\r\n    \"koa-static\": \"5.0.0\",\r\n    \"koa2-ratelimit\": \"^1.1.3\",\r\n    \"lodash\": \"4.17.21\",\r\n    \"node-schedule\": \"2.1.1\",\r\n    \"ora\": \"5.4.1\",\r\n    \"p-map\": \"4.0.0\",\r\n    \"passport-local\": \"1.0.0\",\r\n    \"pluralize\": \"8.0.0\",\r\n    \"punycode\": \"2.3.1\",\r\n    \"qs\": \"6.11.1\",\r\n    \"react-dnd\": \"16.0.1\",\r\n    \"react-dnd-html5-backend\": \"16.0.1\",\r\n    \"react-intl\": \"6.6.2\",\r\n    \"react-is\": \"^18.2.0\",\r\n    \"react-query\": \"3.39.3\",\r\n    \"react-redux\": \"8.1.3\",\r\n    \"react-select\": \"5.8.0\",\r\n    \"react-window\": \"1.8.10\",\r\n    \"rimraf\": \"5.0.5\",\r\n    \"sanitize-html\": \"2.13.0\",\r\n    \"scheduler\": \"0.23.0\",\r\n    \"semver\": \"7.5.4\",\r\n    \"sift\": \"16.0.1\",\r\n    \"typescript\": \"5.4.4\",\r\n    \"use-context-selector\": \"1.4.1\",\r\n    \"yup\": \"0.32.9\",\r\n    \"zod\": \"3.24.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@strapi/admin-test-utils\": \"5.18.0\",\r\n    \"@strapi/data-transfer\": \"5.18.0\",\r\n    \"@types/codemirror5\": \"npm:@types/codemirror@^5.60.15\",\r\n    \"@types/fs-extra\": \"11.0.4\",\r\n    \"@types/invariant\": \"2.2.36\",\r\n    \"@types/json-logic-js\": \"2.0.8\",\r\n    \"@types/jsonwebtoken\": \"9.0.3\",\r\n    \"@types/koa-passport\": \"6.0.1\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"@types/markdown-it\": \"13.0.7\",\r\n    \"@types/markdown-it-container\": \"2.0.9\",\r\n    \"@types/markdown-it-emoji\": \"2.0.4\",\r\n    \"@types/markdown-it-footnote\": \"3.0.3\",\r\n    \"@types/passport-local\": \"1.0.36\",\r\n    \"@types/pluralize\": \"0.0.32\",\r\n    \"@types/punycode\": \"2.1.4\",\r\n    \"@types/react-window\": \"1.8.8\",\r\n    \"@types/sanitize-html\": \"2.13.0\",\r\n    \"@vitejs/plugin-react-swc\": \"3.6.0\",\r\n    \"koa-body\": \"6.0.1\",\r\n    \"msw\": \"1.3.0\",\r\n    \"react\": \"18.3.1\",\r\n    \"react-dom\": \"18.3.1\",\r\n    \"react-router-dom\": \"6.22.3\",\r\n    \"styled-components\": \"6.1.8\",\r\n    \"vite\": \"5.4.19\",\r\n    \"vite-plugin-dts\": \"^4.3.0\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"@strapi/data-transfer\": \"^5.0.0\",\r\n    \"react\": \"^17.0.0 || ^18.0.0\",\r\n    \"react-dom\": \"^17.0.0 || ^18.0.0\",\r\n    \"react-router-dom\": \"^6.0.0\",\r\n    \"styled-components\": \"^6.0.0\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=18.0.0 <=22.x.x\",\r\n    \"npm\": \">=6.0.0\"\r\n  },\r\n  \"nx\": {\r\n    \"targets\": {\r\n      \"build\": {\r\n        \"outputs\": [\r\n          \"{projectRoot}/build\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import * as React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FlexComponent,\r\n  FocusTrap,\r\n  IconButton,\r\n  Portal,\r\n  Typography,\r\n  LinkButton,\r\n} from '@strapi/design-system';\r\nimport { ArrowRight, Cross } from '@strapi/icons';\r\nimport get from 'lodash/get';\r\nimport { MessageDescriptor, useIntl } from 'react-intl';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useTracking } from '../../features/Tracking';\r\n\r\nimport { LAYOUT_DATA, STATES } from './constants';\r\nimport { Number, VerticalDivider } from './Ornaments';\r\nimport { GuidedTourContextValue, useGuidedTour } from './Provider';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * GuidedTourModal\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst GuidedTourModal = () => {\r\n  const guidedTour = useGuidedTour('GuidedTourModal', (state) => state);\r\n\r\n  const {\r\n    currentStep,\r\n    guidedTourState,\r\n    setCurrentStep,\r\n    setStepState,\r\n    isGuidedTourVisible,\r\n    setSkipped,\r\n  } = guidedTour;\r\n\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n\r\n  if (!currentStep || !isGuidedTourVisible) {\r\n    return null;\r\n  }\r\n\r\n  const stepData = get(LAYOUT_DATA, currentStep);\r\n  const sectionKeys = Object.keys(guidedTourState);\r\n  const [sectionName, stepName] = currentStep.split('.') as [\r\n    keyof GuidedTourContextValue['guidedTourState'],\r\n    string,\r\n  ];\r\n  const sectionIndex = sectionKeys.indexOf(sectionName);\r\n  const stepIndex = Object.keys(guidedTourState[sectionName]).indexOf(stepName);\r\n  const hasSectionAfter = sectionIndex < sectionKeys.length - 1;\r\n  const hasStepAfter = stepIndex < Object.keys(guidedTourState[sectionName]).length - 1;\r\n\r\n  const handleCtaClick = () => {\r\n    setStepState(currentStep, true);\r\n\r\n    if (stepData) {\r\n      trackUsage(stepData.trackingEvent);\r\n    }\r\n\r\n    setCurrentStep(null);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setSkipped(true);\r\n    setCurrentStep(null);\r\n    trackUsage('didSkipGuidedtour');\r\n  };\r\n\r\n  return (\r\n    <Portal>\r\n      <ModalWrapper onClick={handleCtaClick} padding={8} justifyContent=\"center\">\r\n        <FocusTrap onEscape={handleCtaClick}>\r\n          <Flex\r\n            direction=\"column\"\r\n            alignItems=\"stretch\"\r\n            background=\"neutral0\"\r\n            width={`66rem`}\r\n            shadow=\"popupShadow\"\r\n            hasRadius\r\n            padding={4}\r\n            gap={8}\r\n            role=\"dialog\"\r\n            aria-modal\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <Flex justifyContent=\"flex-end\">\r\n              <IconButton\r\n                onClick={handleCtaClick}\r\n                withTooltip={false}\r\n                label={formatMessage({\r\n                  id: 'app.utils.close-label',\r\n                  defaultMessage: 'Close',\r\n                })}\r\n              >\r\n                <Cross />\r\n              </IconButton>\r\n            </Flex>\r\n            <Box\r\n              paddingLeft={7}\r\n              paddingRight={7}\r\n              paddingBottom={!hasStepAfter && !hasSectionAfter ? 8 : 0}\r\n            >\r\n              <GuidedTourStepper\r\n                title={stepData && 'title' in stepData ? stepData.title : undefined}\r\n                cta={stepData && 'cta' in stepData ? stepData.cta : undefined}\r\n                onCtaClick={handleCtaClick}\r\n                sectionIndex={sectionIndex}\r\n                stepIndex={stepIndex}\r\n                hasSectionAfter={hasSectionAfter}\r\n              >\r\n                {stepData && 'content' in stepData && <GuidedTourContent {...stepData.content} />}\r\n              </GuidedTourStepper>\r\n            </Box>\r\n            {!(!hasStepAfter && !hasSectionAfter) && (\r\n              <Flex justifyContent=\"flex-end\">\r\n                <Button variant=\"tertiary\" onClick={handleSkip}>\r\n                  {formatMessage({\r\n                    id: 'app.components.GuidedTour.skip',\r\n                    defaultMessage: 'Skip the tour',\r\n                  })}\r\n                </Button>\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n        </FocusTrap>\r\n      </ModalWrapper>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nconst ModalWrapper = styled<FlexComponent>(Flex)`\r\n  position: fixed;\r\n  z-index: 4;\r\n  inset: 0;\r\n  /* this is theme.colors.neutral800 with opacity */\r\n  background: ${({ theme }) => `${theme.colors.neutral800}1F`};\r\n`;\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * GuidedTourStepper\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface GuidedTourStepperProps {\r\n  title: MessageDescriptor | undefined;\r\n  children: React.ReactNode;\r\n  cta?: {\r\n    title: MessageDescriptor;\r\n    target?: string;\r\n  };\r\n  onCtaClick: () => void;\r\n  sectionIndex: number;\r\n  stepIndex: number;\r\n  hasSectionAfter: boolean;\r\n}\r\n\r\nconst GuidedTourStepper = ({\r\n  title,\r\n  children,\r\n  cta,\r\n  onCtaClick,\r\n  sectionIndex,\r\n  stepIndex,\r\n  hasSectionAfter,\r\n}: GuidedTourStepperProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  const hasSectionBefore = sectionIndex > 0;\r\n  const hasStepsBefore = stepIndex > 0;\r\n  const nextSectionIndex = sectionIndex + 1;\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems=\"stretch\">\r\n        <Flex marginRight={8} justifyContent=\"center\" minWidth={`3rem`}>\r\n          {hasSectionBefore && <VerticalDivider state={STATES.IS_DONE} minHeight={`2.4rem`} />}\r\n        </Flex>\r\n        <Typography variant=\"sigma\" textColor=\"primary600\">\r\n          {formatMessage({\r\n            id: 'app.components.GuidedTour.title',\r\n            defaultMessage: '3 steps to get started',\r\n          })}\r\n        </Typography>\r\n      </Flex>\r\n      <Flex>\r\n        <Flex marginRight={8} minWidth={`3rem`}>\r\n          <Number\r\n            state={hasStepsBefore ? STATES.IS_DONE : STATES.IS_ACTIVE}\r\n            paddingTop={3}\r\n            paddingBottom={3}\r\n          >\r\n            {sectionIndex + 1}\r\n          </Number>\r\n        </Flex>\r\n        {title && (\r\n          <Typography variant=\"alpha\" fontWeight=\"bold\" textColor=\"neutral800\" tag=\"h3\" id=\"title\">\r\n            {formatMessage(title)}\r\n          </Typography>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"stretch\">\r\n        <Flex marginRight={8} direction=\"column\" justifyContent=\"center\" minWidth={`3rem`}>\r\n          {hasSectionAfter && (\r\n            <>\r\n              <VerticalDivider state={STATES.IS_DONE} />\r\n              {hasStepsBefore && (\r\n                <Number state={STATES.IS_ACTIVE} paddingTop={3}>\r\n                  {nextSectionIndex + 1}\r\n                </Number>\r\n              )}\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Box>\r\n          {children}\r\n          {cta &&\r\n            (cta.target ? (\r\n              <LinkButton\r\n                tag={NavLink}\r\n                endIcon={<ArrowRight />}\r\n                onClick={onCtaClick}\r\n                to={cta.target}\r\n              >\r\n                {formatMessage(cta.title)}\r\n              </LinkButton>\r\n            ) : (\r\n              <Button endIcon={<ArrowRight />} onClick={onCtaClick}>\r\n                {formatMessage(cta.title)}\r\n              </Button>\r\n            ))}\r\n        </Box>\r\n      </Flex>\r\n      {hasStepsBefore && hasSectionAfter && (\r\n        <Box paddingTop={3}>\r\n          <Flex marginRight={8} justifyContent=\"center\" width={`3rem`}>\r\n            <VerticalDivider state={STATES.IS_DONE} minHeight={`2.4rem`} />\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * GuidedTourContent\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface GuidedTourContentProps\r\n  extends Required<Pick<MessageDescriptor, 'defaultMessage' | 'id'>> {}\r\n\r\nconst GuidedTourContent = ({ id, defaultMessage }: GuidedTourContentProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={4} paddingBottom={6}>\r\n      {formatMessage(\r\n        { id, defaultMessage },\r\n        {\r\n          documentationLink: DocumentationLink,\r\n          b: Bold,\r\n          p: Paragraph,\r\n          light: Light,\r\n          ul: List,\r\n          li: ListItem,\r\n        }\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst DocumentationLink = (children: React.ReactNode) => (\r\n  <Typography\r\n    tag=\"a\"\r\n    textColor=\"primary600\"\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    href=\"https://docs.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/rest-api.html#api-parameters\"\r\n  >\r\n    {children}\r\n  </Typography>\r\n);\r\n\r\nconst Bold = (children: React.ReactNode) => (\r\n  <Typography fontWeight=\"semiBold\">{children}</Typography>\r\n);\r\n\r\nconst Paragraph = (children: React.ReactNode) => <Typography>{children}</Typography>;\r\n\r\nconst Light = (children: React.ReactNode) => (\r\n  <Typography textColor=\"neutral600\">{children}</Typography>\r\n);\r\n\r\nconst List = (children: React.ReactNode) => (\r\n  <Box paddingLeft={6}>\r\n    <ul>{children}</ul>\r\n  </Box>\r\n);\r\n\r\nconst LiStyled = styled.li`\r\n  list-style: disc;\r\n  &::marker {\r\n    color: ${({ theme }) => theme.colors.neutral800};\r\n  }\r\n`;\r\n\r\nconst ListItem = (children: React.ReactNode) => <LiStyled>{children}</LiStyled>;\r\n\r\nexport { GuidedTourModal };\r\n", "import { Flex, FlexComponent, FlexProps } from '@strapi/design-system';\r\nimport { styled } from 'styled-components';\r\n\r\nconst MainNavWrapper = styled<FlexComponent<'nav'>>(Flex)`\r\n  border-right: 1px solid ${({ theme }) => theme.colors.neutral150};\r\n`;\r\n\r\nconst MainNav = (props: FlexProps<'nav'>) => (\r\n  <MainNavWrapper\r\n    alignItems=\"normal\"\r\n    tag=\"nav\"\r\n    background=\"neutral0\"\r\n    direction=\"column\"\r\n    height=\"100vh\"\r\n    position=\"sticky\"\r\n    top={0}\r\n    zIndex={2}\r\n    width={10}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport { MainNav };\r\n", "import { Box, Flex, type FlexComponent, VisuallyHidden } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useConfiguration } from '../../features/Configuration';\r\n\r\nconst BrandIconWrapper = styled<FlexComponent>(Flex)`\r\n  svg,\r\n  img {\r\n    border-radius: ${({ theme }) => theme.borderRadius};\r\n    object-fit: contain;\r\n    height: 2.4rem;\r\n    width: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const NavBrand = () => {\r\n  const { formatMessage } = useIntl();\r\n  const {\r\n    logos: { menu },\r\n  } = useConfiguration('LeftMenu');\r\n  return (\r\n    <Box padding={3}>\r\n      <BrandIconWrapper direction=\"column\" justifyContent=\"center\" width=\"3.2rem\" height=\"3.2rem\">\r\n        <img\r\n          src={menu.custom?.url || menu.default}\r\n          alt={formatMessage({\r\n            id: 'app.components.LeftMenu.logo.alt',\r\n            defaultMessage: 'Application logo',\r\n          })}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        <VisuallyHidden>\r\n          <span>\r\n            {formatMessage({\r\n              id: 'app.components.LeftMenu.navbrand.title',\r\n              defaultMessage: 'Strapi Dashboard',\r\n            })}\r\n          </span>\r\n          <span>\r\n            {formatMessage({\r\n              id: 'app.components.LeftMenu.navbrand.workplace',\r\n              defaultMessage: 'Workplace',\r\n            })}\r\n          </span>\r\n        </VisuallyHidden>\r\n      </BrandIconWrapper>\r\n    </Box>\r\n  );\r\n};\r\n", "import * as React from 'react';\r\n\r\nimport {\r\n  Tooltip,\r\n  TooltipProps as DSTooltipProps,\r\n  Badge,\r\n  BadgeProps,\r\n  AccessibleIcon,\r\n} from '@strapi/design-system';\r\nimport { NavLink as RouterLink, LinkProps, To } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { tours as unstable_tours } from '../UnstableGuidedTour/Tours';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Link\r\n * -----------------------------------------------------------------------------------------------*/\r\nconst MainNavLinkWrapper = styled(RouterLink)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  background: ${({ theme }) => theme.colors.neutral0};\r\n  color: ${({ theme }) => theme.colors.neutral500};\r\n  position: relative;\r\n  width: fit-content;\r\n  padding-block: 0.6rem;\r\n  padding-inline: 0.6rem;\r\n\r\n  &:hover {\r\n    svg path {\r\n      fill: ${({ theme }) => theme.colors.neutral600};\r\n    }\r\n    background: ${({ theme }) => theme.colors.neutral100};\r\n  }\r\n\r\n  &.active {\r\n    svg path {\r\n      fill: ${({ theme }) => theme.colors.primary600};\r\n    }\r\n    background: ${({ theme }) => theme.colors.primary100};\r\n  }\r\n`;\r\n\r\nconst getGuidedTourTooltip = (to: To) => {\r\n  const normalizedTo = to.toString().replace(/\\//g, '');\r\n\r\n  switch (normalizedTo) {\r\n    case 'content-manager':\r\n      return unstable_tours.contentTypeBuilder.Finish;\r\n    case '':\r\n      return unstable_tours.apiTokens.Finish;\r\n    case 'settings':\r\n      return unstable_tours.contentManager.Finish;\r\n    default:\r\n      return React.Fragment;\r\n  }\r\n};\r\n\r\nconst LinkImpl = ({ children, ...props }: LinkProps) => {\r\n  const GuidedTourTooltip = getGuidedTourTooltip(props.to);\r\n\r\n  return (\r\n    <GuidedTourTooltip>\r\n      <MainNavLinkWrapper {...props}>{children}</MainNavLinkWrapper>\r\n    </GuidedTourTooltip>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Tooltip\r\n * -----------------------------------------------------------------------------------------------*/\r\nconst TooltipImpl = ({ children, label, position = 'right' }: NavLink.TooltipProps) => {\r\n  return (\r\n    <Tooltip side={position} label={label} delayDuration={0}>\r\n      <span>{children}</span>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Icon\r\n * -----------------------------------------------------------------------------------------------*/\r\nconst IconImpl = ({ label, children }: { label: string; children: React.ReactNode }) => {\r\n  if (!children) {\r\n    return null;\r\n  }\r\n  return <AccessibleIcon label={label}>{children}</AccessibleIcon>;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Badge\r\n * -----------------------------------------------------------------------------------------------*/\r\nconst CustomBadge = styled(Badge)`\r\n  /* override default badge styles to change the border radius of the Base element in the Design System */\r\n  border-radius: ${({ theme }) => theme.spaces[10]};\r\n  height: 2rem;\r\n`;\r\n\r\nconst BadgeImpl = ({ children, label, ...props }: NavLink.NavBadgeProps) => {\r\n  if (!children) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CustomBadge\r\n      position=\"absolute\"\r\n      top=\"-0.8rem\"\r\n      left=\"1.7rem\"\r\n      aria-label={label}\r\n      active={false}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </CustomBadge>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * EXPORTS\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst NavLink = {\r\n  Link: LinkImpl,\r\n  Tooltip: TooltipImpl,\r\n  Icon: IconImpl,\r\n  Badge: BadgeImpl,\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nnamespace NavLink {\r\n  export interface NavBadgeProps extends BadgeProps {\r\n    children: React.ReactNode;\r\n    label: string;\r\n  }\r\n\r\n  export interface TooltipProps {\r\n    children: React.ReactNode;\r\n    label?: string;\r\n    position?: DSTooltipProps['side'];\r\n  }\r\n}\r\n\r\nexport { NavLink };\r\n", "import * as React from 'react';\r\n\r\nimport { Flex, Menu, VisuallyHidden, Avatar, Typography, Badge } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useAuth } from '../../features/Auth';\r\n\r\nconst MenuTrigger = styled(Menu.Trigger)`\r\n  height: ${({ theme }) => theme.spaces[7]};\r\n  width: ${({ theme }) => theme.spaces[7]};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MenuContent = styled(Menu.Content)`\r\n  max-height: fit-content;\r\n  width: 200px;\r\n`;\r\n\r\nconst UserInfo = styled(Flex)`\r\n  && {\r\n    padding: ${({ theme }) => theme.spaces[3]};\r\n  }\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst BadgeWrapper = styled(Flex)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: ${({ theme }) => theme.spaces[1]};\r\n\r\n  width: 100%;\r\n`;\r\nconst StyledTypography = styled(Typography)`\r\n  word-break: break-word;\r\n  margin-bottom: ${({ theme }) => theme.spaces[3]};\r\n`;\r\n\r\nexport interface NavUserProps {\r\n  initials: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const NavUser = ({ children, initials, ...props }: NavUserProps) => {\r\n  const { formatMessage } = useIntl();\r\n  const navigate = useNavigate();\r\n  const user = useAuth('User', (state) => state.user);\r\n  const logout = useAuth('Logout', (state) => state.logout);\r\n\r\n  const handleProfile = () => {\r\n    navigate('/me');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/auth/login');\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      padding={3}\r\n      borderStyle=\"solid\"\r\n      borderWidth=\"1px 0 0 0\"\r\n      borderColor=\"neutral150\"\r\n      {...props}\r\n    >\r\n      <Menu.Root>\r\n        <MenuTrigger endIcon={null} fullWidth justifyContent=\"center\">\r\n          <Avatar.Item delayMs={0} fallback={initials} />\r\n          <VisuallyHidden tag=\"span\">{children}</VisuallyHidden>\r\n        </MenuTrigger>\r\n\r\n        <MenuContent popoverPlacement=\"top-start\" zIndex={3}>\r\n          <UserInfo direction=\"column\" gap={0} alignItems=\"flex-start\">\r\n            <Typography variant=\"omega\" fontWeight=\"bold\" textTransform=\"none\">\r\n              {children}\r\n            </Typography>\r\n            <StyledTypography variant=\"pi\" textColor=\"neutral600\">\r\n              {user?.email}\r\n            </StyledTypography>\r\n            <BadgeWrapper>\r\n              {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\r\n            </BadgeWrapper>\r\n          </UserInfo>\r\n\r\n          <Menu.Separator />\r\n\r\n          <Menu.Item onSelect={handleProfile}>\r\n            {formatMessage({\r\n              id: 'global.profile.settings',\r\n              defaultMessage: 'Profile settings',\r\n            })}\r\n          </Menu.Item>\r\n\r\n          <Menu.Item variant=\"danger\" onSelect={handleLogout} color=\"danger600\">\r\n            {formatMessage({\r\n              id: 'app.components.LeftMenu.logout',\r\n              defaultMessage: 'Log out',\r\n            })}\r\n          </Menu.Item>\r\n        </MenuContent>\r\n      </Menu.Root>\r\n    </Flex>\r\n  );\r\n};\r\n", "import { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\r\nimport { Flex, Tooltip } from '@strapi/design-system';\r\nimport { format, isBefore, startOfToday } from 'date-fns';\r\nimport { useIntl } from 'react-intl';\r\nimport { useTheme } from 'styled-components';\r\n\r\nimport { useGetLicenseTrialTimeLeftQuery } from '../../../src/services/admin';\r\n\r\ntype CircleProgressBarProps = {\r\n  percentage: number;\r\n};\r\n\r\nconst CircleProgressBar = ({ percentage }: CircleProgressBarProps) => {\r\n  const theme = useTheme();\r\n\r\n  const radius = 45;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const offset = circumference * (1 - percentage / 100);\r\n\r\n  return (\r\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 100 100\">\r\n      <defs>\r\n        <linearGradient id=\"progressGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n          <stop offset=\"0%\" stopColor={theme.colors.primary600} />\r\n          <stop offset=\"100%\" stopColor={theme.colors.alternative600} />\r\n        </linearGradient>\r\n      </defs>\r\n      <circle cx=\"50\" cy=\"50\" r={radius} stroke=\"#ccc\" strokeWidth=\"10\" fill=\"none\" />\r\n      <circle\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        r={radius}\r\n        stroke=\"url(#progressGradient)\"\r\n        strokeWidth=\"10\"\r\n        fill=\"none\"\r\n        strokeDasharray={circumference}\r\n        strokeDashoffset={offset}\r\n        transform=\"rotate(-90 50 50)\"\r\n        strokeLinecap=\"round\"\r\n      />\r\n      <svg x=\"35\" y=\"25\" width=\"50\" height=\"50\" viewBox=\"0 0 32 32\">\r\n        <path\r\n          fill=\"url(#progressGradient)\"\r\n          d=\"m21.731 14.683-14 15a1 1 0 0 1-1.711-.875l1.832-9.167L.65 16.936a1 1 0 0 1-.375-1.625l14-15a1 1 0 0 1 1.71.875l-1.837 9.177 7.204 2.7a1 1 0 0 1 .375 1.62z\"\r\n        />\r\n      </svg>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst TrialCountdown = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { license, isError, isLoading } = useLicenseLimits();\r\n\r\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\r\n    skip: !license?.isTrial,\r\n  });\r\n\r\n  if (\r\n    isError ||\r\n    isLoading ||\r\n    !license?.isTrial ||\r\n    timeLeftData.isLoading ||\r\n    timeLeftData.isError ||\r\n    !timeLeftData.data ||\r\n    !timeLeftData.data.trialEndsAt\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  const targetDate = new Date(timeLeftData.data.trialEndsAt);\r\n  const now = new Date();\r\n  const isTargetDateInPast = isBefore(targetDate, startOfToday());\r\n\r\n  const millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  const timeDifference = targetDate.getTime() - now.getTime();\r\n\r\n  const daysLeft =\r\n    Math.ceil(timeDifference / millisecondsPerDay) <= 0\r\n      ? 0\r\n      : Math.ceil(timeDifference / millisecondsPerDay);\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" padding={3}>\r\n      <Tooltip\r\n        label={formatMessage(\r\n          isTargetDateInPast\r\n            ? {\r\n                id: 'app.components.LeftMenu.trialCountdown.endedAt',\r\n                defaultMessage: 'Your trial ended on {date}',\r\n              }\r\n            : {\r\n                id: 'app.components.LeftMenu.trialCountdown.endsAt',\r\n                defaultMessage: 'Your trial ends on {date}',\r\n              },\r\n          {\r\n            date: format(new Date(timeLeftData.data.trialEndsAt), 'PPP'),\r\n          }\r\n        )}\r\n        side=\"right\"\r\n      >\r\n        <div data-testid=\"trial-countdown\">\r\n          <CircleProgressBar percentage={((30 - daysLeft) * 100) / 30} />\r\n        </div>\r\n      </Tooltip>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport { TrialCountdown };\r\n", "import * as React from 'react';\r\n\r\nimport { Divider, Flex, FlexComponent, useCollator } from '@strapi/design-system';\r\nimport { Lightning } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useAuth } from '../features/Auth';\r\nimport { useTracking } from '../features/Tracking';\r\nimport { Menu, MenuItem } from '../hooks/useMenu';\r\nimport { getDisplayName, getInitials } from '../utils/users';\r\n\r\nimport { MainNav } from './MainNav/MainNav';\r\nimport { NavBrand } from './MainNav/NavBrand';\r\nimport { NavLink } from './MainNav/NavLink';\r\nimport { NavUser } from './MainNav/NavUser';\r\nimport { TrialCountdown } from './MainNav/TrialCountdown';\r\n\r\nconst sortLinks = (links: MenuItem[]) => {\r\n  return links.sort((a, b) => {\r\n    // if no position is defined, we put the link in the position of the external plugins, before the plugins list\r\n    const positionA = a.position ?? 6;\r\n    const positionB = b.position ?? 6;\r\n\r\n    if (positionA < positionB) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst NavLinkBadgeCounter = styled(NavLink.Badge)`\r\n  span {\r\n    color: ${({ theme }) => theme.colors.neutral0};\r\n  }\r\n`;\r\n\r\nconst NavLinkBadgeLock = styled(NavLink.Badge)`\r\n  background-color: transparent;\r\n`;\r\n\r\nconst NavListWrapper = styled<FlexComponent<'ul'>>(Flex)`\r\n  overflow-y: auto;\r\n`;\r\n\r\ninterface LeftMenuProps extends Pick<Menu, 'generalSectionLinks' | 'pluginsSectionLinks'> {}\r\n\r\nconst LeftMenu = ({ generalSectionLinks, pluginsSectionLinks }: LeftMenuProps) => {\r\n  const user = useAuth('AuthenticatedApp', (state) => state.user);\r\n  const { trackUsage } = useTracking();\r\n  const { pathname } = useLocation();\r\n  const userDisplayName = getDisplayName(user);\r\n  const { formatMessage, locale } = useIntl();\r\n  const formatter = useCollator(locale, {\r\n    sensitivity: 'base',\r\n  });\r\n\r\n  const initials = getInitials(user);\r\n\r\n  const handleClickOnLink = (destination: string) => {\r\n    trackUsage('willNavigate', { from: pathname, to: destination });\r\n  };\r\n\r\n  const listLinksAlphabeticallySorted = [...pluginsSectionLinks, ...generalSectionLinks].sort(\r\n    (a, b) => formatter.compare(formatMessage(a.intlLabel), formatMessage(b.intlLabel))\r\n  );\r\n  const listLinks = sortLinks(listLinksAlphabeticallySorted);\r\n\r\n  return (\r\n    <MainNav>\r\n      <NavBrand />\r\n\r\n      <Divider />\r\n\r\n      <NavListWrapper tag=\"ul\" gap={3} direction=\"column\" flex={1} paddingTop={3} paddingBottom={3}>\r\n        {listLinks.length > 0\r\n          ? listLinks.map((link) => {\r\n              const LinkIcon = link.icon;\r\n              const badgeContentLock = link?.licenseOnly ? (\r\n                <Lightning fill=\"primary600\" />\r\n              ) : undefined;\r\n\r\n              const badgeContentNumeric =\r\n                link.notificationsCount && link.notificationsCount > 0\r\n                  ? link.notificationsCount.toString()\r\n                  : undefined;\r\n\r\n              const labelValue = formatMessage(link.intlLabel);\r\n              return (\r\n                <Flex tag=\"li\" key={link.to}>\r\n                  <NavLink.Tooltip label={labelValue}>\r\n                    <NavLink.Link\r\n                      to={link.to}\r\n                      onClick={() => handleClickOnLink(link.to)}\r\n                      aria-label={labelValue}\r\n                    >\r\n                      <NavLink.Icon label={labelValue}>\r\n                        <LinkIcon width=\"20\" height=\"20\" fill=\"neutral500\" />\r\n                      </NavLink.Icon>\r\n                      {badgeContentLock ? (\r\n                        <NavLinkBadgeLock\r\n                          label=\"locked\"\r\n                          textColor=\"neutral500\"\r\n                          paddingLeft={0}\r\n                          paddingRight={0}\r\n                        >\r\n                          {badgeContentLock}\r\n                        </NavLinkBadgeLock>\r\n                      ) : badgeContentNumeric ? (\r\n                        <NavLinkBadgeCounter\r\n                          label={badgeContentNumeric}\r\n                          backgroundColor=\"primary600\"\r\n                          width=\"2.3rem\"\r\n                          color=\"neutral0\"\r\n                        >\r\n                          {badgeContentNumeric}\r\n                        </NavLinkBadgeCounter>\r\n                      ) : null}\r\n                    </NavLink.Link>\r\n                  </NavLink.Tooltip>\r\n                </Flex>\r\n              );\r\n            })\r\n          : null}\r\n      </NavListWrapper>\r\n      <TrialCountdown />\r\n      <NavUser initials={initials}>{userDisplayName}</NavUser>\r\n    </MainNav>\r\n  );\r\n};\r\n\r\nexport { LeftMenu };\r\n", "import * as React from 'react';\r\n\r\nimport { produce } from 'immer';\r\n\r\nimport { Page } from '../components/PageHelpers';\r\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\r\n\r\n/**\r\n * TODO: this isn't great, and we really should focus on fixing this.\r\n */\r\nconst PluginsInitializer = ({ children }: { children: React.ReactNode }) => {\r\n  const appPlugins = useStrapiApp('PluginsInitializer', (state) => state.plugins);\r\n  const [{ plugins }, dispatch] = React.useReducer<React.Reducer<State, Action>, State>(\r\n    reducer,\r\n    initialState,\r\n    () => init(appPlugins)\r\n  );\r\n  const setPlugin = React.useRef((pluginId: string) => {\r\n    dispatch({ type: 'SET_PLUGIN_READY', pluginId });\r\n  });\r\n\r\n  const hasApluginNotReady = Object.keys(plugins).some(\r\n    (plugin) => plugins[plugin].isReady === false\r\n  );\r\n\r\n  /**\r\n   *\r\n   * I have spent some time trying to understand what is happening here, and wanted to\r\n   * leave that knowledge for my future me:\r\n   *\r\n   * `initializer` is an undocumented property of the `registerPlugin` API. At the time\r\n   * of writing it seems only to be used by the i18n plugin.\r\n   *\r\n   * How does it work?\r\n   *\r\n   * Every plugin that has an `initializer` component defined, receives the\r\n   * `setPlugin` function as a component prop. In the case of i18n the plugin fetches locales\r\n   * first and calls `setPlugin` with `pluginId` once they are loaded, which then triggers the\r\n   * reducer of the admin app defined above.\r\n   *\r\n   * Once all plugins are set to `isReady: true` the app renders.\r\n   *\r\n   * This API is used to block rendering of the admin app. We should remove that in v5 completely\r\n   * and make sure plugins can inject data into the global store before they are initialized, to avoid\r\n   * having a new prop-callback based communication channel between plugins and the core admin app.\r\n   *\r\n   */\r\n\r\n  if (hasApluginNotReady) {\r\n    const initializers = Object.keys(plugins).reduce((acc, current) => {\r\n      const InitializerComponent = plugins[current].initializer;\r\n\r\n      if (InitializerComponent) {\r\n        const key = plugins[current].pluginId;\r\n\r\n        acc.push(<InitializerComponent key={key} setPlugin={setPlugin.current} />);\r\n      }\r\n\r\n      return acc;\r\n    }, [] as React.ReactNode[]);\r\n\r\n    return (\r\n      <>\r\n        {initializers}\r\n        <Page.Loading />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Reducer\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface State {\r\n  plugins: StrapiAppContextValue['plugins'];\r\n}\r\n\r\nconst initialState: State = {\r\n  plugins: {},\r\n};\r\n\r\ntype SetPluginReadyAction = {\r\n  type: 'SET_PLUGIN_READY';\r\n  pluginId: string;\r\n};\r\n\r\ntype Action = SetPluginReadyAction;\r\n\r\nconst reducer: React.Reducer<State, Action> = (state = initialState, action: Action): State =>\r\n  produce(state, (draftState) => {\r\n    switch (action.type) {\r\n      case 'SET_PLUGIN_READY': {\r\n        draftState.plugins[action.pluginId].isReady = true;\r\n        break;\r\n      }\r\n      default:\r\n        return draftState;\r\n    }\r\n  });\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Init state\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst init = (plugins: State['plugins']): State => {\r\n  return {\r\n    plugins,\r\n  };\r\n};\r\n\r\nexport { PluginsInitializer };\r\n", "import { useEffect } from 'react';\r\n\r\nimport { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\r\nimport { Box, Flex, LinkButton, Typography } from '@strapi/design-system';\r\nimport { isAfter, subDays } from 'date-fns';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useGetLicenseTrialTimeLeftQuery } from '../../src/services/admin';\r\nimport { usePersistentState } from '../hooks/usePersistentState';\r\n\r\nconst BannerBackground = styled(Flex)`\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme }) => theme.colors.primary600} 0%,\r\n    ${({ theme }) => theme.colors.alternative600} 121.48%\r\n  );\r\n`;\r\n\r\nconst Banner = ({ isTrialEndedRecently }: { isTrialEndedRecently: boolean }) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <BannerBackground width=\"100%\" justifyContent=\"center\">\r\n      <Flex\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n        paddingTop={2}\r\n        paddingBottom={2}\r\n        paddingLeft={10}\r\n        paddingRight={10}\r\n        gap={2}\r\n      >\r\n        <Box>\r\n          <Typography\r\n            variant=\"delta\"\r\n            fontWeight=\"bold\"\r\n            textColor=\"neutral0\"\r\n            textAlign=\"center\"\r\n            fontSize={2}\r\n          >\r\n            {formatMessage(\r\n              isTrialEndedRecently\r\n                ? {\r\n                    id: 'app.components.UpsellBanner.intro.ended',\r\n                    defaultMessage: 'Your trial has ended: ',\r\n                  }\r\n                : {\r\n                    id: 'app.components.UpsellBanner.intro',\r\n                    defaultMessage: 'Access to Growth plan features: ',\r\n                  }\r\n            )}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"delta\"\r\n            textColor=\"neutral0\"\r\n            textAlign=\"center\"\r\n            paddingRight={4}\r\n            fontSize={2}\r\n          >\r\n            {formatMessage(\r\n              isTrialEndedRecently\r\n                ? {\r\n                    id: 'app.components.UpsellBanner.text.ended',\r\n                    defaultMessage: 'Keep access to Growth features by upgrading now.',\r\n                  }\r\n                : {\r\n                    id: 'app.components.UpsellBanner.text',\r\n                    defaultMessage:\r\n                      'As part of your trial, you can explore premium tools such as Content History, Releases, and Single Sign-On (SSO).',\r\n                  }\r\n            )}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <LinkButton\r\n            width=\"max-content\"\r\n            variant=\"tertiary\"\r\n            href=\"https://strapi.chargebeeportal.com\"\r\n            target=\"_blank\"\r\n          >\r\n            {formatMessage(\r\n              isTrialEndedRecently\r\n                ? {\r\n                    id: 'app.components.UpsellBanner.button.ended',\r\n                    defaultMessage: 'Keep Growth plan',\r\n                  }\r\n                : {\r\n                    id: 'app.components.UpsellBanner.button',\r\n                    defaultMessage: 'Upgrade now',\r\n                  }\r\n            )}\r\n          </LinkButton>\r\n        </Box>\r\n      </Flex>\r\n    </BannerBackground>\r\n  );\r\n};\r\n\r\nconst UpsellBanner = () => {\r\n  const { license } = useLicenseLimits();\r\n\r\n  const [cachedTrialEndsAt, setCachedTrialEndsAt] = usePersistentState<string | undefined>(\r\n    'STRAPI_FREE_TRIAL_ENDS_AT',\r\n    undefined\r\n  );\r\n\r\n  const sevenDaysAgo = subDays(new Date(), 7);\r\n\r\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\r\n    skip: !license?.isTrial,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (timeLeftData.data?.trialEndsAt) {\r\n      setCachedTrialEndsAt(timeLeftData.data.trialEndsAt);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timeLeftData.data?.trialEndsAt]);\r\n\r\n  // When the license is not a trial + not EE, and the cached trial end date is found in the localstorage, that means the trial has ended\r\n  // We show the banner to encourage the user to upgrade (for 7 days after the trial ends)\r\n  const isTrialEndedRecently = Boolean(\r\n    !license?.isTrial &&\r\n      !window.strapi.isEE &&\r\n      cachedTrialEndsAt &&\r\n      isAfter(new Date(cachedTrialEndsAt), sevenDaysAgo)\r\n  );\r\n\r\n  if (timeLeftData.data?.trialEndsAt || isTrialEndedRecently) {\r\n    return <Banner isTrialEndedRecently={isTrialEndedRecently} />;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport { UpsellBanner };\r\n", "import * as React from 'react';\r\n\r\nimport { Cog, ShoppingCart, House } from '@strapi/icons';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport { useTypedSelector } from '../core/store/hooks';\r\nimport { useAuth, AuthContextValue } from '../features/Auth';\r\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * useMenu\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nexport type MenuItem = Omit<StrapiAppContextValue['menu'][number], 'Component'>;\r\n\r\nexport interface Menu {\r\n  generalSectionLinks: MenuItem[];\r\n  pluginsSectionLinks: MenuItem[];\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useMenu = (shouldUpdateStrapi: boolean) => {\r\n  const checkUserHasPermissions = useAuth('useMenu', (state) => state.checkUserHasPermissions);\r\n  const menu = useStrapiApp('useMenu', (state) => state.menu);\r\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\r\n  const [menuWithUserPermissions, setMenuWithUserPermissions] = React.useState<Menu>({\r\n    generalSectionLinks: [\r\n      {\r\n        icon: House,\r\n        intlLabel: {\r\n          id: 'global.home',\r\n          defaultMessage: 'Home',\r\n        },\r\n        to: '/',\r\n        permissions: [],\r\n        position: 0,\r\n      },\r\n      {\r\n        icon: ShoppingCart,\r\n        intlLabel: {\r\n          id: 'global.marketplace',\r\n          defaultMessage: 'Marketplace',\r\n        },\r\n        to: '/marketplace',\r\n        permissions: permissions.marketplace?.main ?? [],\r\n        position: 7,\r\n      },\r\n      {\r\n        icon: Cog,\r\n        intlLabel: {\r\n          id: 'global.settings',\r\n          defaultMessage: 'Settings',\r\n        },\r\n        to: '/settings',\r\n        // Permissions of this link are retrieved in the init phase\r\n        // using the settings menu\r\n        permissions: [],\r\n        notificationsCount: 0,\r\n        position: 9,\r\n      },\r\n    ],\r\n    pluginsSectionLinks: [],\r\n    isLoading: true,\r\n  });\r\n  const generalSectionLinksRef = React.useRef(menuWithUserPermissions.generalSectionLinks);\r\n\r\n  React.useEffect(() => {\r\n    async function applyMenuPermissions() {\r\n      const authorizedPluginSectionLinks = await getPluginSectionLinks(\r\n        menu,\r\n        checkUserHasPermissions\r\n      );\r\n\r\n      const authorizedGeneralSectionLinks = await getGeneralLinks(\r\n        generalSectionLinksRef.current,\r\n        shouldUpdateStrapi,\r\n        checkUserHasPermissions\r\n      );\r\n\r\n      setMenuWithUserPermissions((state) => ({\r\n        ...state,\r\n        generalSectionLinks: authorizedGeneralSectionLinks,\r\n        pluginsSectionLinks: authorizedPluginSectionLinks,\r\n        isLoading: false,\r\n      }));\r\n    }\r\n\r\n    applyMenuPermissions();\r\n  }, [\r\n    setMenuWithUserPermissions,\r\n    generalSectionLinksRef,\r\n    menu,\r\n    permissions,\r\n    shouldUpdateStrapi,\r\n    checkUserHasPermissions,\r\n  ]);\r\n\r\n  return menuWithUserPermissions;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Utils\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst getGeneralLinks = async (\r\n  generalSectionRawLinks: MenuItem[],\r\n  shouldUpdateStrapi: boolean = false,\r\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\r\n) => {\r\n  const generalSectionLinksPermissions = await Promise.all(\r\n    generalSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\r\n  );\r\n\r\n  const authorizedGeneralSectionLinks = generalSectionRawLinks.filter(\r\n    (_, index) => generalSectionLinksPermissions[index].length > 0\r\n  );\r\n\r\n  const settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(\r\n    (obj) => obj.to === '/settings'\r\n  );\r\n\r\n  if (settingsLinkIndex === -1) {\r\n    return [];\r\n  }\r\n\r\n  const authorizedGeneralLinksClone = cloneDeep(authorizedGeneralSectionLinks);\r\n\r\n  authorizedGeneralLinksClone[settingsLinkIndex].notificationsCount = shouldUpdateStrapi ? 1 : 0;\r\n\r\n  return authorizedGeneralLinksClone;\r\n};\r\n\r\nconst getPluginSectionLinks = async (\r\n  pluginsSectionRawLinks: MenuItem[],\r\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\r\n) => {\r\n  const pluginSectionLinksPermissions = await Promise.all(\r\n    pluginsSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\r\n  );\r\n\r\n  const authorizedPluginSectionLinks = pluginsSectionRawLinks.filter(\r\n    (_, index) => pluginSectionLinksPermissions[index].length > 0\r\n  );\r\n\r\n  return authorizedPluginSectionLinks;\r\n};\r\n\r\nexport { useMenu };\r\n"],
  "mappings": "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",
  "names": ["React", "get", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "TooltipImpl", "NavLink", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "NavLink", "React", "import_jsx_runtime", "import_jsx_runtime", "_a", "React", "cloneDeep", "import_jsx_runtime", "valid", "lt"]
}
