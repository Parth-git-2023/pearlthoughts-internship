{
  "version": 3,
  "sources": ["../../../../../packages/core/content-manager/admin/src/content-manager.ts", "../../../../../packages/core/content-manager/admin/src/history/components/HistoryAction.tsx", "../../../../../packages/core/content-manager/admin/src/history/index.ts", "../../../../../packages/core/content-manager/admin/src/modules/reducers.ts", "../../../../../packages/core/content-manager/admin/src/preview/components/PreviewSidePanel.tsx", "../../../../../packages/core/content-manager/admin/src/preview/index.ts", "../../../../../packages/core/content-manager/admin/src/index.ts"],
  "sourcesContent": ["/* eslint-disable check-file/filename-naming-convention */\r\nimport { INJECTION_ZONES } from './components/InjectionZone';\r\nimport { PLUGIN_ID } from './constants/plugin';\r\nimport {\r\n  DEFAULT_ACTIONS,\r\n  type DocumentActionPosition,\r\n  type DocumentActionDescription,\r\n} from './pages/EditView/components/DocumentActions';\r\nimport {\r\n  DEFAULT_HEADER_ACTIONS,\r\n  type HeaderActionDescription,\r\n} from './pages/EditView/components/Header';\r\nimport { ActionsPanel, type PanelDescription } from './pages/EditView/components/Panels';\r\nimport {\r\n  DEFAULT_BULK_ACTIONS,\r\n  type BulkActionDescription,\r\n} from './pages/ListView/components/BulkActions/Actions';\r\nimport { DEFAULT_TABLE_ROW_ACTIONS } from './pages/ListView/components/TableActions';\r\n\r\nimport type { Document } from './hooks/useDocument';\r\nimport type { DocumentMetadata } from '../../shared/contracts/collection-types';\r\nimport type { DescriptionComponent, PluginConfig } from '@strapi/admin/strapi-admin';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Configuration Types\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ntype DescriptionReducer<Config extends object> = (prev: Config[]) => Config[];\r\n\r\ninterface EditViewContext {\r\n  /**\r\n   * This will ONLY be null, if the content-type\r\n   * does not have draft & published enabled.\r\n   */\r\n  activeTab: 'draft' | 'published' | null;\r\n  /**\r\n   * Will be either 'single-types' | 'collection-types'\r\n   */\r\n  collectionType: string;\r\n  /**\r\n   * this will be undefined if someone is creating an entry.\r\n   */\r\n  document?: Document;\r\n  /**\r\n   * this will be undefined if someone is creating an entry.\r\n   */\r\n  documentId?: string;\r\n  /**\r\n   * this will be undefined if someone is creating an entry.\r\n   */\r\n  meta?: DocumentMetadata;\r\n  /**\r\n   * The current content-type's model.\r\n   */\r\n  model: string;\r\n}\r\n\r\ninterface ListViewContext {\r\n  /**\r\n   * Will be either 'single-types' | 'collection-types'\r\n   */\r\n  collectionType: string;\r\n  /**\r\n   * The current selected documents in the table\r\n   */\r\n  documents: Document[];\r\n  /**\r\n   * The current content-type's model.\r\n   */\r\n  model: string;\r\n}\r\n\r\ninterface PanelComponentProps extends EditViewContext {}\r\n\r\ninterface PanelComponent extends DescriptionComponent<PanelComponentProps, PanelDescription> {\r\n  /**\r\n   * The defaults are added by Strapi only, if you're providing your own component,\r\n   * you do not need to provide this.\r\n   */\r\n  type?: 'actions' | 'releases';\r\n}\r\n\r\ninterface DocumentActionProps extends EditViewContext {}\r\n\r\ninterface DocumentActionComponent\r\n  extends DescriptionComponent<DocumentActionProps, DocumentActionDescription> {\r\n  type?:\r\n    | 'clone'\r\n    | 'configure-the-view'\r\n    | 'delete'\r\n    | 'discard'\r\n    | 'edit'\r\n    | 'edit-the-model'\r\n    | 'history'\r\n    | 'publish'\r\n    | 'unpublish'\r\n    | 'update';\r\n  position?: DocumentActionDescription['position'];\r\n}\r\n\r\ninterface HeaderActionProps extends EditViewContext {}\r\n\r\ninterface HeaderActionComponent\r\n  extends DescriptionComponent<HeaderActionProps, HeaderActionDescription> {}\r\n\r\ninterface BulkActionComponentProps extends ListViewContext {}\r\n\r\ninterface BulkActionComponent\r\n  extends DescriptionComponent<BulkActionComponentProps, BulkActionDescription> {\r\n  type?: 'delete' | 'publish' | 'unpublish';\r\n}\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ContentManager plugin\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nclass ContentManagerPlugin {\r\n  /**\r\n   * The following properties are the stored ones provided by any plugins registering with\r\n   * the content-manager. The function calls however, need to be called at runtime in the\r\n   * application, so instead we collate them and run them later with the complete list incl.\r\n   * ones already registered & the context of the view.\r\n   */\r\n  bulkActions: BulkActionComponent[] = [...DEFAULT_BULK_ACTIONS];\r\n  documentActions: DocumentActionComponent[] = [\r\n    ...DEFAULT_ACTIONS,\r\n    ...DEFAULT_TABLE_ROW_ACTIONS,\r\n    ...DEFAULT_HEADER_ACTIONS,\r\n  ];\r\n  editViewSidePanels: PanelComponent[] = [ActionsPanel];\r\n  headerActions: HeaderActionComponent[] = [];\r\n\r\n  constructor() {}\r\n\r\n  addEditViewSidePanel(panels: DescriptionReducer<PanelComponent>): void;\r\n  addEditViewSidePanel(panels: PanelComponent[]): void;\r\n  addEditViewSidePanel(panels: DescriptionReducer<PanelComponent> | PanelComponent[]) {\r\n    if (Array.isArray(panels)) {\r\n      this.editViewSidePanels = [...this.editViewSidePanels, ...panels];\r\n    } else if (typeof panels === 'function') {\r\n      this.editViewSidePanels = panels(this.editViewSidePanels);\r\n    } else {\r\n      throw new Error(\r\n        `Expected the \\`panels\\` passed to \\`addEditViewSidePanel\\` to be an array or a function, but received ${getPrintableType(\r\n          panels\r\n        )}`\r\n      );\r\n    }\r\n  }\r\n\r\n  addDocumentAction(actions: DescriptionReducer<DocumentActionComponent>): void;\r\n  addDocumentAction(actions: DocumentActionComponent[]): void;\r\n  addDocumentAction(\r\n    actions: DescriptionReducer<DocumentActionComponent> | DocumentActionComponent[]\r\n  ) {\r\n    if (Array.isArray(actions)) {\r\n      this.documentActions = [...this.documentActions, ...actions];\r\n    } else if (typeof actions === 'function') {\r\n      this.documentActions = actions(this.documentActions);\r\n    } else {\r\n      throw new Error(\r\n        `Expected the \\`actions\\` passed to \\`addDocumentAction\\` to be an array or a function, but received ${getPrintableType(\r\n          actions\r\n        )}`\r\n      );\r\n    }\r\n  }\r\n\r\n  addDocumentHeaderAction(actions: DescriptionReducer<HeaderActionComponent>): void;\r\n  addDocumentHeaderAction(actions: HeaderActionComponent[]): void;\r\n  addDocumentHeaderAction(\r\n    actions: DescriptionReducer<HeaderActionComponent> | HeaderActionComponent[]\r\n  ) {\r\n    if (Array.isArray(actions)) {\r\n      this.headerActions = [...this.headerActions, ...actions];\r\n    } else if (typeof actions === 'function') {\r\n      this.headerActions = actions(this.headerActions);\r\n    } else {\r\n      throw new Error(\r\n        `Expected the \\`actions\\` passed to \\`addDocumentHeaderAction\\` to be an array or a function, but received ${getPrintableType(\r\n          actions\r\n        )}`\r\n      );\r\n    }\r\n  }\r\n\r\n  addBulkAction(actions: DescriptionReducer<BulkActionComponent>): void;\r\n  addBulkAction(actions: BulkActionComponent[]): void;\r\n  addBulkAction(actions: DescriptionReducer<BulkActionComponent> | BulkActionComponent[]) {\r\n    if (Array.isArray(actions)) {\r\n      this.bulkActions = [...this.bulkActions, ...actions];\r\n    } else if (typeof actions === 'function') {\r\n      this.bulkActions = actions(this.bulkActions);\r\n    } else {\r\n      throw new Error(\r\n        `Expected the \\`actions\\` passed to \\`addBulkAction\\` to be an array or a function, but received ${getPrintableType(\r\n          actions\r\n        )}`\r\n      );\r\n    }\r\n  }\r\n\r\n  get config() {\r\n    return {\r\n      id: PLUGIN_ID,\r\n      name: 'Content Manager',\r\n      injectionZones: INJECTION_ZONES,\r\n      apis: {\r\n        addBulkAction: this.addBulkAction.bind(this),\r\n        addDocumentAction: this.addDocumentAction.bind(this),\r\n        addDocumentHeaderAction: this.addDocumentHeaderAction.bind(this),\r\n        addEditViewSidePanel: this.addEditViewSidePanel.bind(this),\r\n        getBulkActions: () => this.bulkActions,\r\n        getDocumentActions: (position?: DocumentActionPosition) => {\r\n          /**\r\n           * When possible, pre-filter the actions by the components static position property.\r\n           * This avoids rendering the actions in multiple places where they weren't displayed,\r\n           * which wasn't visible but created issues with useEffect for instance.\r\n           * The response should still be filtered by the position, as the static property is new\r\n           * and not mandatory to avoid a breaking change.\r\n           */\r\n          if (position) {\r\n            return this.documentActions.filter((action) => {\r\n              return action.position == undefined || [action.position].flat().includes(position);\r\n            });\r\n          }\r\n\r\n          return this.documentActions;\r\n        },\r\n        getEditViewSidePanels: () => this.editViewSidePanels,\r\n        getHeaderActions: () => this.headerActions,\r\n      },\r\n    } satisfies PluginConfig;\r\n  }\r\n}\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * getPrintableType\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\n/**\r\n * @internal\r\n * @description Gets the human-friendly printable type name for the given value, for instance it will yield\r\n * `array` instead of `object`, as the native `typeof` operator would do.\r\n */\r\nconst getPrintableType = (value: unknown): string => {\r\n  const nativeType = typeof value;\r\n\r\n  if (nativeType === 'object') {\r\n    if (value === null) return 'null';\r\n    if (Array.isArray(value)) return 'array';\r\n    if (value instanceof Object && value.constructor.name !== 'Object') {\r\n      return value.constructor.name;\r\n    }\r\n  }\r\n\r\n  return nativeType;\r\n};\r\n\r\nexport { ContentManagerPlugin };\r\nexport type {\r\n  EditViewContext,\r\n  ListViewContext,\r\n  BulkActionComponent,\r\n  BulkActionComponentProps,\r\n  BulkActionDescription,\r\n  DescriptionComponent,\r\n  DescriptionReducer,\r\n  PanelComponentProps,\r\n  PanelComponent,\r\n  PanelDescription,\r\n  DocumentActionComponent,\r\n  DocumentActionDescription,\r\n  DocumentActionProps,\r\n  HeaderActionComponent,\r\n  HeaderActionDescription,\r\n  HeaderActionProps,\r\n};\r\n", "import { useQueryParams, useTracking } from '@strapi/admin/strapi-admin';\r\nimport { ClockCounterClockwise } from '@strapi/icons';\r\nimport { stringify } from 'qs';\r\nimport { useIntl } from 'react-intl';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport type { DocumentActionComponent } from '../../content-manager';\r\n\r\nconst HistoryAction: DocumentActionComponent = ({ model, document }) => {\r\n  const { formatMessage } = useIntl();\r\n  const [{ query }] = useQueryParams<{ plugins?: Record<string, unknown> }>();\r\n  const navigate = useNavigate();\r\n  const { trackUsage } = useTracking();\r\n  const { pathname } = useLocation();\r\n  const pluginsQueryParams = stringify({ plugins: query.plugins }, { encode: false });\r\n\r\n  if (!window.strapi.features.isEnabled('cms-content-history')) {\r\n    return null;\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    const destination = { pathname: 'history', search: pluginsQueryParams };\r\n    trackUsage('willNavigate', {\r\n      from: pathname,\r\n      to: `${pathname}/${destination.pathname}`,\r\n    });\r\n    navigate(destination);\r\n  };\r\n\r\n  return {\r\n    icon: <ClockCounterClockwise />,\r\n    label: formatMessage({\r\n      id: 'content-manager.history.document-action',\r\n      defaultMessage: 'Content History',\r\n    }),\r\n    onClick: handleOnClick,\r\n    disabled:\r\n      /**\r\n       * The user is creating a new document.\r\n       * It hasn't been saved yet, so there's no history to go to\r\n       */\r\n      !document ||\r\n      /**\r\n       * The document has been created but the current dimension has never been saved.\r\n       * For example, the user is creating a new locale in an existing document,\r\n       * so there's no history for the document in that locale\r\n       */\r\n      !document.id ||\r\n      /**\r\n       * History is only available for content types created by the user.\r\n       * These have the `api::` prefix, as opposed to the ones created by Strapi or plugins,\r\n       * which start with `admin::` or `plugin::`\r\n       */\r\n      !model.startsWith('api::'),\r\n    position: 'header',\r\n  };\r\n};\r\n\r\nHistoryAction.type = 'history';\r\nHistoryAction.position = 'header';\r\n\r\nexport { HistoryAction };\r\n", "/* eslint-disable check-file/no-index */\r\n\r\nimport { type ContentManagerPlugin } from '../content-manager';\r\n\r\nimport { HistoryAction } from './components/HistoryAction';\r\n\r\nimport type { StrapiApp } from '@strapi/admin/strapi-admin';\r\nimport type { Plugin } from '@strapi/types';\r\n\r\nconst historyAdmin: Partial<Plugin.Config.AdminInput> = {\r\n  bootstrap(app: StrapiApp) {\r\n    const { addDocumentAction } = app.getPlugin('content-manager').apis as {\r\n      addDocumentAction: ContentManagerPlugin['addDocumentAction'];\r\n    };\r\n\r\n    /**\r\n     * Register the document action here using the public API, and not by setting the action in the\r\n     * Content Manager directly, because this API lets us control the order of the actions array.\r\n     * We want history to be the last non-delete action in the array.\r\n     */\r\n    addDocumentAction((actions) => {\r\n      const indexOfDeleteAction = actions.findIndex((action) => action.type === 'delete');\r\n      actions.splice(indexOfDeleteAction, 0, HistoryAction);\r\n      return actions;\r\n    });\r\n  },\r\n};\r\n\r\nexport { historyAdmin };\r\n", "import { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport { reducer as appReducer } from './app';\r\n\r\nconst reducer = combineReducers({\r\n  app: appReducer,\r\n});\r\n\r\ntype State = ReturnType<typeof reducer>;\r\n\r\nexport { reducer };\r\nexport type { State };\r\n", "import * as React from 'react';\r\n\r\nimport { useQueryParams, useTracking, useForm } from '@strapi/admin/strapi-admin';\r\nimport { Box, Button, Tooltip, type TooltipProps } from '@strapi/design-system';\r\nimport { stringify } from 'qs';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport { useGetPreviewUrlQuery } from '../services/preview';\r\n\r\nimport type { PanelComponent } from '@strapi/content-manager/strapi-admin';\r\nimport type { UID } from '@strapi/types';\r\n\r\ninterface ConditionalTooltipProps {\r\n  isShown: boolean;\r\n  label: TooltipProps['label'];\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ConditionalTooltip = ({ isShown, label, children }: ConditionalTooltipProps) => {\r\n  if (isShown) {\r\n    return <Tooltip label={label}>{children}</Tooltip>;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nconst PreviewSidePanel: PanelComponent = ({ model, documentId, document }) => {\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n  const { pathname } = useLocation();\r\n  const [{ query }] = useQueryParams();\r\n  const isModified = useForm('PreviewSidePanel', (state) => state.modified);\r\n\r\n  /**\r\n   * The preview URL isn't used in this component, we just fetch it to know if preview is enabled\r\n   * for the content type. If it's not, the panel is not displayed. If it is, we display a link to\r\n   * /preview, and the URL will already be loaded in the RTK query cache.\r\n   */\r\n  const { data, error } = useGetPreviewUrlQuery({\r\n    params: {\r\n      contentType: model as UID.ContentType,\r\n    },\r\n    query: {\r\n      documentId,\r\n      locale: document?.locale,\r\n      status: document?.status,\r\n    },\r\n  });\r\n\r\n  if (!data?.data?.url || error) {\r\n    return null;\r\n  }\r\n\r\n  const trackNavigation = () => {\r\n    // Append /preview to the current URL\r\n    const destinationPathname = pathname.replace(/\\/$/, '') + '/preview';\r\n    trackUsage('willNavigate', { from: pathname, to: destinationPathname });\r\n  };\r\n\r\n  return {\r\n    title: formatMessage({ id: 'content-manager.preview.panel.title', defaultMessage: 'Preview' }),\r\n    content: (\r\n      <ConditionalTooltip\r\n        label={formatMessage({\r\n          id: 'content-manager.preview.panel.button-disabled-tooltip',\r\n          defaultMessage: 'Please save to open the preview',\r\n        })}\r\n        isShown={isModified}\r\n      >\r\n        <Box cursor=\"not-allowed\" width=\"100%\">\r\n          <Button\r\n            variant=\"tertiary\"\r\n            tag={Link}\r\n            to={{ pathname: 'preview', search: stringify(query, { encode: false }) }}\r\n            onClick={trackNavigation}\r\n            width=\"100%\"\r\n            disabled={isModified}\r\n            pointerEvents={isModified ? 'none' : undefined}\r\n            tabIndex={isModified ? -1 : undefined}\r\n          >\r\n            {formatMessage({\r\n              id: 'content-manager.preview.panel.button',\r\n              defaultMessage: 'Open preview',\r\n            })}\r\n          </Button>\r\n        </Box>\r\n      </ConditionalTooltip>\r\n    ),\r\n  };\r\n};\r\n\r\nexport { PreviewSidePanel };\r\n", "/* eslint-disable check-file/no-index */\r\n\r\nimport { PreviewSidePanel } from './components/PreviewSidePanel';\r\n\r\nimport type { ContentManagerPlugin } from '../content-manager';\r\nimport type { PluginDefinition } from '@strapi/admin/strapi-admin';\r\n\r\nconst previewAdmin: Partial<PluginDefinition> = {\r\n  bootstrap(app) {\r\n    const contentManagerPluginApis = app.getPlugin('content-manager')\r\n      .apis as ContentManagerPlugin['config']['apis'];\r\n\r\n    contentManagerPluginApis.addEditViewSidePanel([PreviewSidePanel]);\r\n  },\r\n};\r\n\r\nexport { previewAdmin };\r\n", "import { CheckCircle, Feather, Pencil, PuzzlePiece } from '@strapi/icons';\r\n\r\nimport { PLUGIN_ID } from './constants/plugin';\r\nimport { ContentManagerPlugin } from './content-manager';\r\nimport { historyAdmin } from './history';\r\nimport { reducer } from './modules/reducers';\r\nimport { previewAdmin } from './preview';\r\nimport { routes } from './router';\r\nimport { prefixPluginTranslations } from './utils/translations';\r\n\r\n// NOTE: we have to preload it to ensure chunks will have it available as global\r\nimport 'prismjs';\r\n\r\n// eslint-disable-next-line import/no-default-export\r\nexport default {\r\n  register(app: any) {\r\n    const cm = new ContentManagerPlugin();\r\n\r\n    app.addReducers({\r\n      [PLUGIN_ID]: reducer,\r\n    });\r\n\r\n    app.addMenuLink({\r\n      to: PLUGIN_ID,\r\n      icon: Feather,\r\n      intlLabel: {\r\n        id: `content-manager.plugin.name`,\r\n        defaultMessage: 'Content Manager',\r\n      },\r\n      permissions: [],\r\n      position: 1,\r\n    });\r\n\r\n    app.router.addRoute({\r\n      path: 'content-manager/*',\r\n      lazy: async () => {\r\n        const { Layout } = await import('./layout');\r\n\r\n        return {\r\n          Component: Layout,\r\n        };\r\n      },\r\n      children: routes,\r\n    });\r\n\r\n    app.registerPlugin(cm.config);\r\n\r\n    // Register homepage widgets\r\n    app.widgets.register([\r\n      {\r\n        icon: PuzzlePiece,\r\n        title: {\r\n          id: `${PLUGIN_ID}.widget.chart-entries.title`,\r\n          defaultMessage: 'Entries',\r\n        },\r\n        component: async () => {\r\n          const { ChartEntriesWidget } = await import('./components/Widgets');\r\n          return ChartEntriesWidget;\r\n        },\r\n        pluginId: PLUGIN_ID,\r\n        id: 'chart-entries',\r\n        permissions: [{ action: 'plugin::content-manager.explorer.read' }],\r\n      },\r\n      {\r\n        icon: Pencil,\r\n        title: {\r\n          id: `${PLUGIN_ID}.widget.last-edited.title`,\r\n          defaultMessage: 'Last edited entries',\r\n        },\r\n        component: async () => {\r\n          const { LastEditedWidget } = await import('./components/Widgets');\r\n          return LastEditedWidget;\r\n        },\r\n        pluginId: PLUGIN_ID,\r\n        id: 'last-edited-entries',\r\n        permissions: [{ action: 'plugin::content-manager.explorer.read' }],\r\n      },\r\n      {\r\n        icon: CheckCircle,\r\n        title: {\r\n          id: `${PLUGIN_ID}.widget.last-published.title`,\r\n          defaultMessage: 'Last published entries',\r\n        },\r\n        component: async () => {\r\n          const { LastPublishedWidget } = await import('./components/Widgets');\r\n          return LastPublishedWidget;\r\n        },\r\n        pluginId: PLUGIN_ID,\r\n        id: 'last-published-entries',\r\n        permissions: [{ action: 'plugin::content-manager.explorer.read' }],\r\n      },\r\n    ]);\r\n  },\r\n  bootstrap(app: any) {\r\n    if (typeof historyAdmin.bootstrap === 'function') {\r\n      historyAdmin.bootstrap(app);\r\n    }\r\n    if (typeof previewAdmin.bootstrap === 'function') {\r\n      previewAdmin.bootstrap(app);\r\n    }\r\n  },\r\n  async registerTrads({ locales }: { locales: string[] }) {\r\n    const importedTrads = await Promise.all(\r\n      locales.map((locale) => {\r\n        return import(`./translations/${locale}.json`)\r\n          .then(({ default: data }) => {\r\n            return {\r\n              data: prefixPluginTranslations(data, PLUGIN_ID),\r\n              locale,\r\n            };\r\n          })\r\n          .catch(() => {\r\n            return {\r\n              data: {},\r\n              locale,\r\n            };\r\n          });\r\n      })\r\n    );\r\n\r\n    return Promise.resolve(importedTrads);\r\n  },\r\n};\r\n\r\nexport * from './exports';\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,IAAM,uBAAN,MAA2B;AAAA,EAgBzB,cAAc;AATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAqC,CAAC,GAAG,oBAAoB;AAC7D,2CAA6C;AAAA,MAC3C,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AACA,8CAAuC,CAAC,YAAY;AACpD,yCAAyC,CAAC;AAAA,EAE3B;AAAA,EAIf,qBAAqB,QAA+D;AAClF,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,WAAK,qBAAqB,CAAC,GAAG,KAAK,oBAAoB,GAAG,MAAM;AAAA,IAClE,WAAW,OAAO,WAAW,YAAY;AACvC,WAAK,qBAAqB,OAAO,KAAK,kBAAkB;AAAA,IAC1D,OAAO;AACL,YAAM,IAAI;AAAA,QACR,yGAAyG;AAAA,UACvG;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAIA,kBACE,SACA;AACA,QAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,WAAK,kBAAkB,CAAC,GAAG,KAAK,iBAAiB,GAAG,OAAO;AAAA,IAC7D,WAAW,OAAO,YAAY,YAAY;AACxC,WAAK,kBAAkB,QAAQ,KAAK,eAAe;AAAA,IACrD,OAAO;AACL,YAAM,IAAI;AAAA,QACR,uGAAuG;AAAA,UACrG;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAIA,wBACE,SACA;AACA,QAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,WAAK,gBAAgB,CAAC,GAAG,KAAK,eAAe,GAAG,OAAO;AAAA,IACzD,WAAW,OAAO,YAAY,YAAY;AACxC,WAAK,gBAAgB,QAAQ,KAAK,aAAa;AAAA,IACjD,OAAO;AACL,YAAM,IAAI;AAAA,QACR,6GAA6G;AAAA,UAC3G;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAIA,cAAc,SAA0E;AACtF,QAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,WAAK,cAAc,CAAC,GAAG,KAAK,aAAa,GAAG,OAAO;AAAA,IACrD,WAAW,OAAO,YAAY,YAAY;AACxC,WAAK,cAAc,QAAQ,KAAK,WAAW;AAAA,IAC7C,OAAO;AACL,YAAM,IAAI;AAAA,QACR,mGAAmG;AAAA,UACjG;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,SAAS;AACX,WAAO;AAAA,MACL,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,gBAAgB;AAAA,MAChB,MAAM;AAAA,QACJ,eAAe,KAAK,cAAc,KAAK,IAAI;AAAA,QAC3C,mBAAmB,KAAK,kBAAkB,KAAK,IAAI;AAAA,QACnD,yBAAyB,KAAK,wBAAwB,KAAK,IAAI;AAAA,QAC/D,sBAAsB,KAAK,qBAAqB,KAAK,IAAI;AAAA,QACzD,gBAAgB,MAAM,KAAK;AAAA,QAC3B,oBAAoB,CAAC,aAAsC;AAQzD,cAAI,UAAU;AACZ,mBAAO,KAAK,gBAAgB,OAAO,CAAC,WAAW;AAC7C,qBAAO,OAAO,YAAY,UAAa,CAAC,OAAO,QAAQ,EAAE,KAAK,EAAE,SAAS,QAAQ;AAAA,YACnF,CAAC;AAAA,UACH;AAEA,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,uBAAuB,MAAM,KAAK;AAAA,QAClC,kBAAkB,MAAM,KAAK;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AACF;AAWA,IAAM,mBAAmB,CAAC,UAA2B;AACnD,QAAM,aAAa,OAAO;AAE1B,MAAI,eAAe,UAAU;AAC3B,QAAI,UAAU,KAAM,QAAO;AAC3B,QAAI,MAAM,QAAQ,KAAK,EAAG,QAAO;AACjC,QAAI,iBAAiB,UAAU,MAAM,YAAY,SAAS,UAAU;AAClE,aAAO,MAAM,YAAY;AAAA,IAC3B;AAAA,EACF;AAEA,SAAO;AACT;;;AC/PA,gBAA0B;AA4BhB;AAtBV,IAAM,gBAAyC,CAAC,EAAE,OAAO,SAAS,MAAM;AACtE,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,CAAC,EAAE,MAAM,CAAC,IAAI,eAAsD;AAC1E,QAAM,WAAW,YAAY;AAC7B,QAAM,EAAE,WAAW,IAAI,YAAY;AACnC,QAAM,EAAE,SAAS,IAAI,YAAY;AACjC,QAAM,yBAAqB,qBAAU,EAAE,SAAS,MAAM,QAAQ,GAAG,EAAE,QAAQ,MAAM,CAAC;AAElF,MAAI,CAAC,OAAO,OAAO,SAAS,UAAU,qBAAqB,GAAG;AAC5D,WAAO;AAAA,EACT;AAEA,QAAM,gBAAgB,MAAM;AAC1B,UAAM,cAAc,EAAE,UAAU,WAAW,QAAQ,mBAAmB;AACtE,eAAW,gBAAgB;AAAA,MACzB,MAAM;AAAA,MACN,IAAI,GAAG,QAAQ,IAAI,YAAY,QAAQ;AAAA,IACzC,CAAC;AACD,aAAS,WAAW;AAAA,EACtB;AAEA,SAAO;AAAA,IACL,UAAM,wBAAC,iBAAsB;AAAA,IAC7B,OAAO,cAAc;AAAA,MACnB,IAAI;AAAA,MACJ,gBAAgB;AAAA,IAClB,CAAC;AAAA,IACD,SAAS;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMD,CAAC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAMV,CAAC,MAAM,WAAW,OAAO;AAAA;AAAA,IAC3B,UAAU;AAAA,EACZ;AACF;AAEA,cAAc,OAAO;AACrB,cAAc,WAAW;;;AClDzB,IAAM,eAAkD;AAAA,EACtD,UAAU,KAAgB;AACxB,UAAM,EAAE,kBAAkB,IAAI,IAAI,UAAU,iBAAiB,EAAE;AAS/D,sBAAkB,CAAC,YAAY;AAC7B,YAAM,sBAAsB,QAAQ,UAAU,CAAC,WAAW,OAAO,SAAS,QAAQ;AAClF,cAAQ,OAAO,qBAAqB,GAAG,aAAa;AACpD,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACF;;;ACtBA,IAAMA,WAAU,gBAAgB;AAAA,EAC9B,KAAK;AACP,CAAC;;;ACFD,IAAAC,aAA0B;AAiBf,IAAAC,sBAAA;AAFX,IAAM,qBAAqB,CAAC,EAAE,SAAS,OAAO,SAAS,MAA+B;AACpF,MAAI,SAAS;AACX,eAAO,yBAAC,eAAQ,OAAe,UAAS;AAAA,EAC1C;AAEA,SAAO;AACT;AAEA,IAAM,mBAAmC,CAAC,EAAE,OAAO,YAAY,SAAS,MAAM;AA3B9E;AA4BE,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,WAAW,IAAI,YAAY;AACnC,QAAM,EAAE,SAAS,IAAI,YAAY;AACjC,QAAM,CAAC,EAAE,MAAM,CAAC,IAAI,eAAe;AACnC,QAAM,aAAa,QAAQ,oBAAoB,CAAC,UAAU,MAAM,QAAQ;AAOxE,QAAM,EAAE,MAAM,MAAM,IAAI,sBAAsB;AAAA,IAC5C,QAAQ;AAAA,MACN,aAAa;AAAA,IACf;AAAA,IACA,OAAO;AAAA,MACL;AAAA,MACA,QAAQ,qCAAU;AAAA,MAClB,QAAQ,qCAAU;AAAA,IACpB;AAAA,EACF,CAAC;AAED,MAAI,GAAC,kCAAM,SAAN,mBAAY,QAAO,OAAO;AAC7B,WAAO;AAAA,EACT;AAEA,QAAM,kBAAkB,MAAM;AAE5B,UAAM,sBAAsB,SAAS,QAAQ,OAAO,EAAE,IAAI;AAC1D,eAAW,gBAAgB,EAAE,MAAM,UAAU,IAAI,oBAAoB,CAAC;AAAA,EACxE;AAEA,SAAO;AAAA,IACL,OAAO,cAAc,EAAE,IAAI,uCAAuC,gBAAgB,UAAU,CAAC;AAAA,IAC7F,aACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,cAAc;AAAA,UACnB,IAAI;AAAA,UACJ,gBAAgB;AAAA,QAClB,CAAC;AAAA,QACD,SAAS;AAAA,QAET,uCAAC,OAAI,QAAO,eAAc,OAAM,QAC9B;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,KAAK;AAAA,YACL,IAAI,EAAE,UAAU,WAAW,YAAQ,sBAAU,OAAO,EAAE,QAAQ,MAAM,CAAC,EAAE;AAAA,YACvE,SAAS;AAAA,YACT,OAAM;AAAA,YACN,UAAU;AAAA,YACV,eAAe,aAAa,SAAS;AAAA,YACrC,UAAU,aAAa,KAAK;AAAA,YAE3B,wBAAc;AAAA,cACb,IAAI;AAAA,cACJ,gBAAgB;AAAA,YAClB,CAAC;AAAA;AAAA,QACH,GACF;AAAA;AAAA,IACF;AAAA,EAEJ;AACF;;;ACnFA,IAAM,eAA0C;AAAA,EAC9C,UAAU,KAAK;AACb,UAAM,2BAA2B,IAAI,UAAU,iBAAiB,EAC7D;AAEH,6BAAyB,qBAAqB,CAAC,gBAAgB,CAAC;AAAA,EAClE;AACF;;;ACHA,qBAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGP,IAAO,cAAQ;AAAA,EACb,SAAS,KAAU;AACjB,UAAM,KAAK,IAAI,qBAAqB;AAEpC,QAAI,YAAY;AAAA,MACd,CAAC,SAAS,GAAGC;AAAA,IACf,CAAC;AAED,QAAI,YAAY;AAAA,MACd,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,WAAW;AAAA,QACT,IAAI;AAAA,QACJ,gBAAgB;AAAA,MAClB;AAAA,MACA,aAAa,CAAC;AAAA,MACd,UAAU;AAAA,IACZ,CAAC;AAED,QAAI,OAAO,SAAS;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,YAAY;AAChB,cAAM,EAAE,OAAO,IAAI,MAAM,OAAO,sBAAU;AAE1C,eAAO;AAAA,UACL,WAAW;AAAA,QACb;AAAA,MACF;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAED,QAAI,eAAe,GAAG,MAAM;AAG5B,QAAI,QAAQ,SAAS;AAAA,MACnB;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,UACL,IAAI,GAAG,SAAS;AAAA,UAChB,gBAAgB;AAAA,QAClB;AAAA,QACA,WAAW,YAAY;AACrB,gBAAM,EAAE,mBAAmB,IAAI,MAAM,OAAO,uBAAsB;AAClE,iBAAO;AAAA,QACT;AAAA,QACA,UAAU;AAAA,QACV,IAAI;AAAA,QACJ,aAAa,CAAC,EAAE,QAAQ,wCAAwC,CAAC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,UACL,IAAI,GAAG,SAAS;AAAA,UAChB,gBAAgB;AAAA,QAClB;AAAA,QACA,WAAW,YAAY;AACrB,gBAAM,EAAE,iBAAiB,IAAI,MAAM,OAAO,uBAAsB;AAChE,iBAAO;AAAA,QACT;AAAA,QACA,UAAU;AAAA,QACV,IAAI;AAAA,QACJ,aAAa,CAAC,EAAE,QAAQ,wCAAwC,CAAC;AAAA,MACnE;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,UACL,IAAI,GAAG,SAAS;AAAA,UAChB,gBAAgB;AAAA,QAClB;AAAA,QACA,WAAW,YAAY;AACrB,gBAAM,EAAE,oBAAoB,IAAI,MAAM,OAAO,uBAAsB;AACnE,iBAAO;AAAA,QACT;AAAA,QACA,UAAU;AAAA,QACV,IAAI;AAAA,QACJ,aAAa,CAAC,EAAE,QAAQ,wCAAwC,CAAC;AAAA,MACnE;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,UAAU,KAAU;AAClB,QAAI,OAAO,aAAa,cAAc,YAAY;AAChD,mBAAa,UAAU,GAAG;AAAA,IAC5B;AACA,QAAI,OAAO,aAAa,cAAc,YAAY;AAChD,mBAAa,UAAU,GAAG;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,MAAM,cAAc,EAAE,QAAQ,GAA0B;AACtD,UAAM,gBAAgB,MAAM,QAAQ;AAAA,MAClC,QAAQ,IAAI,CAAC,WAAW;AACtB,eAAc,+CAAkB,MAAM,SACnC,KAAK,CAAC,EAAE,SAAS,KAAK,MAAM;AAC3B,iBAAO;AAAA,YACL,MAAM,yBAAyB,MAAM,SAAS;AAAA,YAC9C;AAAA,UACF;AAAA,QACF,CAAC,EACA,MAAM,MAAM;AACX,iBAAO;AAAA,YACL,MAAM,CAAC;AAAA,YACP;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACL,CAAC;AAAA,IACH;AAEA,WAAO,QAAQ,QAAQ,aAAa;AAAA,EACtC;AACF;",
  "names": ["reducer", "import_qs", "import_jsx_runtime", "reducer"]
}
