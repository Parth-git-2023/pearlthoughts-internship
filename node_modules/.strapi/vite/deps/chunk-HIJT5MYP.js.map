{
  "version": 3,
  "sources": ["../../../../../packages/core/review-workflows/admin/src/constants.ts", "../../../../../packages/core/review-workflows/admin/src/services/api.ts", "../../../../../packages/core/review-workflows/admin/src/services/content-manager.ts"],
  "sourcesContent": ["import { lightTheme } from '@strapi/design-system';\r\n\r\nconst PLUGIN_ID = 'review-workflows';\r\n/**\r\n * The name of the feature in the license.\r\n */\r\nconst FEATURE_ID = 'review-workflows';\r\n\r\nexport const CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME = 'numberOfWorkflows';\r\nexport const CHARGEBEE_STAGES_PER_WORKFLOW_ENTITLEMENT_NAME = 'stagesPerWorkflow';\r\n\r\nexport const STAGE_COLOR_DEFAULT = lightTheme.colors.primary600;\r\n\r\nexport { FEATURE_ID, PLUGIN_ID };\r\n", "import { adminApi } from '@strapi/admin/strapi-admin';\r\n\r\nconst reviewWorkflowsApi = adminApi.enhanceEndpoints({\r\n  addTagTypes: ['ReviewWorkflow', 'ReviewWorkflowStages', 'Document', 'ContentTypeSettings'],\r\n});\r\n\r\nexport { reviewWorkflowsApi };\r\n", "import * as Homepage from '../../../shared/contracts/homepage';\r\n\r\n/* eslint-disable check-file/filename-naming-convention */\r\nimport { reviewWorkflowsApi } from './api';\r\n\r\nimport type {\r\n  GetStages,\r\n  UpdateStage,\r\n  UpdateAssignee,\r\n} from '../../../shared/contracts/review-workflows';\r\nimport type { Contracts } from '@strapi/content-manager/_internal/shared';\r\n\r\ntype ContentType = Contracts.ContentTypes.ContentType;\r\ninterface ContentTypes {\r\n  collectionType: ContentType[];\r\n  singleType: ContentType[];\r\n}\r\n\r\nconst SINGLE_TYPES = 'single-types';\r\n\r\nconst contentManagerApi = reviewWorkflowsApi\r\n  .enhanceEndpoints({\r\n    addTagTypes: ['RecentlyAssignedList', 'RecentDocumentList'],\r\n  })\r\n  .injectEndpoints({\r\n    endpoints: (builder) => ({\r\n      getStages: builder.query<\r\n        {\r\n          stages: NonNullable<GetStages.Response['data']>;\r\n          meta: NonNullable<GetStages.Response['meta']>;\r\n        },\r\n        GetStages.Params & { slug: string; params?: object }\r\n      >({\r\n        query: ({ model, slug, id, params }) => ({\r\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stages`,\r\n          method: 'GET',\r\n          config: {\r\n            params,\r\n          },\r\n        }),\r\n        transformResponse: (res: GetStages.Response) => {\r\n          return {\r\n            meta: res.meta ?? { workflowCount: 0 },\r\n            stages: res.data ?? [],\r\n          };\r\n        },\r\n        providesTags: ['ReviewWorkflowStages'],\r\n      }),\r\n      updateStage: builder.mutation<\r\n        UpdateStage.Response['data'],\r\n        UpdateStage.Request['body'] & UpdateStage.Params & { slug: string; params?: object }\r\n      >({\r\n        query: ({ model, slug, id, params, ...data }) => ({\r\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stage`,\r\n          method: 'PUT',\r\n          data,\r\n          config: {\r\n            params,\r\n          },\r\n        }),\r\n        transformResponse: (res: UpdateStage.Response) => res.data,\r\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\r\n          return [\r\n            {\r\n              type: 'Document',\r\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\r\n            },\r\n            { type: 'Document', id: `${model}_LIST` },\r\n            'ReviewWorkflowStages',\r\n          ];\r\n        },\r\n      }),\r\n      updateAssignee: builder.mutation<\r\n        UpdateAssignee.Response['data'],\r\n        UpdateAssignee.Request['body'] & UpdateAssignee.Params & { slug: string; params?: object }\r\n      >({\r\n        query: ({ model, slug, id, params, ...data }) => ({\r\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/assignee`,\r\n          method: 'PUT',\r\n          data,\r\n          config: {\r\n            params,\r\n          },\r\n        }),\r\n        transformResponse: (res: UpdateAssignee.Response) => res.data,\r\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\r\n          return [\r\n            {\r\n              type: 'Document',\r\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\r\n            },\r\n            { type: 'Document', id: `${model}_LIST` },\r\n            'RecentlyAssignedList',\r\n          ];\r\n        },\r\n      }),\r\n      getContentTypes: builder.query<ContentTypes, void>({\r\n        query: () => ({\r\n          url: `/content-manager/content-types`,\r\n          method: 'GET',\r\n        }),\r\n        transformResponse: (res: { data: Contracts.ContentTypes.ContentType[] }) => {\r\n          return res.data.reduce<ContentTypes>(\r\n            (acc, curr) => {\r\n              if (curr.isDisplayed) {\r\n                acc[curr.kind].push(curr);\r\n              }\r\n              return acc;\r\n            },\r\n            {\r\n              collectionType: [],\r\n              singleType: [],\r\n            }\r\n          );\r\n        },\r\n      }),\r\n      getRecentlyAssignedDocuments: builder.query<\r\n        Homepage.GetRecentlyAssignedDocuments.Response['data'],\r\n        void\r\n      >({\r\n        query: () => '/review-workflows/homepage/recently-assigned-documents',\r\n        transformResponse: (response: Homepage.GetRecentlyAssignedDocuments.Response) =>\r\n          response.data,\r\n        providesTags: (_, _err) => ['RecentlyAssignedList', 'RecentDocumentList'],\r\n      }),\r\n    }),\r\n    overrideExisting: true,\r\n  });\r\n\r\nconst {\r\n  useGetStagesQuery,\r\n  useUpdateStageMutation,\r\n  useUpdateAssigneeMutation,\r\n  useGetContentTypesQuery,\r\n  useGetRecentlyAssignedDocumentsQuery,\r\n} = contentManagerApi;\r\n\r\nexport {\r\n  useGetStagesQuery,\r\n  useUpdateStageMutation,\r\n  useUpdateAssigneeMutation,\r\n  useGetContentTypesQuery,\r\n  useGetRecentlyAssignedDocumentsQuery,\r\n};\r\nexport type { ContentTypes, ContentType };\r\n"],
  "mappings": "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",
  "names": []
}
