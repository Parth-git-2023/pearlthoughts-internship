{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/pages/Settings/pages/InstalledPlugins.tsx"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport { Table, Tbody, Td, Th, Thead, Tr, Typography, useNotifyAT } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { Layouts } from '../../../components/Layouts/Layout';\r\nimport { Page } from '../../../components/PageHelpers';\r\nimport { useTypedSelector } from '../../../core/store/hooks';\r\nimport { useNotification } from '../../../features/Notifications';\r\nimport { useAPIErrorHandler } from '../../../hooks/useAPIErrorHandler';\r\nimport { useGetPluginsQuery } from '../../../services/admin';\r\n\r\nconst InstalledPlugins = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { notifyStatus } = useNotifyAT();\r\n  const { toggleNotification } = useNotification();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n\r\n  const { isLoading, data, error } = useGetPluginsQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      notifyStatus(\r\n        formatMessage(\r\n          {\r\n            id: 'app.utils.notify.data-loaded',\r\n            defaultMessage: 'The {target} has loaded',\r\n          },\r\n          {\r\n            target: formatMessage({\r\n              id: 'global.plugins',\r\n              defaultMessage: 'Plugins',\r\n            }),\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [data, error, formatAPIError, formatMessage, notifyStatus, toggleNotification]);\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Page.Main>\r\n        <Layouts.Header\r\n          title={formatMessage({\r\n            id: 'global.plugins',\r\n            defaultMessage: 'Plugins',\r\n          })}\r\n          subtitle={formatMessage({\r\n            id: 'app.components.ListPluginsPage.description',\r\n            defaultMessage: 'List of the installed plugins in the project.',\r\n          })}\r\n        />\r\n        <Layouts.Content>\r\n          <Table colCount={2} rowCount={data?.plugins?.length ?? 0 + 1}>\r\n            <Thead>\r\n              <Tr>\r\n                <Th>\r\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                    {formatMessage({\r\n                      id: 'global.name',\r\n                      defaultMessage: 'Name',\r\n                    })}\r\n                  </Typography>\r\n                </Th>\r\n                <Th>\r\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                    {formatMessage({\r\n                      id: 'global.description',\r\n                      defaultMessage: 'description',\r\n                    })}\r\n                  </Typography>\r\n                </Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {data?.plugins.map(({ name, displayName, description }) => {\r\n                return (\r\n                  <Tr key={name}>\r\n                    <Td>\r\n                      <Typography textColor=\"neutral800\" variant=\"omega\" fontWeight=\"bold\">\r\n                        {formatMessage({\r\n                          id: `global.plugins.${name}`,\r\n                          defaultMessage: displayName,\r\n                        })}\r\n                      </Typography>\r\n                    </Td>\r\n                    <Td>\r\n                      <Typography textColor=\"neutral800\">\r\n                        {formatMessage({\r\n                          id: `global.plugins.${name}.description`,\r\n                          defaultMessage: description,\r\n                        })}\r\n                      </Typography>\r\n                    </Td>\r\n                  </Tr>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Layouts.Content>\r\n      </Page.Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nconst ProtectedInstalledPlugins = () => {\r\n  const { formatMessage } = useIntl();\r\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions.marketplace?.main}>\r\n      <Page.Title>\r\n        {formatMessage({\r\n          id: 'global.plugins',\r\n          defaultMessage: 'Plugins',\r\n        })}\r\n      </Page.Title>\r\n      <InstalledPlugins />\r\n    </Page.Protect>\r\n  );\r\n};\r\n\r\nexport { ProtectedInstalledPlugins, InstalledPlugins };\r\n"],
  "mappings": "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",
  "names": []
}
