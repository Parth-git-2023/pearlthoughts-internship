{
  "version": 3,
  "sources": ["../../../../../packages/core/review-workflows/admin/src/utils/users.ts", "../../../../../packages/core/review-workflows/admin/src/routes/content-manager/model/components/TableColumns.tsx"],
  "sourcesContent": ["import type { SanitizedAdminUser } from '@strapi/admin/strapi-admin';\r\n\r\n/**\r\n * Retrieves the display name of an admin panel user\r\n */\r\nconst getDisplayName = ({\r\n  firstname,\r\n  lastname,\r\n  username,\r\n  email,\r\n}: Partial<\r\n  Pick<SanitizedAdminUser, 'firstname' | 'lastname' | 'username' | 'email'>\r\n> = {}): string => {\r\n  if (username) {\r\n    return username;\r\n  }\r\n\r\n  // firstname is not required if the user is created with a username\r\n  if (firstname) {\r\n    return `${firstname} ${lastname ?? ''}`.trim();\r\n  }\r\n\r\n  return email ?? '';\r\n};\r\n\r\nexport { getDisplayName };\r\n", "import { SanitizedAdminUser } from '@strapi/admin/strapi-admin';\r\nimport { Box, Flex, Typography } from '@strapi/design-system';\r\n\r\nimport { STAGE_COLOR_DEFAULT } from '../../../../constants';\r\nimport { getStageColorByHex } from '../../../../utils/colors';\r\nimport { getDisplayName } from '../../../../utils/users';\r\n\r\ninterface StageColumnProps {\r\n  documentId?: string;\r\n  id?: number;\r\n  strapi_stage?: {\r\n    color?: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst StageColumn = (props: StageColumnProps) => {\r\n  const { color = STAGE_COLOR_DEFAULT, name } = props.strapi_stage ?? {};\r\n  const { themeColorName } = getStageColorByHex(color) ?? {};\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" gap={2} maxWidth=\"30rem\">\r\n      <Box\r\n        height={2}\r\n        background={color}\r\n        borderColor={themeColorName === 'neutral0' ? 'neutral150' : undefined}\r\n        hasRadius\r\n        shrink={0}\r\n        width={2}\r\n      />\r\n\r\n      <Typography fontWeight=\"regular\" textColor=\"neutral700\" ellipsis>\r\n        {name}\r\n      </Typography>\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface AssigneeColumnProps {\r\n  documentId?: string;\r\n  id?: number;\r\n  strapi_assignee?: Pick<\r\n    SanitizedAdminUser,\r\n    'firstname' | 'lastname' | 'username' | 'email'\r\n  > | null;\r\n}\r\n\r\nconst AssigneeColumn = (props: AssigneeColumnProps) => {\r\n  const { strapi_assignee: user } = props;\r\n  return <Typography textColor=\"neutral800\">{user ? getDisplayName(user) : '-'}</Typography>;\r\n};\r\n\r\nexport { StageColumn, AssigneeColumn };\r\nexport type { StageColumnProps, AssigneeColumnProps };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAKA,IAAM,iBAAiB,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAEI,CAAC,MAAc;AACjB,MAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAGA,MAAI,WAAW;AACb,WAAO,GAAG,SAAS,IAAI,YAAY,EAAE,GAAG,KAAK;AAAA,EAC/C;AAEA,SAAO,SAAS;AAClB;;;ACFI;AALJ,IAAM,cAAc,CAAC,UAA4B;AAC/C,QAAM,EAAE,QAAQ,qBAAqB,KAAK,IAAI,MAAM,gBAAgB,CAAC;AACrE,QAAM,EAAE,eAAe,IAAI,mBAAmB,KAAK,KAAK,CAAC;AAEzD,aACE,yBAAC,QAAK,YAAW,UAAS,KAAK,GAAG,UAAS,SACzC;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,aAAa,mBAAmB,aAAa,eAAe;AAAA,QAC5D,WAAS;AAAA,QACT,QAAQ;AAAA,QACR,OAAO;AAAA;AAAA,IACT;AAAA,QAEA,wBAAC,cAAW,YAAW,WAAU,WAAU,cAAa,UAAQ,MAC7D,gBACH;AAAA,KACF;AAEJ;AAWA,IAAM,iBAAiB,CAAC,UAA+B;AACrD,QAAM,EAAE,iBAAiB,KAAK,IAAI;AAClC,aAAO,wBAAC,cAAW,WAAU,cAAc,iBAAO,eAAe,IAAI,IAAI,KAAI;AAC/E;",
  "names": []
}
