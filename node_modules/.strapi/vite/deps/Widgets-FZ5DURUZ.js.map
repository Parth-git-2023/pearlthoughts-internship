{
  "version": 3,
  "sources": ["../../../../../packages/core/content-manager/admin/src/components/Widgets.tsx", "../../../../../packages/core/content-manager/admin/src/services/homepage.ts"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport { Widget, useTracking } from '@strapi/admin/strapi-admin';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  IconButton,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Tr,\r\n  Typography,\r\n  Portal,\r\n} from '@strapi/design-system';\r\nimport { Pencil } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { styled, DefaultTheme } from 'styled-components';\r\n\r\nimport { DocumentStatus } from '../pages/EditView/components/DocumentStatus';\r\nimport { useGetRecentDocumentsQuery, useGetCountDocumentsQuery } from '../services/homepage';\r\n\r\nimport { RelativeTime } from './RelativeTime';\r\n\r\nimport type { RecentDocument } from '../../../shared/contracts/homepage';\r\n\r\nconst CellTypography = styled(Typography).attrs({ maxWidth: '14.4rem', display: 'block' })`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst RecentDocumentsTable = ({ documents }: { documents: RecentDocument[] }) => {\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n  const navigate = useNavigate();\r\n\r\n  const getEditViewLink = (document: RecentDocument): string => {\r\n    const isSingleType = document.kind === 'singleType';\r\n    const kindPath = isSingleType ? 'single-types' : 'collection-types';\r\n    const queryParams = document.locale ? `?plugins[i18n][locale]=${document.locale}` : '';\r\n\r\n    return `/content-manager/${kindPath}/${document.contentTypeUid}${isSingleType ? '' : '/' + document.documentId}${queryParams}`;\r\n  };\r\n\r\n  const handleRowClick = (document: RecentDocument) => () => {\r\n    trackUsage('willEditEntryFromHome');\r\n    const link = getEditViewLink(document);\r\n    navigate(link);\r\n  };\r\n\r\n  return (\r\n    <Table colCount={5} rowCount={documents?.length ?? 0}>\r\n      <Tbody>\r\n        {documents?.map((document) => (\r\n          <Tr onClick={handleRowClick(document)} cursor=\"pointer\" key={document.documentId}>\r\n            <Td>\r\n              <CellTypography title={document.title} variant=\"omega\" textColor=\"neutral800\">\r\n                {document.title}\r\n              </CellTypography>\r\n            </Td>\r\n            <Td>\r\n              <CellTypography variant=\"omega\" textColor=\"neutral600\">\r\n                {document.kind === 'singleType'\r\n                  ? formatMessage({\r\n                      id: 'content-manager.widget.last-edited.single-type',\r\n                      defaultMessage: 'Single-Type',\r\n                    })\r\n                  : formatMessage({\r\n                      id: document.contentTypeDisplayName,\r\n                      defaultMessage: document.contentTypeDisplayName,\r\n                    })}\r\n              </CellTypography>\r\n            </Td>\r\n            <Td>\r\n              <Box display=\"inline-block\">\r\n                {document.status ? (\r\n                  <DocumentStatus status={document.status} />\r\n                ) : (\r\n                  <Typography textColor=\"neutral600\" aria-hidden>\r\n                    -\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n            </Td>\r\n            <Td>\r\n              <Typography textColor=\"neutral600\">\r\n                <RelativeTime timestamp={new Date(document.updatedAt)} />\r\n              </Typography>\r\n            </Td>\r\n            <Td onClick={(e) => e.stopPropagation()}>\r\n              <Box display=\"inline-block\">\r\n                <IconButton\r\n                  tag={Link}\r\n                  to={getEditViewLink(document)}\r\n                  onClick={() => trackUsage('willEditEntryFromHome')}\r\n                  label={formatMessage({\r\n                    id: 'content-manager.actions.edit.label',\r\n                    defaultMessage: 'Edit',\r\n                  })}\r\n                  variant=\"ghost\"\r\n                >\r\n                  <Pencil />\r\n                </IconButton>\r\n              </Box>\r\n            </Td>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * LastEditedWidget\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst LastEditedWidget = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { data, isLoading, error } = useGetRecentDocumentsQuery({ action: 'update' });\r\n\r\n  if (isLoading) {\r\n    return <Widget.Loading />;\r\n  }\r\n\r\n  if (error || !data) {\r\n    return <Widget.Error />;\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <Widget.NoData>\r\n        {formatMessage({\r\n          id: 'content-manager.widget.last-edited.no-data',\r\n          defaultMessage: 'No edited entries',\r\n        })}\r\n      </Widget.NoData>\r\n    );\r\n  }\r\n\r\n  return <RecentDocumentsTable documents={data} />;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * LastPublishedWidget\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst LastPublishedWidget = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { data, isLoading, error } = useGetRecentDocumentsQuery({ action: 'publish' });\r\n\r\n  if (isLoading) {\r\n    return <Widget.Loading />;\r\n  }\r\n\r\n  if (error || !data) {\r\n    return <Widget.Error />;\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <Widget.NoData>\r\n        {formatMessage({\r\n          id: 'content-manager.widget.last-published.no-data',\r\n          defaultMessage: 'No published entries',\r\n        })}\r\n      </Widget.NoData>\r\n    );\r\n  }\r\n\r\n  return <RecentDocumentsTable documents={data} />;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ChartEntriesWidget\r\n * -----------------------------------------------------------------------------------------------*/\r\nconst RADIUS = 80;\r\nconst STROKE = 10;\r\nconst CIRCUMFERENCE = 2 * Math.PI * (RADIUS - STROKE / 2);\r\n\r\ntype ThemeColor = keyof DefaultTheme['colors'];\r\n\r\nconst ArcChart = styled.circle<{ $arcColor: ThemeColor }>`\r\n  stroke: ${({ theme, $arcColor }) => theme.colors[$arcColor]};\r\n`;\r\n\r\nconst TextChart = styled.tspan<{ $textColor: ThemeColor }>`\r\n  text-transform: lowercase;\r\n  fill: ${({ theme, $textColor }) => theme.colors[$textColor]};\r\n`;\r\n\r\nconst KeyChartItem = styled(Flex)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.breakpoints.small} {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\ninterface ChartData {\r\n  label: string;\r\n  count: number;\r\n  color: ThemeColor;\r\n}\r\n\r\nconst DonutChartSVG = ({ data }: { data: ChartData[] }) => {\r\n  const { locale } = useIntl();\r\n  const { formatMessage } = useIntl();\r\n  const total = data.reduce((acc, curr) => acc + curr.count, 0);\r\n  const [tooltip, setTooltip] = React.useState<{\r\n    visible: boolean;\r\n    x: number;\r\n    y: number;\r\n    value: ChartData | null;\r\n    isTouch?: boolean;\r\n  }>({ visible: false, x: 0, y: 0, value: null });\r\n\r\n  let cumulativePercent = 0;\r\n\r\n  const handleMouseOver = (e: React.MouseEvent<SVGCircleElement>, value: ChartData) => {\r\n    setTooltip({\r\n      visible: true,\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      value,\r\n    });\r\n  };\r\n  const handleMouseOut = () => {\r\n    setTooltip((t) => ({ ...t, visible: false }));\r\n  };\r\n\r\n  const handleFocus = (e: React.FocusEvent<SVGCircleElement>, value: ChartData) => {\r\n    setTooltip({\r\n      visible: true,\r\n      x:\r\n        e.currentTarget.getBoundingClientRect().width / 2 +\r\n        e.currentTarget.getBoundingClientRect().left,\r\n      y:\r\n        e.currentTarget.getBoundingClientRect().height +\r\n        e.currentTarget.getBoundingClientRect().top,\r\n      value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex direction=\"column\" gap={6} margin=\"auto\">\r\n      <svg\r\n        width={RADIUS * 2}\r\n        height={RADIUS * 2}\r\n        viewBox={`0 0 ${RADIUS * 2} ${RADIUS * 2}`}\r\n        style={{ position: 'relative', zIndex: 1 }}\r\n      >\r\n        <g transform={`rotate(-90 ${RADIUS} ${RADIUS})`}>\r\n          {data.map((value) => {\r\n            const percent = (value.count / total) * 100;\r\n            const arcLength = (percent / 100) * CIRCUMFERENCE;\r\n            const dashArray = `${arcLength} ${CIRCUMFERENCE - arcLength}`;\r\n            const dashOffset = CIRCUMFERENCE * (1 - cumulativePercent / 100);\r\n            const el = (\r\n              <ArcChart\r\n                key={value.label}\r\n                cx={RADIUS}\r\n                cy={RADIUS}\r\n                r={RADIUS - STROKE / 2}\r\n                fill=\"none\"\r\n                strokeWidth={STROKE}\r\n                strokeDasharray={dashArray}\r\n                strokeDashoffset={dashOffset}\r\n                style={{ transition: 'stroke-dashoffset 0.3s', cursor: 'pointer' }}\r\n                tabIndex={0}\r\n                aria-describedby={tooltip.visible ? 'chart-tooltip' : undefined}\r\n                onFocus={(e) => handleFocus(e, value)}\r\n                onBlur={handleMouseOut}\r\n                onMouseMove={(e) => handleMouseOver(e, value)}\r\n                onMouseLeave={handleMouseOut}\r\n                $arcColor={value.color}\r\n              />\r\n            );\r\n            cumulativePercent += percent;\r\n            return el;\r\n          })}\r\n        </g>\r\n        <text x={RADIUS} y={RADIUS} textAnchor=\"middle\" fontSize=\"2.4rem\" fontWeight=\"bold\">\r\n          <TextChart x={RADIUS} dy=\"0\" $textColor=\"neutral800\">\r\n            {new Intl.NumberFormat(locale, {\r\n              notation: 'compact',\r\n              maximumFractionDigits: 1,\r\n            }).format(total)}\r\n          </TextChart>\r\n          <TextChart\r\n            x={RADIUS}\r\n            dy=\"1.4em\"\r\n            fontSize=\"1.4rem\"\r\n            fontWeight=\"normal\"\r\n            $textColor=\"neutral600\"\r\n          >\r\n            {formatMessage({\r\n              id: 'content-manager.widget.chart-entries.title',\r\n              defaultMessage: 'entries',\r\n            })}\r\n          </TextChart>\r\n        </text>\r\n      </svg>\r\n      {tooltip.visible && tooltip.value && (\r\n        <Portal\r\n          style={{\r\n            position: 'fixed',\r\n            left: 16,\r\n            top: 16,\r\n            zIndex: 2,\r\n            transform: `translate(${tooltip.x}px, ${tooltip.y}px)`,\r\n          }}\r\n          data-testid=\"entries-chart-tooltip\"\r\n        >\r\n          <Box\r\n            background=\"neutral900\"\r\n            padding={2}\r\n            borderRadius={1}\r\n            textAlign=\"center\"\r\n            role=\"tooltip\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <Typography textColor=\"neutral0\">\r\n              {formatMessage(\r\n                {\r\n                  id: 'content-manager.widget.chart-entries.tooltip',\r\n                  defaultMessage: '{count} items',\r\n                },\r\n                {\r\n                  count: tooltip.value.count,\r\n                  label: tooltip.value.label,\r\n                }\r\n              )}\r\n            </Typography>\r\n          </Box>\r\n        </Portal>\r\n      )}\r\n      <Flex gap={4} wrap=\"wrap\">\r\n        {data.map(\r\n          (value) =>\r\n            value.count > 0 && (\r\n              <KeyChartItem gap={1} key={value.label}>\r\n                <Box background={value.color} padding={2} borderRadius={1} />\r\n                <Typography variant=\"pi\">{value.label}</Typography>\r\n              </KeyChartItem>\r\n            )\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst ChartEntriesWidget = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { data: countDocuments, isLoading, error } = useGetCountDocumentsQuery();\r\n\r\n  if (isLoading) {\r\n    return <Widget.Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Widget.Error />;\r\n  }\r\n\r\n  const { draft, published, modified } = countDocuments ?? {\r\n    draft: 0,\r\n    published: 0,\r\n    modified: 0,\r\n  };\r\n\r\n  const total = draft + published + modified;\r\n\r\n  if (!total) {\r\n    return (\r\n      <Widget.NoData>\r\n        {formatMessage({\r\n          id: 'content-manager.widget.last-published.no-data',\r\n          defaultMessage: 'No published entries',\r\n        })}\r\n      </Widget.NoData>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Flex minHeight=\"100%\">\r\n      <DonutChartSVG\r\n        data={[\r\n          {\r\n            label: formatMessage({\r\n              id: 'content-manager.containers.List.draft',\r\n              defaultMessage: 'Draft',\r\n            }),\r\n            count: draft,\r\n            color: 'secondary500',\r\n          },\r\n          {\r\n            label: formatMessage({\r\n              id: 'content-manager.containers.List.modified',\r\n              defaultMessage: 'Modified',\r\n            }),\r\n            count: modified,\r\n            color: 'alternative500',\r\n          },\r\n          {\r\n            label: formatMessage({\r\n              id: 'content-manager.containers.List.published',\r\n              defaultMessage: 'Published',\r\n            }),\r\n            count: published,\r\n            color: 'success500',\r\n          },\r\n        ]}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport { ChartEntriesWidget, LastEditedWidget, LastPublishedWidget };\r\n", "import * as Homepage from '../../../shared/contracts/homepage';\r\n\r\nimport { contentManagerApi } from './api';\r\n\r\nconst homepageService = contentManagerApi\r\n  .enhanceEndpoints({\r\n    addTagTypes: ['RecentDocumentList', 'CountDocuments'],\r\n  })\r\n  .injectEndpoints({\r\n    /**\r\n     * TODO: Remove overrideExisting when we remove the future flag\r\n     * and delete the old homepage service in the admin\r\n     */\r\n    overrideExisting: true,\r\n    endpoints: (builder) => ({\r\n      getRecentDocuments: builder.query<\r\n        Homepage.GetRecentDocuments.Response['data'],\r\n        Homepage.GetRecentDocuments.Request['query']\r\n      >({\r\n        query: (params) => `/content-manager/homepage/recent-documents?action=${params.action}`,\r\n        transformResponse: (response: Homepage.GetRecentDocuments.Response) => response.data,\r\n        providesTags: (res, _err, { action }) => [\r\n          { type: 'RecentDocumentList' as const, id: action },\r\n        ],\r\n      }),\r\n      getCountDocuments: builder.query<Homepage.GetCountDocuments.Response['data'], void>({\r\n        query: () => '/content-manager/homepage/count-documents',\r\n        transformResponse: (response: Homepage.GetCountDocuments.Response) => response.data,\r\n        providesTags: (_, _err) => ['CountDocuments'],\r\n      }),\r\n    }),\r\n  });\r\n\r\nconst { useGetRecentDocumentsQuery, useGetCountDocumentsQuery } = homepageService;\r\n\r\nexport { useGetRecentDocumentsQuery, useGetCountDocumentsQuery };\r\n"],
  "mappings": "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",
  "names": []
}
