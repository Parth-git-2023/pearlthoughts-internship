{
  "version": 3,
  "sources": ["../../../../../packages/core/content-manager/admin/src/modules/app.ts"],
  "sourcesContent": ["import { createSlice, type PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { GetInitData } from '../../../shared/contracts/init';\r\n\r\nimport type { ContentManagerLink } from '../hooks/useContentManagerInitData';\r\n\r\ninterface AppState {\r\n  collectionTypeLinks: ContentManagerLink[];\r\n  components: GetInitData.Response['data']['components'];\r\n  fieldSizes: GetInitData.Response['data']['fieldSizes'];\r\n  models: GetInitData.Response['data']['contentTypes'];\r\n  singleTypeLinks: ContentManagerLink[];\r\n  isLoading: boolean;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  collectionTypeLinks: [],\r\n  components: [],\r\n  fieldSizes: {},\r\n  models: [],\r\n  singleTypeLinks: [],\r\n  isLoading: true,\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setInitialData(\r\n      state,\r\n      action: PayloadAction<{\r\n        authorizedCollectionTypeLinks: AppState['collectionTypeLinks'];\r\n        authorizedSingleTypeLinks: AppState['singleTypeLinks'];\r\n        components: AppState['components'];\r\n        contentTypeSchemas: AppState['models'];\r\n        fieldSizes: AppState['fieldSizes'];\r\n      }>\r\n    ) {\r\n      const {\r\n        authorizedCollectionTypeLinks,\r\n        authorizedSingleTypeLinks,\r\n        components,\r\n        contentTypeSchemas,\r\n        fieldSizes,\r\n      } = action.payload;\r\n      state.collectionTypeLinks = authorizedCollectionTypeLinks.filter(\r\n        ({ isDisplayed }) => isDisplayed\r\n      );\r\n      state.singleTypeLinks = authorizedSingleTypeLinks.filter(({ isDisplayed }) => isDisplayed);\r\n      state.components = components;\r\n      state.models = contentTypeSchemas;\r\n      state.fieldSizes = fieldSizes;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = appSlice;\r\nconst { setInitialData } = actions;\r\n\r\nexport { reducer, setInitialData };\r\nexport type { AppState };\r\n"],
  "mappings": ";;;;;AAeA,IAAM,eAAyB;AAAA,EAC7B,qBAAqB,CAAC;AAAA,EACtB,YAAY,CAAC;AAAA,EACb,YAAY,CAAC;AAAA,EACb,QAAQ,CAAC;AAAA,EACT,iBAAiB,CAAC;AAAA,EAClB,WAAW;AACb;AAEA,IAAM,WAAW,YAAY;AAAA,EAC3B,MAAM;AAAA,EACN;AAAA,EACA,UAAU;AAAA,IACR,eACE,OACA,QAOA;AACA,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI,OAAO;AACX,YAAM,sBAAsB,8BAA8B;AAAA,QACxD,CAAC,EAAE,YAAY,MAAM;AAAA,MACvB;AACA,YAAM,kBAAkB,0BAA0B,OAAO,CAAC,EAAE,YAAY,MAAM,WAAW;AACzF,YAAM,aAAa;AACnB,YAAM,SAAS;AACf,YAAM,aAAa;AACnB,YAAM,YAAY;AAAA,IACpB;AAAA,EACF;AACF,CAAC;AAED,IAAM,EAAE,SAAS,QAAQ,IAAI;AAC7B,IAAM,EAAE,eAAe,IAAI;",
  "names": []
}
